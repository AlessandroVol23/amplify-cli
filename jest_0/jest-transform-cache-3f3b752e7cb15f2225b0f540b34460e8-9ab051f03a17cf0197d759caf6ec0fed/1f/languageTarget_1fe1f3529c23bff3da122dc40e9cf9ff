6fb95cf70c070f63a947d3d1367bc679
/* istanbul ignore next */var cov_mudcoxv1j = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/questions/languageTarget.js',hash = '01aad3a25b5408344aae1b8e8e6d3b7fe4271399',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/questions/languageTarget.js', statementMap: { '0': { start: { line: 1, column: 17 }, end: { line: 1, column: 36 } }, '1': { start: { line: 3, column: 18 }, end: { line: 3, column: 44 } }, '2': { start: { line: 4, column: 44 }, end: { line: 4, column: 67 } }, '3': { start: { line: 5, column: 53 }, end: { line: 5, column: 75 } }, '4': { start: { line: 7, column: 33 }, end: { line: 11, column: 1 } }, '5': { start: { line: 14, column: 19 }, end: { line: 14, column: 46 } }, '6': { start: { line: 15, column: 20 }, end: { line: 15, column: 92 } }, '7': { start: { line: 16, column: 18 }, end: { line: 16, column: 88 } }, '8': { start: { line: 17, column: 25 }, end: { line: 17, column: 68 } }, '9': { start: { line: 18, column: 24 }, end: { line: 18, column: 64 } }, '10': { start: { line: 19, column: 2 }, end: { line: 21, column: 3 } }, '11': { start: { line: 20, column: 4 }, end: { line: 20, column: 109 } }, '12': { start: { line: 23, column: 2 }, end: { line: 25, column: 3 } }, '13': { start: { line: 24, column: 4 }, end: { line: 24, column: 28 } }, '14': { start: { line: 27, column: 17 }, end: { line: 35, column: 4 } }, '15': { start: { line: 36, column: 2 }, end: { line: 36, column: 23 } }, '16': { start: { line: 39, column: 0 }, end: { line: 39, column: 42 } } }, fnMap: { '0': { name: 'askCodeGenTargetLanguage', decl: { start: { line: 13, column: 15 }, end: { line: 13, column: 39 } }, loc: { start: { line: 13, column: 57 }, end: { line: 37, column: 1 } }, line: 13 } }, branchMap: { '0': { loc: { start: { line: 15, column: 20 }, end: { line: 15, column: 92 } }, type: 'binary-expr', locations: [{ start: { line: 15, column: 20 }, end: { line: 15, column: 45 } }, { start: { line: 15, column: 49 }, end: { line: 15, column: 92 } }], line: 15 }, '1': { loc: { start: { line: 16, column: 18 }, end: { line: 16, column: 88 } }, type: 'binary-expr', locations: [{ start: { line: 16, column: 18 }, end: { line: 16, column: 43 } }, { start: { line: 16, column: 47 }, end: { line: 16, column: 88 } }], line: 16 }, '2': { loc: { start: { line: 17, column: 25 }, end: { line: 17, column: 68 } }, type: 'cond-expr', locations: [{ start: { line: 17, column: 48 }, end: { line: 17, column: 57 } }, { start: { line: 17, column: 60 }, end: { line: 17, column: 68 } }], line: 17 }, '3': { loc: { start: { line: 17, column: 25 }, end: { line: 17, column: 45 } }, type: 'binary-expr', locations: [{ start: { line: 17, column: 25 }, end: { line: 17, column: 34 } }, { start: { line: 17, column: 38 }, end: { line: 17, column: 45 } }], line: 17 }, '4': { loc: { start: { line: 19, column: 2 }, end: { line: 21, column: 3 } }, type: 'if', locations: [{ start: { line: 19, column: 2 }, end: { line: 21, column: 3 } }, { start: { line: 19, column: 2 }, end: { line: 21, column: 3 } }], line: 19 }, '5': { loc: { start: { line: 19, column: 6 }, end: { line: 19, column: 45 } }, type: 'binary-expr', locations: [{ start: { line: 19, column: 6 }, end: { line: 19, column: 20 } }, { start: { line: 19, column: 24 }, end: { line: 19, column: 45 } }], line: 19 }, '6': { loc: { start: { line: 23, column: 2 }, end: { line: 25, column: 3 } }, type: 'if', locations: [{ start: { line: 23, column: 2 }, end: { line: 25, column: 3 } }, { start: { line: 23, column: 2 }, end: { line: 25, column: 3 } }], line: 23 }, '7': { loc: { start: { line: 33, column: 15 }, end: { line: 33, column: 29 } }, type: 'binary-expr', locations: [{ start: { line: 33, column: 15 }, end: { line: 33, column: 21 } }, { start: { line: 33, column: 25 }, end: { line: 33, column: 29 } }], line: 33 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0 }, f: { '0': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const inquirer = /* istanbul ignore next */(cov_mudcoxv1j.s[0]++, require('inquirer'));

const constants = /* istanbul ignore next */(cov_mudcoxv1j.s[1]++, require('../../constants'));
const { AmplifyCodeGenNotSupportedError } = /* istanbul ignore next */(cov_mudcoxv1j.s[2]++, require('../../errors'));
const { getFrontEndHandler, getFrontEndFramework } = /* istanbul ignore next */(cov_mudcoxv1j.s[3]++, require('../../utils'));

const frontEndToTargetMappings = /* istanbul ignore next */(cov_mudcoxv1j.s[4]++, {
  ios: ['swift'],
  javascript: ['javascript', 'typescript', 'flow'],
  angular: ['angular', 'typescript'] });


async function askCodeGenTargetLanguage(context, target) {/* istanbul ignore next */cov_mudcoxv1j.f[0]++;
  const frontend = /* istanbul ignore next */(cov_mudcoxv1j.s[5]++, getFrontEndHandler(context));
  const isAngular = /* istanbul ignore next */(cov_mudcoxv1j.s[6]++, /* istanbul ignore next */(cov_mudcoxv1j.b[0][0]++, frontend === 'javascript') && /* istanbul ignore next */(cov_mudcoxv1j.b[0][1]++, getFrontEndFramework(context) === 'angular'));
  const isIonic = /* istanbul ignore next */(cov_mudcoxv1j.s[7]++, /* istanbul ignore next */(cov_mudcoxv1j.b[1][0]++, frontend === 'javascript') && /* istanbul ignore next */(cov_mudcoxv1j.b[1][1]++, getFrontEndFramework(context) === 'ionic'));
  const targetLanguage = /* istanbul ignore next */(cov_mudcoxv1j.s[8]++, /* istanbul ignore next */(cov_mudcoxv1j.b[3][0]++, isAngular) || /* istanbul ignore next */(cov_mudcoxv1j.b[3][1]++, isIonic) ? /* istanbul ignore next */(cov_mudcoxv1j.b[2][0]++, 'angular') : /* istanbul ignore next */(cov_mudcoxv1j.b[2][1]++, frontend));
  const targetMapping = /* istanbul ignore next */(cov_mudcoxv1j.s[9]++, frontEndToTargetMappings[targetLanguage]); /* istanbul ignore next */cov_mudcoxv1j.s[10]++;
  if ( /* istanbul ignore next */(cov_mudcoxv1j.b[5][0]++, !targetMapping) || /* istanbul ignore next */(cov_mudcoxv1j.b[5][1]++, !targetMapping.length)) {/* istanbul ignore next */cov_mudcoxv1j.b[4][0]++;cov_mudcoxv1j.s[11]++;
    throw new AmplifyCodeGenNotSupportedError(`${frontend} ${constants.ERROR_CODEGEN_TARGET_NOT_SUPPORTED}`);
  } else /* istanbul ignore next */{cov_mudcoxv1j.b[4][1]++;}cov_mudcoxv1j.s[12]++;

  if (targetMapping.length === 1) {/* istanbul ignore next */cov_mudcoxv1j.b[6][0]++;cov_mudcoxv1j.s[13]++;
    return targetMapping[0];
  } else /* istanbul ignore next */{cov_mudcoxv1j.b[6][1]++;}

  const answer = /* istanbul ignore next */(cov_mudcoxv1j.s[14]++, await inquirer.prompt([
  {
    name: 'target',
    type: 'list',
    message: constants.PROMPT_MSG_CODEGEN_TARGET,
    choices: targetMapping,
    default: /* istanbul ignore next */(cov_mudcoxv1j.b[7][0]++, target) || /* istanbul ignore next */(cov_mudcoxv1j.b[7][1]++, null) }])); /* istanbul ignore next */cov_mudcoxv1j.s[15]++;


  return answer.target;
} /* istanbul ignore next */cov_mudcoxv1j.s[16]++;

module.exports = askCodeGenTargetLanguage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhbmd1YWdlVGFyZ2V0LmpzIl0sIm5hbWVzIjpbImlucXVpcmVyIiwicmVxdWlyZSIsImNvbnN0YW50cyIsIkFtcGxpZnlDb2RlR2VuTm90U3VwcG9ydGVkRXJyb3IiLCJnZXRGcm9udEVuZEhhbmRsZXIiLCJnZXRGcm9udEVuZEZyYW1ld29yayIsImZyb250RW5kVG9UYXJnZXRNYXBwaW5ncyIsImlvcyIsImphdmFzY3JpcHQiLCJhbmd1bGFyIiwiYXNrQ29kZUdlblRhcmdldExhbmd1YWdlIiwiY29udGV4dCIsInRhcmdldCIsImZyb250ZW5kIiwiaXNBbmd1bGFyIiwiaXNJb25pYyIsInRhcmdldExhbmd1YWdlIiwidGFyZ2V0TWFwcGluZyIsImxlbmd0aCIsIkVSUk9SX0NPREVHRU5fVEFSR0VUX05PVF9TVVBQT1JURUQiLCJhbnN3ZXIiLCJwcm9tcHQiLCJuYW1lIiwidHlwZSIsIm1lc3NhZ2UiLCJQUk9NUFRfTVNHX0NPREVHRU5fVEFSR0VUIiwiY2hvaWNlcyIsImRlZmF1bHQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiODVJQUFBLE1BQU1BLDREQUFXQyxRQUFRLFVBQVIsQ0FBWCxDQUFOOztBQUVBLE1BQU1DLDZEQUFZRCxRQUFRLGlCQUFSLENBQVosQ0FBTjtBQUNBLE1BQU0sRUFBRUUsK0JBQUYsc0RBQXNDRixRQUFRLGNBQVIsQ0FBdEMsQ0FBTjtBQUNBLE1BQU0sRUFBRUcsa0JBQUYsRUFBc0JDLG9CQUF0QixzREFBK0NKLFFBQVEsYUFBUixDQUEvQyxDQUFOOztBQUVBLE1BQU1LLDRFQUEyQjtBQUMvQkMsT0FBSyxDQUFDLE9BQUQsQ0FEMEI7QUFFL0JDLGNBQVksQ0FBQyxZQUFELEVBQWUsWUFBZixFQUE2QixNQUE3QixDQUZtQjtBQUcvQkMsV0FBUyxDQUFDLFNBQUQsRUFBWSxZQUFaLENBSHNCLEVBQTNCLENBQU47OztBQU1BLGVBQWVDLHdCQUFmLENBQXdDQyxPQUF4QyxFQUFpREMsTUFBakQsRUFBeUQ7QUFDdkQsUUFBTUMsNERBQVdULG1CQUFtQk8sT0FBbkIsQ0FBWCxDQUFOO0FBQ0EsUUFBTUcsNkRBQVksaUVBQWEsWUFBYix5REFBNkJULHFCQUFxQk0sT0FBckIsTUFBa0MsU0FBL0QsQ0FBWixDQUFOO0FBQ0EsUUFBTUksMkRBQVUsaUVBQWEsWUFBYix5REFBNkJWLHFCQUFxQk0sT0FBckIsTUFBa0MsT0FBL0QsQ0FBVixDQUFOO0FBQ0EsUUFBTUssa0VBQWlCLHNIQUFhRCxPQUFiLHdEQUF1QixTQUF2Qix3REFBbUNGLFFBQW5DLENBQWpCLENBQU47QUFDQSxRQUFNSSxpRUFBZ0JYLHlCQUF5QlUsY0FBekIsQ0FBaEIsQ0FBTixDQUx1RDtBQU12RCxNQUFJLHNEQUFDQyxhQUFELHlEQUFrQixDQUFDQSxjQUFjQyxNQUFqQyxDQUFKLEVBQTZDO0FBQzNDLFVBQU0sSUFBSWYsK0JBQUosQ0FBcUMsR0FBRVUsUUFBUyxJQUFHWCxVQUFVaUIsa0NBQW1DLEVBQWhHLENBQU47QUFDRCxHQUZELDBEQU51RDs7QUFVdkQsTUFBSUYsY0FBY0MsTUFBZCxLQUF5QixDQUE3QixFQUFnQztBQUM5QixXQUFPRCxjQUFjLENBQWQsQ0FBUDtBQUNELEdBRkQ7O0FBSUEsUUFBTUcsMkRBQVMsTUFBTXBCLFNBQVNxQixNQUFULENBQWdCO0FBQ25DO0FBQ0VDLFVBQU0sUUFEUjtBQUVFQyxVQUFNLE1BRlI7QUFHRUMsYUFBU3RCLFVBQVV1Qix5QkFIckI7QUFJRUMsYUFBU1QsYUFKWDtBQUtFVSxhQUFTLG1IQUFVLElBQVYsQ0FMWCxFQURtQyxDQUFoQixDQUFmLENBQU4sQ0FkdUQ7OztBQXVCdkQsU0FBT1AsT0FBT1IsTUFBZDtBQUNELEM7O0FBRURnQixPQUFPQyxPQUFQLEdBQWlCbkIsd0JBQWpCIiwiZmlsZSI6Imxhbmd1YWdlVGFyZ2V0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaW5xdWlyZXIgPSByZXF1aXJlKCdpbnF1aXJlcicpO1xuXG5jb25zdCBjb25zdGFudHMgPSByZXF1aXJlKCcuLi8uLi9jb25zdGFudHMnKTtcbmNvbnN0IHsgQW1wbGlmeUNvZGVHZW5Ob3RTdXBwb3J0ZWRFcnJvciB9ID0gcmVxdWlyZSgnLi4vLi4vZXJyb3JzJyk7XG5jb25zdCB7IGdldEZyb250RW5kSGFuZGxlciwgZ2V0RnJvbnRFbmRGcmFtZXdvcmsgfSA9IHJlcXVpcmUoJy4uLy4uL3V0aWxzJyk7XG5cbmNvbnN0IGZyb250RW5kVG9UYXJnZXRNYXBwaW5ncyA9IHtcbiAgaW9zOiBbJ3N3aWZ0J10sXG4gIGphdmFzY3JpcHQ6IFsnamF2YXNjcmlwdCcsICd0eXBlc2NyaXB0JywgJ2Zsb3cnXSxcbiAgYW5ndWxhcjogWydhbmd1bGFyJywgJ3R5cGVzY3JpcHQnXSxcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGFza0NvZGVHZW5UYXJnZXRMYW5ndWFnZShjb250ZXh0LCB0YXJnZXQpIHtcbiAgY29uc3QgZnJvbnRlbmQgPSBnZXRGcm9udEVuZEhhbmRsZXIoY29udGV4dCk7XG4gIGNvbnN0IGlzQW5ndWxhciA9IGZyb250ZW5kID09PSAnamF2YXNjcmlwdCcgJiYgZ2V0RnJvbnRFbmRGcmFtZXdvcmsoY29udGV4dCkgPT09ICdhbmd1bGFyJztcbiAgY29uc3QgaXNJb25pYyA9IGZyb250ZW5kID09PSAnamF2YXNjcmlwdCcgJiYgZ2V0RnJvbnRFbmRGcmFtZXdvcmsoY29udGV4dCkgPT09ICdpb25pYyc7XG4gIGNvbnN0IHRhcmdldExhbmd1YWdlID0gaXNBbmd1bGFyIHx8IGlzSW9uaWMgPyAnYW5ndWxhcicgOiBmcm9udGVuZDtcbiAgY29uc3QgdGFyZ2V0TWFwcGluZyA9IGZyb250RW5kVG9UYXJnZXRNYXBwaW5nc1t0YXJnZXRMYW5ndWFnZV07XG4gIGlmICghdGFyZ2V0TWFwcGluZyB8fCAhdGFyZ2V0TWFwcGluZy5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgQW1wbGlmeUNvZGVHZW5Ob3RTdXBwb3J0ZWRFcnJvcihgJHtmcm9udGVuZH0gJHtjb25zdGFudHMuRVJST1JfQ09ERUdFTl9UQVJHRVRfTk9UX1NVUFBPUlRFRH1gKTtcbiAgfVxuXG4gIGlmICh0YXJnZXRNYXBwaW5nLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiB0YXJnZXRNYXBwaW5nWzBdO1xuICB9XG5cbiAgY29uc3QgYW5zd2VyID0gYXdhaXQgaW5xdWlyZXIucHJvbXB0KFtcbiAgICB7XG4gICAgICBuYW1lOiAndGFyZ2V0JyxcbiAgICAgIHR5cGU6ICdsaXN0JyxcbiAgICAgIG1lc3NhZ2U6IGNvbnN0YW50cy5QUk9NUFRfTVNHX0NPREVHRU5fVEFSR0VULFxuICAgICAgY2hvaWNlczogdGFyZ2V0TWFwcGluZyxcbiAgICAgIGRlZmF1bHQ6IHRhcmdldCB8fCBudWxsLFxuICAgIH0sXG4gIF0pO1xuICByZXR1cm4gYW5zd2VyLnRhcmdldDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc2tDb2RlR2VuVGFyZ2V0TGFuZ3VhZ2U7XG4iXX0=