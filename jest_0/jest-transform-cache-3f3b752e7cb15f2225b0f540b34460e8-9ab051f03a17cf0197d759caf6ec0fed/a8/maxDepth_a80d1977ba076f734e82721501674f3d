7bfa29891eadacb66aee6cd0573522cb
/* istanbul ignore next */var cov_1ba2laplh8 = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/questions/maxDepth.js',hash = '0f5f022306520c35b3412fac763d60e2a6cc499c',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/questions/maxDepth.js', statementMap: { '0': { start: { line: 1, column: 17 }, end: { line: 1, column: 36 } }, '1': { start: { line: 3, column: 18 }, end: { line: 3, column: 44 } }, '2': { start: { line: 6, column: 17 }, end: { line: 19, column: 4 } }, '3': { start: { line: 12, column: 20 }, end: { line: 12, column: 44 } }, '4': { start: { line: 13, column: 8 }, end: { line: 15, column: 42 } }, '5': { start: { line: 21, column: 2 }, end: { line: 21, column: 46 } }, '6': { start: { line: 24, column: 0 }, end: { line: 24, column: 29 } } }, fnMap: { '0': { name: 'askMaxDepth', decl: { start: { line: 5, column: 15 }, end: { line: 5, column: 26 } }, loc: { start: { line: 5, column: 45 }, end: { line: 22, column: 1 } }, line: 5 }, '1': { name: '(anonymous_1)', decl: { start: { line: 11, column: 16 }, end: { line: 11, column: 17 } }, loc: { start: { line: 11, column: 25 }, end: { line: 16, column: 7 } }, line: 11 } }, branchMap: { '0': { loc: { start: { line: 5, column: 27 }, end: { line: 5, column: 43 } }, type: 'default-arg', locations: [{ start: { line: 5, column: 42 }, end: { line: 5, column: 43 } }], line: 5 }, '1': { loc: { start: { line: 13, column: 15 }, end: { line: 15, column: 41 } }, type: 'cond-expr', locations: [{ start: { line: 14, column: 12 }, end: { line: 14, column: 16 } }, { start: { line: 15, column: 12 }, end: { line: 15, column: 41 } }], line: 13 }, '2': { loc: { start: { line: 13, column: 15 }, end: { line: 13, column: 71 } }, type: 'binary-expr', locations: [{ start: { line: 13, column: 15 }, end: { line: 13, column: 36 } }, { start: { line: 13, column: 40 }, end: { line: 13, column: 60 } }, { start: { line: 13, column: 64 }, end: { line: 13, column: 71 } }], line: 13 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0], '1': [0, 0], '2': [0, 0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const inquirer = /* istanbul ignore next */(cov_1ba2laplh8.s[0]++, require('inquirer'));

const constants = /* istanbul ignore next */(cov_1ba2laplh8.s[1]++, require('../../constants'));

async function askMaxDepth(defaultDepth = /* istanbul ignore next */(cov_1ba2laplh8.b[0][0]++, 2)) {/* istanbul ignore next */cov_1ba2laplh8.f[0]++;
  const answer = /* istanbul ignore next */(cov_1ba2laplh8.s[2]++, await inquirer.prompt([
  {
    name: 'maxDepth',
    message: constants.PROMPT_MSG_MAX_DEPTH,
    type: 'input',
    validate: val => {/* istanbul ignore next */cov_1ba2laplh8.f[1]++;
      const num = /* istanbul ignore next */(cov_1ba2laplh8.s[3]++, Number.parseInt(val, 10)); /* istanbul ignore next */cov_1ba2laplh8.s[4]++;
      return (/* istanbul ignore next */(cov_1ba2laplh8.b[2][0]++, Number.isInteger(num)) && /* istanbul ignore next */(cov_1ba2laplh8.b[2][1]++, Number.isFinite(num)) && /* istanbul ignore next */(cov_1ba2laplh8.b[2][2]++, num > 0) ? /* istanbul ignore next */(cov_1ba2laplh8.b[1][0]++,
        true) : /* istanbul ignore next */(cov_1ba2laplh8.b[1][1]++,
        constants.ERROR_MSG_MAX_DEPTH));
    },
    default: defaultDepth }])); /* istanbul ignore next */cov_1ba2laplh8.s[5]++;



  return Number.parseInt(answer.maxDepth, 10);
} /* istanbul ignore next */cov_1ba2laplh8.s[6]++;

module.exports = askMaxDepth;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1heERlcHRoLmpzIl0sIm5hbWVzIjpbImlucXVpcmVyIiwicmVxdWlyZSIsImNvbnN0YW50cyIsImFza01heERlcHRoIiwiZGVmYXVsdERlcHRoIiwiYW5zd2VyIiwicHJvbXB0IiwibmFtZSIsIm1lc3NhZ2UiLCJQUk9NUFRfTVNHX01BWF9ERVBUSCIsInR5cGUiLCJ2YWxpZGF0ZSIsInZhbCIsIm51bSIsIk51bWJlciIsInBhcnNlSW50IiwiaXNJbnRlZ2VyIiwiaXNGaW5pdGUiLCJFUlJPUl9NU0dfTUFYX0RFUFRIIiwiZGVmYXVsdCIsIm1heERlcHRoIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Im05RUFBQSxNQUFNQSw2REFBV0MsUUFBUSxVQUFSLENBQVgsQ0FBTjs7QUFFQSxNQUFNQyw4REFBWUQsUUFBUSxpQkFBUixDQUFaLENBQU47O0FBRUEsZUFBZUUsV0FBZixDQUEyQkMsb0VBQWUsQ0FBZixDQUEzQixFQUE2QztBQUMzQyxRQUFNQywyREFBUyxNQUFNTCxTQUFTTSxNQUFULENBQWdCO0FBQ25DO0FBQ0VDLFVBQU0sVUFEUjtBQUVFQyxhQUFTTixVQUFVTyxvQkFGckI7QUFHRUMsVUFBTSxPQUhSO0FBSUVDLGNBQVdDLEdBQUQsSUFBUztBQUNqQixZQUFNQyx3REFBTUMsT0FBT0MsUUFBUCxDQUFnQkgsR0FBaEIsRUFBcUIsRUFBckIsQ0FBTixDQUFOLENBRGlCO0FBRWpCLGFBQU8sNkRBQU9JLFNBQVAsQ0FBaUJILEdBQWpCLDJEQUF5QkMsT0FBT0csUUFBUCxDQUFnQkosR0FBaEIsQ0FBekIsMERBQWlEQSxNQUFNLENBQXZEO0FBQ0gsWUFERztBQUVIWCxrQkFBVWdCLG1CQUZQLENBQVA7QUFHRCxLQVRIO0FBVUVDLGFBQVNmLFlBVlgsRUFEbUMsQ0FBaEIsQ0FBZixDQUFOLENBRDJDOzs7O0FBZ0IzQyxTQUFPVSxPQUFPQyxRQUFQLENBQWdCVixPQUFPZSxRQUF2QixFQUFpQyxFQUFqQyxDQUFQO0FBQ0QsQzs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQm5CLFdBQWpCIiwiZmlsZSI6Im1heERlcHRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaW5xdWlyZXIgPSByZXF1aXJlKCdpbnF1aXJlcicpO1xuXG5jb25zdCBjb25zdGFudHMgPSByZXF1aXJlKCcuLi8uLi9jb25zdGFudHMnKTtcblxuYXN5bmMgZnVuY3Rpb24gYXNrTWF4RGVwdGgoZGVmYXVsdERlcHRoID0gMikge1xuICBjb25zdCBhbnN3ZXIgPSBhd2FpdCBpbnF1aXJlci5wcm9tcHQoW1xuICAgIHtcbiAgICAgIG5hbWU6ICdtYXhEZXB0aCcsXG4gICAgICBtZXNzYWdlOiBjb25zdGFudHMuUFJPTVBUX01TR19NQVhfREVQVEgsXG4gICAgICB0eXBlOiAnaW5wdXQnLFxuICAgICAgdmFsaWRhdGU6ICh2YWwpID0+IHtcbiAgICAgICAgY29uc3QgbnVtID0gTnVtYmVyLnBhcnNlSW50KHZhbCwgMTApO1xuICAgICAgICByZXR1cm4gTnVtYmVyLmlzSW50ZWdlcihudW0pICYmIE51bWJlci5pc0Zpbml0ZShudW0pICYmIG51bSA+IDBcbiAgICAgICAgICA/IHRydWVcbiAgICAgICAgICA6IGNvbnN0YW50cy5FUlJPUl9NU0dfTUFYX0RFUFRIO1xuICAgICAgfSxcbiAgICAgIGRlZmF1bHQ6IGRlZmF1bHREZXB0aCxcbiAgICB9LFxuICBdKTtcblxuICByZXR1cm4gTnVtYmVyLnBhcnNlSW50KGFuc3dlci5tYXhEZXB0aCwgMTApO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFza01heERlcHRoO1xuIl19