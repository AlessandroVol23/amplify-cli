bc9f48ff2e3eaff4c0e63f1a39f8199f
/* istanbul ignore next */var cov_15nw7yde8j = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/utils/generateIntrospectionSchemaWithProgress.js',hash = '9f1d7276627f1b5ab442e9462612ef371450fa68',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/utils/generateIntrospectionSchemaWithProgress.js', statementMap: { '0': { start: { line: 1, column: 12 }, end: { line: 1, column: 26 } }, '1': { start: { line: 3, column: 36 }, end: { line: 3, column: 76 } }, '2': { start: { line: 4, column: 18 }, end: { line: 4, column: 41 } }, '3': { start: { line: 7, column: 26 }, end: { line: 7, column: 76 } }, '4': { start: { line: 8, column: 2 }, end: { line: 8, column: 26 } }, '5': { start: { line: 9, column: 2 }, end: { line: 21, column: 3 } }, '6': { start: { line: 10, column: 27 }, end: { line: 15, column: 5 } }, '7': { start: { line: 16, column: 4 }, end: { line: 16, column: 69 } }, '8': { start: { line: 17, column: 4 }, end: { line: 17, column: 26 } }, '9': { start: { line: 19, column: 4 }, end: { line: 19, column: 64 } }, '10': { start: { line: 20, column: 4 }, end: { line: 20, column: 12 } }, '11': { start: { line: 24, column: 0 }, end: { line: 24, column: 51 } } }, fnMap: { '0': { name: 'downloadSchemaWithProgressSpinner', decl: { start: { line: 6, column: 15 }, end: { line: 6, column: 48 } }, loc: { start: { line: 6, column: 91 }, end: { line: 22, column: 1 } }, line: 6 } }, branchMap: {}, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0 }, f: { '0': 0 }, b: {}, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const Ora = /* istanbul ignore next */(cov_15nw7yde8j.s[0]++, require('ora'));

const downloadIntrospectionSchema = /* istanbul ignore next */(cov_15nw7yde8j.s[1]++, require('./downloadIntrospectionSchema'));
const constants = /* istanbul ignore next */(cov_15nw7yde8j.s[2]++, require('../constants'));

async function downloadSchemaWithProgressSpinner(context, apiId, downloadLocation, region) {/* istanbul ignore next */cov_15nw7yde8j.f[0]++;
  const downloadSpinner = /* istanbul ignore next */(cov_15nw7yde8j.s[3]++, new Ora(constants.INFO_MESSAGE_DOWNLOADING_SCHEMA)); /* istanbul ignore next */cov_15nw7yde8j.s[4]++;
  downloadSpinner.start(); /* istanbul ignore next */cov_15nw7yde8j.s[5]++;
  try {
    const schemaLocation = /* istanbul ignore next */(cov_15nw7yde8j.s[6]++, await downloadIntrospectionSchema(
    context,
    apiId,
    downloadLocation,
    region)); /* istanbul ignore next */cov_15nw7yde8j.s[7]++;

    downloadSpinner.succeed(constants.INFO_MESSAGE_DOWNLOAD_SUCCESS); /* istanbul ignore next */cov_15nw7yde8j.s[8]++;
    return schemaLocation;
  } catch (e) {/* istanbul ignore next */cov_15nw7yde8j.s[9]++;
    downloadSpinner.fail(constants.INFO_MESSAGE_DOWNLOAD_ERROR); /* istanbul ignore next */cov_15nw7yde8j.s[10]++;
    throw e;
  }
} /* istanbul ignore next */cov_15nw7yde8j.s[11]++;

module.exports = downloadSchemaWithProgressSpinner;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdlbmVyYXRlSW50cm9zcGVjdGlvblNjaGVtYVdpdGhQcm9ncmVzcy5qcyJdLCJuYW1lcyI6WyJPcmEiLCJyZXF1aXJlIiwiZG93bmxvYWRJbnRyb3NwZWN0aW9uU2NoZW1hIiwiY29uc3RhbnRzIiwiZG93bmxvYWRTY2hlbWFXaXRoUHJvZ3Jlc3NTcGlubmVyIiwiY29udGV4dCIsImFwaUlkIiwiZG93bmxvYWRMb2NhdGlvbiIsInJlZ2lvbiIsImRvd25sb2FkU3Bpbm5lciIsIklORk9fTUVTU0FHRV9ET1dOTE9BRElOR19TQ0hFTUEiLCJzdGFydCIsInNjaGVtYUxvY2F0aW9uIiwic3VjY2VlZCIsIklORk9fTUVTU0FHRV9ET1dOTE9BRF9TVUNDRVNTIiwiZSIsImZhaWwiLCJJTkZPX01FU1NBR0VfRE9XTkxPQURfRVJST1IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiKzVEQUFBLE1BQU1BLHdEQUFNQyxRQUFRLEtBQVIsQ0FBTixDQUFOOztBQUVBLE1BQU1DLGdGQUE4QkQsUUFBUSwrQkFBUixDQUE5QixDQUFOO0FBQ0EsTUFBTUUsOERBQVlGLFFBQVEsY0FBUixDQUFaLENBQU47O0FBRUEsZUFBZUcsaUNBQWYsQ0FBaURDLE9BQWpELEVBQTBEQyxLQUExRCxFQUFpRUMsZ0JBQWpFLEVBQW1GQyxNQUFuRixFQUEyRjtBQUN6RixRQUFNQyxvRUFBa0IsSUFBSVQsR0FBSixDQUFRRyxVQUFVTywrQkFBbEIsQ0FBbEIsQ0FBTixDQUR5RjtBQUV6RkQsa0JBQWdCRSxLQUFoQixHQUZ5RjtBQUd6RixNQUFJO0FBQ0YsVUFBTUMsbUVBQWlCLE1BQU1WO0FBQzNCRyxXQUQyQjtBQUUzQkMsU0FGMkI7QUFHM0JDLG9CQUgyQjtBQUkzQkMsVUFKMkIsQ0FBdkIsQ0FBTixDQURFOztBQU9GQyxvQkFBZ0JJLE9BQWhCLENBQXdCVixVQUFVVyw2QkFBbEMsRUFQRTtBQVFGLFdBQU9GLGNBQVA7QUFDRCxHQVRELENBU0UsT0FBT0csQ0FBUCxFQUFVO0FBQ1ZOLG9CQUFnQk8sSUFBaEIsQ0FBcUJiLFVBQVVjLDJCQUEvQixFQURVO0FBRVYsVUFBTUYsQ0FBTjtBQUNEO0FBQ0YsQzs7QUFFREcsT0FBT0MsT0FBUCxHQUFpQmYsaUNBQWpCIiwiZmlsZSI6ImdlbmVyYXRlSW50cm9zcGVjdGlvblNjaGVtYVdpdGhQcm9ncmVzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IE9yYSA9IHJlcXVpcmUoJ29yYScpO1xuXG5jb25zdCBkb3dubG9hZEludHJvc3BlY3Rpb25TY2hlbWEgPSByZXF1aXJlKCcuL2Rvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYScpO1xuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGRvd25sb2FkU2NoZW1hV2l0aFByb2dyZXNzU3Bpbm5lcihjb250ZXh0LCBhcGlJZCwgZG93bmxvYWRMb2NhdGlvbiwgcmVnaW9uKSB7XG4gIGNvbnN0IGRvd25sb2FkU3Bpbm5lciA9IG5ldyBPcmEoY29uc3RhbnRzLklORk9fTUVTU0FHRV9ET1dOTE9BRElOR19TQ0hFTUEpO1xuICBkb3dubG9hZFNwaW5uZXIuc3RhcnQoKTtcbiAgdHJ5IHtcbiAgICBjb25zdCBzY2hlbWFMb2NhdGlvbiA9IGF3YWl0IGRvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYShcbiAgICAgIGNvbnRleHQsXG4gICAgICBhcGlJZCxcbiAgICAgIGRvd25sb2FkTG9jYXRpb24sXG4gICAgICByZWdpb24sXG4gICAgKTtcbiAgICBkb3dubG9hZFNwaW5uZXIuc3VjY2VlZChjb25zdGFudHMuSU5GT19NRVNTQUdFX0RPV05MT0FEX1NVQ0NFU1MpO1xuICAgIHJldHVybiBzY2hlbWFMb2NhdGlvbjtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGRvd25sb2FkU3Bpbm5lci5mYWlsKGNvbnN0YW50cy5JTkZPX01FU1NBR0VfRE9XTkxPQURfRVJST1IpO1xuICAgIHRocm93IGU7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb3dubG9hZFNjaGVtYVdpdGhQcm9ncmVzc1NwaW5uZXI7XG4iXX0=