f08cba28627cb39fd309a0960820c2b1
/* istanbul ignore next */var cov_1brtfy2lau = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/commands/add.js',hash = '9c69a28152bee3ba3ac696dc843099a8927df506',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/commands/add.js', statementMap: { '0': { start: { line: 1, column: 12 }, end: { line: 1, column: 26 } }, '1': { start: { line: 2, column: 19 }, end: { line: 2, column: 47 } }, '2': { start: { line: 3, column: 18 }, end: { line: 3, column: 41 } }, '3': { start: { line: 4, column: 27 }, end: { line: 4, column: 50 } }, '4': { start: { line: 5, column: 22 }, end: { line: 5, column: 40 } }, '5': { start: { line: 10, column: 4 }, end: { line: 10, column: 24 } }, '6': { start: { line: 18, column: 4 }, end: { line: 18, column: 23 } }, '7': { start: { line: 19, column: 23 }, end: { line: 19, column: 52 } }, '8': { start: { line: 20, column: 28 }, end: { line: 20, column: 74 } }, '9': { start: { line: 23, column: 15 }, end: { line: 23, column: 43 } }, '10': { start: { line: 24, column: 17 }, end: { line: 24, column: 36 } }, '11': { start: { line: 25, column: 2 }, end: { line: 27, column: 3 } }, '12': { start: { line: 26, column: 4 }, end: { line: 26, column: 65 } }, '13': { start: { line: 29, column: 2 }, end: { line: 63, column: 3 } }, '14': { start: { line: 30, column: 33 }, end: { line: 30, column: 62 } }, '15': { start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }, '16': { start: { line: 32, column: 6 }, end: { line: 32, column: 85 } }, '17': { start: { line: 34, column: 28 }, end: { line: 34, column: 67 } }, '18': { start: { line: 34, column: 61 }, end: { line: 34, column: 66 } }, '19': { start: { line: 35, column: 4 }, end: { line: 37, column: 5 } }, '20': { start: { line: 36, column: 6 }, end: { line: 36, column: 87 } }, '21': { start: { line: 38, column: 4 }, end: { line: 38, column: 40 } }, '22': { start: { line: 40, column: 22 }, end: { line: 40, column: 26 } }, '23': { start: { line: 41, column: 4 }, end: { line: 62, column: 5 } }, '24': { start: { line: 42, column: 31 }, end: { line: 42, column: 40 } }, '25': { start: { line: 43, column: 6 }, end: { line: 61, column: 7 } }, '26': { start: { line: 44, column: 8 }, end: { line: 44, column: 54 } }, '27': { start: { line: 45, column: 8 }, end: { line: 45, column: 69 } }, '28': { start: { line: 46, column: 8 }, end: { line: 46, column: 35 } }, '29': { start: { line: 47, column: 8 }, end: { line: 49, column: 9 } }, '30': { start: { line: 48, column: 10 }, end: { line: 48, column: 69 } }, '31': { start: { line: 51, column: 8 }, end: { line: 51, column: 47 } }, '32': { start: { line: 52, column: 8 }, end: { line: 52, column: 14 } }, '33': { start: { line: 54, column: 8 }, end: { line: 54, column: 32 } }, '34': { start: { line: 55, column: 8 }, end: { line: 60, column: 9 } }, '35': { start: { line: 56, column: 10 }, end: { line: 56, column: 78 } }, '36': { start: { line: 57, column: 10 }, end: { line: 57, column: 81 } }, '37': { start: { line: 59, column: 10 }, end: { line: 59, column: 18 } }, '38': { start: { line: 65, column: 2 }, end: { line: 67, column: 3 } }, '39': { start: { line: 66, column: 4 }, end: { line: 66, column: 11 } }, '40': { start: { line: 68, column: 17 }, end: { line: 68, column: 46 } }, '41': { start: { line: 70, column: 17 }, end: { line: 75, column: 3 } }, '42': { start: { line: 77, column: 21 }, end: { line: 90, column: 3 } }, '43': { start: { line: 92, column: 2 }, end: { line: 94, column: 3 } }, '44': { start: { line: 93, column: 4 }, end: { line: 93, column: 59 } }, '45': { start: { line: 95, column: 2 }, end: { line: 95, column: 32 } }, '46': { start: { line: 96, column: 2 }, end: { line: 98, column: 3 } }, '47': { start: { line: 97, column: 4 }, end: { line: 97, column: 45 } }, '48': { start: { line: 99, column: 2 }, end: { line: 101, column: 3 } }, '49': { start: { line: 100, column: 4 }, end: { line: 100, column: 40 } }, '50': { start: { line: 102, column: 2 }, end: { line: 102, column: 16 } }, '51': { start: { line: 105, column: 0 }, end: { line: 105, column: 21 } } }, fnMap: { '0': { name: 'add', decl: { start: { line: 22, column: 15 }, end: { line: 22, column: 18 } }, loc: { start: { line: 22, column: 42 }, end: { line: 103, column: 1 } }, line: 22 }, '1': { name: '(anonymous_1)', decl: { start: { line: 34, column: 56 }, end: { line: 34, column: 57 } }, loc: { start: { line: 34, column: 61 }, end: { line: 34, column: 66 } }, line: 34 } }, branchMap: { '0': { loc: { start: { line: 22, column: 28 }, end: { line: 22, column: 40 } }, type: 'default-arg', locations: [{ start: { line: 22, column: 36 }, end: { line: 22, column: 40 } }], line: 22 }, '1': { loc: { start: { line: 25, column: 2 }, end: { line: 27, column: 3 } }, type: 'if', locations: [{ start: { line: 25, column: 2 }, end: { line: 27, column: 3 } }, { start: { line: 25, column: 2 }, end: { line: 27, column: 3 } }], line: 25 }, '2': { loc: { start: { line: 29, column: 2 }, end: { line: 63, column: 3 } }, type: 'if', locations: [{ start: { line: 29, column: 2 }, end: { line: 63, column: 3 } }, { start: { line: 29, column: 2 }, end: { line: 63, column: 3 } }], line: 29 }, '3': { loc: { start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }, type: 'if', locations: [{ start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }, { start: { line: 31, column: 4 }, end: { line: 33, column: 5 } }], line: 31 }, '4': { loc: { start: { line: 35, column: 4 }, end: { line: 37, column: 5 } }, type: 'if', locations: [{ start: { line: 35, column: 4 }, end: { line: 37, column: 5 } }, { start: { line: 35, column: 4 }, end: { line: 37, column: 5 } }], line: 35 }, '5': { loc: { start: { line: 47, column: 8 }, end: { line: 49, column: 9 } }, type: 'if', locations: [{ start: { line: 47, column: 8 }, end: { line: 49, column: 9 } }, { start: { line: 47, column: 8 }, end: { line: 49, column: 9 } }], line: 47 }, '6': { loc: { start: { line: 55, column: 8 }, end: { line: 60, column: 9 } }, type: 'if', locations: [{ start: { line: 55, column: 8 }, end: { line: 60, column: 9 } }, { start: { line: 55, column: 8 }, end: { line: 60, column: 9 } }], line: 55 }, '7': { loc: { start: { line: 65, column: 2 }, end: { line: 67, column: 3 } }, type: 'if', locations: [{ start: { line: 65, column: 2 }, end: { line: 67, column: 3 } }, { start: { line: 65, column: 2 }, end: { line: 67, column: 3 } }], line: 65 }, '8': { loc: { start: { line: 84, column: 21 }, end: { line: 84, column: 40 } }, type: 'binary-expr', locations: [{ start: { line: 84, column: 21 }, end: { line: 84, column: 34 } }, { start: { line: 84, column: 38 }, end: { line: 84, column: 40 } }], line: 84 }, '9': { loc: { start: { line: 85, column: 25 }, end: { line: 85, column: 55 } }, type: 'binary-expr', locations: [{ start: { line: 85, column: 25 }, end: { line: 85, column: 49 } }, { start: { line: 85, column: 53 }, end: { line: 85, column: 55 } }], line: 85 }, '10': { loc: { start: { line: 92, column: 2 }, end: { line: 94, column: 3 } }, type: 'if', locations: [{ start: { line: 92, column: 2 }, end: { line: 94, column: 3 } }, { start: { line: 92, column: 2 }, end: { line: 94, column: 3 } }], line: 92 }, '11': { loc: { start: { line: 96, column: 2 }, end: { line: 98, column: 3 } }, type: 'if', locations: [{ start: { line: 96, column: 2 }, end: { line: 98, column: 3 } }, { start: { line: 96, column: 2 }, end: { line: 98, column: 3 } }], line: 96 }, '12': { loc: { start: { line: 99, column: 2 }, end: { line: 101, column: 3 } }, type: 'if', locations: [{ start: { line: 99, column: 2 }, end: { line: 101, column: 3 } }, { start: { line: 99, column: 2 }, end: { line: 101, column: 3 } }], line: 99 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0, '32': 0, '33': 0, '34': 0, '35': 0, '36': 0, '37': 0, '38': 0, '39': 0, '40': 0, '41': 0, '42': 0, '43': 0, '44': 0, '45': 0, '46': 0, '47': 0, '48': 0, '49': 0, '50': 0, '51': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0], '8': [0, 0], '9': [0, 0], '10': [0, 0], '11': [0, 0], '12': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const Ora = /* istanbul ignore next */(cov_1brtfy2lau.s[0]++, require('ora'));
const loadConfig = /* istanbul ignore next */(cov_1brtfy2lau.s[1]++, require('../codegen-config'));
const constants = /* istanbul ignore next */(cov_1brtfy2lau.s[2]++, require('../constants'));
const generateStatements = /* istanbul ignore next */(cov_1brtfy2lau.s[3]++, require('./statements'));
const generateTypes = /* istanbul ignore next */(cov_1brtfy2lau.s[4]++, require('./types'));
const {
  AmplifyCodeGenNoAppSyncAPIAvailableError: NoAppSyncAPIAvailableError,
  AmplifyCodeGenAPIPendingPush,
  AmplifyCodeGenAPINotFoundError } = /* istanbul ignore next */(cov_1brtfy2lau.s[5]++,
require('../errors'));
const {
  downloadIntrospectionSchemaWithProgress,
  getAppSyncAPIDetails,
  getAppSyncAPIInfo,
  getProjectAwsRegion,
  updateAmplifyMeta,
  selectAPIKey } = /* istanbul ignore next */(cov_1brtfy2lau.s[6]++,
require('../utils'));
const addWalkThrough = /* istanbul ignore next */(cov_1brtfy2lau.s[7]++, require('../walkthrough/add'));
const changeAppSyncRegion = /* istanbul ignore next */(cov_1brtfy2lau.s[8]++, require('../walkthrough/changeAppSyncRegions'));

async function add(context, apiId = /* istanbul ignore next */(cov_1brtfy2lau.b[0][0]++, null)) {/* istanbul ignore next */cov_1brtfy2lau.f[0]++;
  let region = /* istanbul ignore next */(cov_1brtfy2lau.s[9]++, getProjectAwsRegion(context));
  const config = /* istanbul ignore next */(cov_1brtfy2lau.s[10]++, loadConfig(context)); /* istanbul ignore next */cov_1brtfy2lau.s[11]++;
  if (config.getProjects().length) {/* istanbul ignore next */cov_1brtfy2lau.b[1][0]++;cov_1brtfy2lau.s[12]++;
    throw new Error(constants.ERROR_CODEGEN_SUPPORT_MAX_ONE_API);
  } else /* istanbul ignore next */{cov_1brtfy2lau.b[1][1]++;}
  let apiDetails; /* istanbul ignore next */cov_1brtfy2lau.s[13]++;
  if (!apiId) {/* istanbul ignore next */cov_1brtfy2lau.b[2][0]++;
    const availableAppSyncApis = /* istanbul ignore next */(cov_1brtfy2lau.s[14]++, getAppSyncAPIDetails(context)); // published and un-published
    /* istanbul ignore next */cov_1brtfy2lau.s[15]++;if (availableAppSyncApis.length === 0) {/* istanbul ignore next */cov_1brtfy2lau.b[3][0]++;cov_1brtfy2lau.s[16]++;
      throw new NoAppSyncAPIAvailableError(constants.ERROR_CODEGEN_NO_API_AVAILABLE);
    } else /* istanbul ignore next */{cov_1brtfy2lau.b[3][1]++;}
    const pendingPushAPIs = /* istanbul ignore next */(cov_1brtfy2lau.s[17]++, availableAppSyncApis.filter(a => {/* istanbul ignore next */cov_1brtfy2lau.f[1]++;cov_1brtfy2lau.s[18]++;return !a.id;})); /* istanbul ignore next */cov_1brtfy2lau.s[19]++;
    if (pendingPushAPIs.length) {/* istanbul ignore next */cov_1brtfy2lau.b[4][0]++;cov_1brtfy2lau.s[20]++;
      throw new AmplifyCodeGenAPIPendingPush(constants.ERROR_CODEGEN_PENDING_API_PUSH);
    } else /* istanbul ignore next */{cov_1brtfy2lau.b[4][1]++;}cov_1brtfy2lau.s[21]++;
    [apiDetails] = availableAppSyncApis;
  } else {/* istanbul ignore next */cov_1brtfy2lau.b[2][1]++;
    let shouldRetry = /* istanbul ignore next */(cov_1brtfy2lau.s[22]++, true); /* istanbul ignore next */cov_1brtfy2lau.s[23]++;
    while (shouldRetry) {
      const apiDetailSpinner = /* istanbul ignore next */(cov_1brtfy2lau.s[24]++, new Ora()); /* istanbul ignore next */cov_1brtfy2lau.s[25]++;
      try {/* istanbul ignore next */cov_1brtfy2lau.s[26]++;
        apiDetailSpinner.start('Getting API details'); /* istanbul ignore next */cov_1brtfy2lau.s[27]++;
        apiDetails = await getAppSyncAPIInfo(context, apiId, region); /* istanbul ignore next */cov_1brtfy2lau.s[28]++;
        apiDetailSpinner.succeed(); /* istanbul ignore next */cov_1brtfy2lau.s[29]++;
        if (apiDetails.securityType === 'API_KEY') {/* istanbul ignore next */cov_1brtfy2lau.b[5][0]++;cov_1brtfy2lau.s[30]++;
          apiDetails.apiKey = await selectAPIKey(apiDetails.apiKeys);
        } else /* istanbul ignore next */{cov_1brtfy2lau.b[5][1]++;}cov_1brtfy2lau.s[31]++;

        updateAmplifyMeta(context, apiDetails); /* istanbul ignore next */cov_1brtfy2lau.s[32]++;
        break;
      } catch (e) {/* istanbul ignore next */cov_1brtfy2lau.s[33]++;
        apiDetailSpinner.fail(); /* istanbul ignore next */cov_1brtfy2lau.s[34]++;
        if (e instanceof AmplifyCodeGenAPINotFoundError) {/* istanbul ignore next */cov_1brtfy2lau.b[6][0]++;cov_1brtfy2lau.s[35]++;
          context.print.info(`AppSync API was not found in region ${region}`); /* istanbul ignore next */cov_1brtfy2lau.s[36]++;
          ({ shouldRetry, region } = await changeAppSyncRegion(context, region));
        } else {/* istanbul ignore next */cov_1brtfy2lau.b[6][1]++;cov_1brtfy2lau.s[37]++;
          throw e;
        }
      }
    }
  } /* istanbul ignore next */cov_1brtfy2lau.s[38]++;

  if (!apiDetails) {/* istanbul ignore next */cov_1brtfy2lau.b[7][0]++;cov_1brtfy2lau.s[39]++;
    return;
  } else /* istanbul ignore next */{cov_1brtfy2lau.b[7][1]++;}
  const answer = /* istanbul ignore next */(cov_1brtfy2lau.s[40]++, await addWalkThrough(context));

  const schema = /* istanbul ignore next */(cov_1brtfy2lau.s[41]++, await downloadIntrospectionSchemaWithProgress(
  context,
  apiDetails.id,
  answer.schemaLocation,
  region));


  const newProject = /* istanbul ignore next */(cov_1brtfy2lau.s[42]++, {
    projectName: apiDetails.name,
    includes: answer.includePattern,
    excludes: answer.excludePattern,
    schema,
    amplifyExtension: {
      graphQLApiId: apiDetails.id,
      codeGenTarget: /* istanbul ignore next */(cov_1brtfy2lau.b[8][0]++, answer.target) || /* istanbul ignore next */(cov_1brtfy2lau.b[8][1]++, ''),
      generatedFileName: /* istanbul ignore next */(cov_1brtfy2lau.b[9][0]++, answer.generatedFileName) || /* istanbul ignore next */(cov_1brtfy2lau.b[9][1]++, ''),
      docsFilePath: answer.docsFilePath,
      region },

    endpoint: apiDetails.endpoint }); /* istanbul ignore next */cov_1brtfy2lau.s[43]++;


  if (answer.maxDepth) {/* istanbul ignore next */cov_1brtfy2lau.b[10][0]++;cov_1brtfy2lau.s[44]++;
    newProject.amplifyExtension.maxDepth = answer.maxDepth;
  } else /* istanbul ignore next */{cov_1brtfy2lau.b[10][1]++;}cov_1brtfy2lau.s[45]++;
  config.addProject(newProject); /* istanbul ignore next */cov_1brtfy2lau.s[46]++;
  if (answer.shouldGenerateDocs) {/* istanbul ignore next */cov_1brtfy2lau.b[11][0]++;cov_1brtfy2lau.s[47]++;
    await generateStatements(context, false);
  } else /* istanbul ignore next */{cov_1brtfy2lau.b[11][1]++;}cov_1brtfy2lau.s[48]++;
  if (answer.shouldGenerateCode) {/* istanbul ignore next */cov_1brtfy2lau.b[12][0]++;cov_1brtfy2lau.s[49]++;
    await generateTypes(context, false);
  } else /* istanbul ignore next */{cov_1brtfy2lau.b[12][1]++;}cov_1brtfy2lau.s[50]++;
  config.save();
} /* istanbul ignore next */cov_1brtfy2lau.s[51]++;

module.exports = add;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,