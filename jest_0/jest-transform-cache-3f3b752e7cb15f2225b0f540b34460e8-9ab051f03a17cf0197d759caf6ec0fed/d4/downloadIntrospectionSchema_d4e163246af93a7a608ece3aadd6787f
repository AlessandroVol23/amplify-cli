20f5e4a8b8df3d3c325a20e759c426ee
/* istanbul ignore next */var cov_11rxktael5 = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/utils/downloadIntrospectionSchema.js',hash = 'a9da5873d940d916fae62fbc4791b77a0adc6956',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/utils/downloadIntrospectionSchema.js', statementMap: { '0': { start: { line: 1, column: 16 }, end: { line: 1, column: 37 } }, '1': { start: { line: 2, column: 30 }, end: { line: 2, column: 45 } }, '2': { start: { line: 4, column: 43 }, end: { line: 4, column: 63 } }, '3': { start: { line: 5, column: 18 }, end: { line: 5, column: 41 } }, '4': { start: { line: 8, column: 22 }, end: { line: 8, column: 29 } }, '5': { start: { line: 9, column: 2 }, end: { line: 28, column: 3 } }, '6': { start: { line: 10, column: 19 }, end: { line: 18, column: 5 } }, '7': { start: { line: 19, column: 29 }, end: { line: 19, column: 54 } }, '8': { start: { line: 20, column: 4 }, end: { line: 20, column: 34 } }, '9': { start: { line: 21, column: 4 }, end: { line: 21, column: 44 } }, '10': { start: { line: 22, column: 4 }, end: { line: 22, column: 72 } }, '11': { start: { line: 24, column: 4 }, end: { line: 26, column: 5 } }, '12': { start: { line: 25, column: 6 }, end: { line: 25, column: 86 } }, '13': { start: { line: 27, column: 4 }, end: { line: 27, column: 13 } }, '14': { start: { line: 31, column: 0 }, end: { line: 31, column: 45 } } }, fnMap: { '0': { name: 'downloadIntrospectionSchema', decl: { start: { line: 7, column: 15 }, end: { line: 7, column: 42 } }, loc: { start: { line: 7, column: 85 }, end: { line: 29, column: 1 } }, line: 7 } }, branchMap: { '0': { loc: { start: { line: 24, column: 4 }, end: { line: 26, column: 5 } }, type: 'if', locations: [{ start: { line: 24, column: 4 }, end: { line: 26, column: 5 } }, { start: { line: 24, column: 4 }, end: { line: 26, column: 5 } }], line: 24 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0 }, f: { '0': 0 }, b: { '0': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const jetpack = /* istanbul ignore next */(cov_11rxktael5.s[0]++, require('fs-jetpack'));
const { dirname, relative } = /* istanbul ignore next */(cov_11rxktael5.s[1]++, require('path'));

const { AmplifyCodeGenAPINotFoundError } = /* istanbul ignore next */(cov_11rxktael5.s[2]++, require('../errors'));
const constants = /* istanbul ignore next */(cov_11rxktael5.s[3]++, require('../constants'));

async function downloadIntrospectionSchema(context, apiId, downloadLocation, region) {/* istanbul ignore next */cov_11rxktael5.f[0]++;
  const { amplify } = /* istanbul ignore next */(cov_11rxktael5.s[4]++, context); /* istanbul ignore next */cov_11rxktael5.s[5]++;
  try {
    const schema = /* istanbul ignore next */(cov_11rxktael5.s[6]++, await context.amplify.executeProviderUtils(
    context,
    'awscloudformation',
    'getIntrospectionSchema',
    {
      apiId,
      region }));


    const introspectionDir = /* istanbul ignore next */(cov_11rxktael5.s[7]++, dirname(downloadLocation)); /* istanbul ignore next */cov_11rxktael5.s[8]++;
    jetpack.dir(introspectionDir); /* istanbul ignore next */cov_11rxktael5.s[9]++;
    jetpack.write(downloadLocation, schema); /* istanbul ignore next */cov_11rxktael5.s[10]++;
    return relative(amplify.getEnvInfo().projectPath, downloadLocation);
  } catch (ex) {/* istanbul ignore next */cov_11rxktael5.s[11]++;
    if (ex.code === 'NotFoundException') {/* istanbul ignore next */cov_11rxktael5.b[0][0]++;cov_11rxktael5.s[12]++;
      throw new AmplifyCodeGenAPINotFoundError(constants.ERROR_APPSYNC_API_NOT_FOUND);
    } else /* istanbul ignore next */{cov_11rxktael5.b[0][1]++;}cov_11rxktael5.s[13]++;
    throw ex;
  }
} /* istanbul ignore next */cov_11rxktael5.s[14]++;

module.exports = downloadIntrospectionSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYS5qcyJdLCJuYW1lcyI6WyJqZXRwYWNrIiwicmVxdWlyZSIsImRpcm5hbWUiLCJyZWxhdGl2ZSIsIkFtcGxpZnlDb2RlR2VuQVBJTm90Rm91bmRFcnJvciIsImNvbnN0YW50cyIsImRvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYSIsImNvbnRleHQiLCJhcGlJZCIsImRvd25sb2FkTG9jYXRpb24iLCJyZWdpb24iLCJhbXBsaWZ5Iiwic2NoZW1hIiwiZXhlY3V0ZVByb3ZpZGVyVXRpbHMiLCJpbnRyb3NwZWN0aW9uRGlyIiwiZGlyIiwid3JpdGUiLCJnZXRFbnZJbmZvIiwicHJvamVjdFBhdGgiLCJleCIsImNvZGUiLCJFUlJPUl9BUFBTWU5DX0FQSV9OT1RfRk9VTkQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiNDNFQUFBLE1BQU1BLDREQUFVQyxRQUFRLFlBQVIsQ0FBVixDQUFOO0FBQ0EsTUFBTSxFQUFFQyxPQUFGLEVBQVdDLFFBQVgsdURBQXdCRixRQUFRLE1BQVIsQ0FBeEIsQ0FBTjs7QUFFQSxNQUFNLEVBQUVHLDhCQUFGLHVEQUFxQ0gsUUFBUSxXQUFSLENBQXJDLENBQU47QUFDQSxNQUFNSSw4REFBWUosUUFBUSxjQUFSLENBQVosQ0FBTjs7QUFFQSxlQUFlSywyQkFBZixDQUEyQ0MsT0FBM0MsRUFBb0RDLEtBQXBELEVBQTJEQyxnQkFBM0QsRUFBNkVDLE1BQTdFLEVBQXFGO0FBQ25GLFFBQU0sRUFBRUMsT0FBRix1REFBY0osT0FBZCxDQUFOLENBRG1GO0FBRW5GLE1BQUk7QUFDRixVQUFNSywyREFBUyxNQUFNTCxRQUFRSSxPQUFSLENBQWdCRSxvQkFBaEI7QUFDbkJOLFdBRG1CO0FBRW5CLHVCQUZtQjtBQUduQiw0QkFIbUI7QUFJbkI7QUFDRUMsV0FERjtBQUVFRSxZQUZGLEVBSm1CLENBQWYsQ0FBTjs7O0FBU0EsVUFBTUkscUVBQW1CWixRQUFRTyxnQkFBUixDQUFuQixDQUFOLENBVkU7QUFXRlQsWUFBUWUsR0FBUixDQUFZRCxnQkFBWixFQVhFO0FBWUZkLFlBQVFnQixLQUFSLENBQWNQLGdCQUFkLEVBQWdDRyxNQUFoQyxFQVpFO0FBYUYsV0FBT1QsU0FBU1EsUUFBUU0sVUFBUixHQUFxQkMsV0FBOUIsRUFBMkNULGdCQUEzQyxDQUFQO0FBQ0QsR0FkRCxDQWNFLE9BQU9VLEVBQVAsRUFBVztBQUNYLFFBQUlBLEdBQUdDLElBQUgsS0FBWSxtQkFBaEIsRUFBcUM7QUFDbkMsWUFBTSxJQUFJaEIsOEJBQUosQ0FBbUNDLFVBQVVnQiwyQkFBN0MsQ0FBTjtBQUNELEtBRkQsMkRBRFc7QUFJWCxVQUFNRixFQUFOO0FBQ0Q7QUFDRixDOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCakIsMkJBQWpCIiwiZmlsZSI6ImRvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGpldHBhY2sgPSByZXF1aXJlKCdmcy1qZXRwYWNrJyk7XG5jb25zdCB7IGRpcm5hbWUsIHJlbGF0aXZlIH0gPSByZXF1aXJlKCdwYXRoJyk7XG5cbmNvbnN0IHsgQW1wbGlmeUNvZGVHZW5BUElOb3RGb3VuZEVycm9yIH0gPSByZXF1aXJlKCcuLi9lcnJvcnMnKTtcbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpO1xuXG5hc3luYyBmdW5jdGlvbiBkb3dubG9hZEludHJvc3BlY3Rpb25TY2hlbWEoY29udGV4dCwgYXBpSWQsIGRvd25sb2FkTG9jYXRpb24sIHJlZ2lvbikge1xuICBjb25zdCB7IGFtcGxpZnkgfSA9IGNvbnRleHQ7XG4gIHRyeSB7XG4gICAgY29uc3Qgc2NoZW1hID0gYXdhaXQgY29udGV4dC5hbXBsaWZ5LmV4ZWN1dGVQcm92aWRlclV0aWxzKFxuICAgICAgY29udGV4dCxcbiAgICAgICdhd3NjbG91ZGZvcm1hdGlvbicsXG4gICAgICAnZ2V0SW50cm9zcGVjdGlvblNjaGVtYScsXG4gICAgICB7XG4gICAgICAgIGFwaUlkLFxuICAgICAgICByZWdpb24sXG4gICAgICB9LFxuICAgICk7XG4gICAgY29uc3QgaW50cm9zcGVjdGlvbkRpciA9IGRpcm5hbWUoZG93bmxvYWRMb2NhdGlvbik7XG4gICAgamV0cGFjay5kaXIoaW50cm9zcGVjdGlvbkRpcik7XG4gICAgamV0cGFjay53cml0ZShkb3dubG9hZExvY2F0aW9uLCBzY2hlbWEpO1xuICAgIHJldHVybiByZWxhdGl2ZShhbXBsaWZ5LmdldEVudkluZm8oKS5wcm9qZWN0UGF0aCwgZG93bmxvYWRMb2NhdGlvbik7XG4gIH0gY2F0Y2ggKGV4KSB7XG4gICAgaWYgKGV4LmNvZGUgPT09ICdOb3RGb3VuZEV4Y2VwdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBBbXBsaWZ5Q29kZUdlbkFQSU5vdEZvdW5kRXJyb3IoY29uc3RhbnRzLkVSUk9SX0FQUFNZTkNfQVBJX05PVF9GT1VORCk7XG4gICAgfVxuICAgIHRocm93IGV4O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG93bmxvYWRJbnRyb3NwZWN0aW9uU2NoZW1hO1xuIl19