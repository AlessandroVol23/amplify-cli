203d6d9c8e7bc43b2ba68d4d03ede320
/* istanbul ignore next */var cov_xwy7nm7zy = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/configure.js',hash = '81a1ae79c86c6ab47f77ee4fd91019a67888cde1',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/configure.js', statementMap: { '0': { start: { line: 1, column: 17 }, end: { line: 1, column: 32 } }, '1': { start: { line: 3, column: 33 }, end: { line: 3, column: 69 } }, '2': { start: { line: 4, column: 33 }, end: { line: 4, column: 70 } }, '3': { start: { line: 5, column: 36 }, end: { line: 5, column: 75 } }, '4': { start: { line: 6, column: 26 }, end: { line: 6, column: 66 } }, '5': { start: { line: 7, column: 20 }, end: { line: 7, column: 51 } }, '6': { start: { line: 8, column: 50 }, end: { line: 8, column: 70 } }, '7': { start: { line: 11, column: 2 }, end: { line: 11, column: 41 } }, '8': { start: { line: 14, column: 19 }, end: { line: 14, column: 46 } }, '9': { start: { line: 15, column: 19 }, end: { line: 18, column: 5 } }, '10': { start: { line: 15, column: 45 }, end: { line: 18, column: 3 } }, '11': { start: { line: 19, column: 16 }, end: { line: 19, column: 65 } }, '12': { start: { line: 21, column: 32 }, end: { line: 23, column: 3 } }, '13': { start: { line: 22, column: 34 }, end: { line: 22, column: 81 } }, '14': { start: { line: 25, column: 31 }, end: { line: 25, column: 52 } }, '15': { start: { line: 26, column: 23 }, end: { line: 26, column: 32 } }, '16': { start: { line: 28, column: 2 }, end: { line: 33, column: 3 } }, '17': { start: { line: 29, column: 4 }, end: { line: 32, column: 6 } }, '18': { start: { line: 35, column: 32 }, end: { line: 35, column: 95 } }, '19': { start: { line: 36, column: 26 }, end: { line: 40, column: 3 } }, '20': { start: { line: 42, column: 4 }, end: { line: 44, column: 25 } }, '21': { start: { line: 46, column: 2 }, end: { line: 46, column: 85 } }, '22': { start: { line: 48, column: 2 }, end: { line: 55, column: 3 } }, '23': { start: { line: 49, column: 4 }, end: { line: 52, column: 6 } }, '24': { start: { line: 54, column: 4 }, end: { line: 54, column: 44 } }, '25': { start: { line: 56, column: 2 }, end: { line: 56, column: 50 } }, '26': { start: { line: 58, column: 2 }, end: { line: 60, column: 4 } }, '27': { start: { line: 62, column: 2 }, end: { line: 62, column: 31 } }, '28': { start: { line: 64, column: 0 }, end: { line: 64, column: 45 } } }, fnMap: { '0': { name: 'deepCopy', decl: { start: { line: 10, column: 9 }, end: { line: 10, column: 17 } }, loc: { start: { line: 10, column: 23 }, end: { line: 12, column: 1 } }, line: 10 }, '1': { name: 'configureProjectWalkThrough', decl: { start: { line: 13, column: 15 }, end: { line: 13, column: 42 } }, loc: { start: { line: 13, column: 67 }, end: { line: 63, column: 1 } }, line: 13 }, '2': { name: '(anonymous_2)', decl: { start: { line: 15, column: 37 }, end: { line: 15, column: 38 } }, loc: { start: { line: 15, column: 45 }, end: { line: 18, column: 3 } }, line: 15 }, '3': { name: '(anonymous_3)', decl: { start: { line: 22, column: 23 }, end: { line: 22, column: 24 } }, loc: { start: { line: 22, column: 34 }, end: { line: 22, column: 81 } }, line: 22 } }, branchMap: { '0': { loc: { start: { line: 28, column: 2 }, end: { line: 33, column: 3 } }, type: 'if', locations: [{ start: { line: 28, column: 2 }, end: { line: 33, column: 3 } }, { start: { line: 28, column: 2 }, end: { line: 33, column: 3 } }], line: 28 }, '1': { loc: { start: { line: 42, column: 4 }, end: { line: 44, column: 25 } }, type: 'cond-expr', locations: [{ start: { line: 43, column: 8 }, end: { line: 43, column: 38 } }, { start: { line: 44, column: 8 }, end: { line: 44, column: 25 } }], line: 42 }, '2': { loc: { start: { line: 48, column: 2 }, end: { line: 55, column: 3 } }, type: 'if', locations: [{ start: { line: 48, column: 2 }, end: { line: 55, column: 3 } }, { start: { line: 48, column: 2 }, end: { line: 55, column: 3 } }], line: 48 }, '3': { loc: { start: { line: 48, column: 8 }, end: { line: 48, column: 65 } }, type: 'binary-expr', locations: [{ start: { line: 48, column: 8 }, end: { line: 48, column: 30 } }, { start: { line: 48, column: 34 }, end: { line: 48, column: 65 } }], line: 48 }, '4': { loc: { start: { line: 50, column: 6 }, end: { line: 50, column: 49 } }, type: 'binary-expr', locations: [{ start: { line: 50, column: 6 }, end: { line: 50, column: 40 } }, { start: { line: 50, column: 44 }, end: { line: 50, column: 49 } }], line: 50 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const { join } = /* istanbul ignore next */(cov_xwy7nm7zy.s[0]++, require('path'));

const askForGraphQLAPIResource = /* istanbul ignore next */(cov_xwy7nm7zy.s[1]++, require('./questions/selectProject'));
const askCodeGenTargetLanguage = /* istanbul ignore next */(cov_xwy7nm7zy.s[2]++, require('./questions/languageTarget'));
const askCodeGeneQueryFilePattern = /* istanbul ignore next */(cov_xwy7nm7zy.s[3]++, require('./questions/queryFilePattern'));
const askTargetFileName = /* istanbul ignore next */(cov_xwy7nm7zy.s[4]++, require('./questions/generatedFileName'));
const askMaxDepth = /* istanbul ignore next */(cov_xwy7nm7zy.s[5]++, require('./questions/maxDepth'));
const { getFrontEndHandler, getIncludePattern } = /* istanbul ignore next */(cov_xwy7nm7zy.s[6]++, require('../utils/'));

function deepCopy(obj) {/* istanbul ignore next */cov_xwy7nm7zy.f[0]++;cov_xwy7nm7zy.s[7]++;
  return JSON.parse(JSON.stringify(obj));
}
async function configureProjectWalkThrough(context, amplifyConfig) {/* istanbul ignore next */cov_xwy7nm7zy.f[1]++;
  const frontend = /* istanbul ignore next */(cov_xwy7nm7zy.s[8]++, getFrontEndHandler(context));
  const projects = /* istanbul ignore next */(cov_xwy7nm7zy.s[9]++, amplifyConfig.map(cfg => {/* istanbul ignore next */cov_xwy7nm7zy.f[2]++;cov_xwy7nm7zy.s[10]++;return {
      name: cfg.projectName,
      value: cfg.amplifyExtension.graphQLApiId };
  }));
  const apiId = /* istanbul ignore next */(cov_xwy7nm7zy.s[11]++, await askForGraphQLAPIResource(context, projects));

  const selectedProjectConfig = /* istanbul ignore next */(cov_xwy7nm7zy.s[12]++, deepCopy(
  amplifyConfig.find(project => {/* istanbul ignore next */cov_xwy7nm7zy.f[3]++;cov_xwy7nm7zy.s[13]++;return project.amplifyExtension.graphQLApiId === apiId;})));


  const { amplifyExtension } = /* istanbul ignore next */(cov_xwy7nm7zy.s[14]++, selectedProjectConfig);
  let targetLanguage = /* istanbul ignore next */(cov_xwy7nm7zy.s[15]++, 'android'); /* istanbul ignore next */cov_xwy7nm7zy.s[16]++;

  if (frontend !== 'android') {/* istanbul ignore next */cov_xwy7nm7zy.b[0][0]++;cov_xwy7nm7zy.s[17]++;
    targetLanguage = await askCodeGenTargetLanguage(
    context,
    amplifyExtension.codeGenTarget);

  } else /* istanbul ignore next */{cov_xwy7nm7zy.b[0][1]++;}

  const includePatternDefault = /* istanbul ignore next */(cov_xwy7nm7zy.s[18]++, getIncludePattern(targetLanguage, selectedProjectConfig.schema));
  const includePathGlob = /* istanbul ignore next */(cov_xwy7nm7zy.s[19]++, join(
  includePatternDefault.graphQLDirectory,
  '**',
  includePatternDefault.graphQLExtension));

  const includePattern = /* istanbul ignore next */(cov_xwy7nm7zy.s[20]++,
  targetLanguage === amplifyExtension.codeGenTarget ? /* istanbul ignore next */(cov_xwy7nm7zy.b[1][0]++,
  selectedProjectConfig.includes) : /* istanbul ignore next */(cov_xwy7nm7zy.b[1][1]++,
  [includePathGlob])); /* istanbul ignore next */cov_xwy7nm7zy.s[21]++;

  selectedProjectConfig.includes = await askCodeGeneQueryFilePattern(includePattern); /* istanbul ignore next */cov_xwy7nm7zy.s[22]++;

  if (!( /* istanbul ignore next */(cov_xwy7nm7zy.b[3][0]++, frontend === 'android') || /* istanbul ignore next */(cov_xwy7nm7zy.b[3][1]++, targetLanguage === 'javascript'))) {/* istanbul ignore next */cov_xwy7nm7zy.b[2][0]++;cov_xwy7nm7zy.s[23]++;
    amplifyExtension.generatedFileName = await askTargetFileName(
    /* istanbul ignore next */(cov_xwy7nm7zy.b[4][0]++, amplifyExtension.generatedFileName) || /* istanbul ignore next */(cov_xwy7nm7zy.b[4][1]++, 'API'),
    targetLanguage);

  } else {/* istanbul ignore next */cov_xwy7nm7zy.b[2][1]++;cov_xwy7nm7zy.s[24]++;
    amplifyExtension.generatedFileName = '';
  } /* istanbul ignore next */cov_xwy7nm7zy.s[25]++;
  amplifyExtension.codeGenTarget = targetLanguage; /* istanbul ignore next */cov_xwy7nm7zy.s[26]++;

  amplifyExtension.maxDepth = await askMaxDepth(
  amplifyExtension.maxDepth); /* istanbul ignore next */cov_xwy7nm7zy.s[27]++;


  return selectedProjectConfig;
} /* istanbul ignore next */cov_xwy7nm7zy.s[28]++;
module.exports = configureProjectWalkThrough;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZ3VyZS5qcyJdLCJuYW1lcyI6WyJqb2luIiwicmVxdWlyZSIsImFza0ZvckdyYXBoUUxBUElSZXNvdXJjZSIsImFza0NvZGVHZW5UYXJnZXRMYW5ndWFnZSIsImFza0NvZGVHZW5lUXVlcnlGaWxlUGF0dGVybiIsImFza1RhcmdldEZpbGVOYW1lIiwiYXNrTWF4RGVwdGgiLCJnZXRGcm9udEVuZEhhbmRsZXIiLCJnZXRJbmNsdWRlUGF0dGVybiIsImRlZXBDb3B5Iiwib2JqIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwiY29uZmlndXJlUHJvamVjdFdhbGtUaHJvdWdoIiwiY29udGV4dCIsImFtcGxpZnlDb25maWciLCJmcm9udGVuZCIsInByb2plY3RzIiwibWFwIiwiY2ZnIiwibmFtZSIsInByb2plY3ROYW1lIiwidmFsdWUiLCJhbXBsaWZ5RXh0ZW5zaW9uIiwiZ3JhcGhRTEFwaUlkIiwiYXBpSWQiLCJzZWxlY3RlZFByb2plY3RDb25maWciLCJmaW5kIiwicHJvamVjdCIsInRhcmdldExhbmd1YWdlIiwiY29kZUdlblRhcmdldCIsImluY2x1ZGVQYXR0ZXJuRGVmYXVsdCIsInNjaGVtYSIsImluY2x1ZGVQYXRoR2xvYiIsImdyYXBoUUxEaXJlY3RvcnkiLCJncmFwaFFMRXh0ZW5zaW9uIiwiaW5jbHVkZVBhdHRlcm4iLCJpbmNsdWRlcyIsImdlbmVyYXRlZEZpbGVOYW1lIiwibWF4RGVwdGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiK2xLQUFBLE1BQU0sRUFBRUEsSUFBRixzREFBV0MsUUFBUSxNQUFSLENBQVgsQ0FBTjs7QUFFQSxNQUFNQyw0RUFBMkJELFFBQVEsMkJBQVIsQ0FBM0IsQ0FBTjtBQUNBLE1BQU1FLDRFQUEyQkYsUUFBUSw0QkFBUixDQUEzQixDQUFOO0FBQ0EsTUFBTUcsK0VBQThCSCxRQUFRLDhCQUFSLENBQTlCLENBQU47QUFDQSxNQUFNSSxxRUFBb0JKLFFBQVEsK0JBQVIsQ0FBcEIsQ0FBTjtBQUNBLE1BQU1LLCtEQUFjTCxRQUFRLHNCQUFSLENBQWQsQ0FBTjtBQUNBLE1BQU0sRUFBRU0sa0JBQUYsRUFBc0JDLGlCQUF0QixzREFBNENQLFFBQVEsV0FBUixDQUE1QyxDQUFOOztBQUVBLFNBQVNRLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCO0FBQ3JCLFNBQU9DLEtBQUtDLEtBQUwsQ0FBV0QsS0FBS0UsU0FBTCxDQUFlSCxHQUFmLENBQVgsQ0FBUDtBQUNEO0FBQ0QsZUFBZUksMkJBQWYsQ0FBMkNDLE9BQTNDLEVBQW9EQyxhQUFwRCxFQUFtRTtBQUNqRSxRQUFNQyw0REFBV1YsbUJBQW1CUSxPQUFuQixDQUFYLENBQU47QUFDQSxRQUFNRyw0REFBV0YsY0FBY0csR0FBZCxDQUFrQkMsT0FBUTtBQUN6Q0MsWUFBTUQsSUFBSUUsV0FEK0I7QUFFekNDLGFBQU9ILElBQUlJLGdCQUFKLENBQXFCQyxZQUZhO0FBRzFDLEdBSGdCLENBQVgsQ0FBTjtBQUlBLFFBQU1DLDBEQUFRLE1BQU14Qix5QkFBeUJhLE9BQXpCLEVBQWtDRyxRQUFsQyxDQUFkLENBQU47O0FBRUEsUUFBTVMsMEVBQXdCbEI7QUFDNUJPLGdCQUFjWSxJQUFkLENBQW1CQyxXQUFXLHFGQUFRTCxnQkFBUixDQUF5QkMsWUFBekIsS0FBMENDLEtBQTFDLENBQStDLENBQTdFLENBRDRCLENBQXhCLENBQU47OztBQUlBLFFBQU0sRUFBRUYsZ0JBQUYsdURBQXVCRyxxQkFBdkIsQ0FBTjtBQUNBLE1BQUlHLG1FQUFpQixTQUFqQixDQUFKLENBYmlFOztBQWVqRSxNQUFJYixhQUFhLFNBQWpCLEVBQTRCO0FBQzFCYSxxQkFBaUIsTUFBTTNCO0FBQ3JCWSxXQURxQjtBQUVyQlMscUJBQWlCTyxhQUZJLENBQXZCOztBQUlELEdBTEQ7O0FBT0EsUUFBTUMsMEVBQXdCeEIsa0JBQWtCc0IsY0FBbEIsRUFBa0NILHNCQUFzQk0sTUFBeEQsQ0FBeEIsQ0FBTjtBQUNBLFFBQU1DLG9FQUFrQmxDO0FBQ3RCZ0Msd0JBQXNCRyxnQkFEQTtBQUV0QixNQUZzQjtBQUd0Qkgsd0JBQXNCSSxnQkFIQSxDQUFsQixDQUFOOztBQUtBLFFBQU1DO0FBQ0pQLHFCQUFtQk4saUJBQWlCTyxhQUFwQztBQUNJSix3QkFBc0JXLFFBRDFCO0FBRUksR0FBQ0osZUFBRCxDQUZKLENBREksQ0FBTixDQTVCaUU7O0FBaUNqRVAsd0JBQXNCVyxRQUF0QixHQUFpQyxNQUFNbEMsNEJBQTRCaUMsY0FBNUIsQ0FBdkMsQ0FqQ2lFOztBQW1DakUsTUFBSSxFQUFFLGtFQUFhLFNBQWIseURBQTBCUCxtQkFBbUIsWUFBN0MsQ0FBRixDQUFKLEVBQWtFO0FBQ2hFTixxQkFBaUJlLGlCQUFqQixHQUFxQyxNQUFNbEM7QUFDekMseUVBQWlCa0MsaUJBQWpCLHlEQUFzQyxLQUF0QyxDQUR5QztBQUV6Q1Qsa0JBRnlDLENBQTNDOztBQUlELEdBTEQsTUFLTztBQUNMTixxQkFBaUJlLGlCQUFqQixHQUFxQyxFQUFyQztBQUNELEdBMUNnRTtBQTJDakVmLG1CQUFpQk8sYUFBakIsR0FBaUNELGNBQWpDLENBM0NpRTs7QUE2Q2pFTixtQkFBaUJnQixRQUFqQixHQUE0QixNQUFNbEM7QUFDaENrQixtQkFBaUJnQixRQURlLENBQWxDLENBN0NpRTs7O0FBaURqRSxTQUFPYixxQkFBUDtBQUNELEM7QUFDRGMsT0FBT0MsT0FBUCxHQUFpQjVCLDJCQUFqQiIsImZpbGUiOiJjb25maWd1cmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGpvaW4gfSA9IHJlcXVpcmUoJ3BhdGgnKTtcblxuY29uc3QgYXNrRm9yR3JhcGhRTEFQSVJlc291cmNlID0gcmVxdWlyZSgnLi9xdWVzdGlvbnMvc2VsZWN0UHJvamVjdCcpO1xuY29uc3QgYXNrQ29kZUdlblRhcmdldExhbmd1YWdlID0gcmVxdWlyZSgnLi9xdWVzdGlvbnMvbGFuZ3VhZ2VUYXJnZXQnKTtcbmNvbnN0IGFza0NvZGVHZW5lUXVlcnlGaWxlUGF0dGVybiA9IHJlcXVpcmUoJy4vcXVlc3Rpb25zL3F1ZXJ5RmlsZVBhdHRlcm4nKTtcbmNvbnN0IGFza1RhcmdldEZpbGVOYW1lID0gcmVxdWlyZSgnLi9xdWVzdGlvbnMvZ2VuZXJhdGVkRmlsZU5hbWUnKTtcbmNvbnN0IGFza01heERlcHRoID0gcmVxdWlyZSgnLi9xdWVzdGlvbnMvbWF4RGVwdGgnKTtcbmNvbnN0IHsgZ2V0RnJvbnRFbmRIYW5kbGVyLCBnZXRJbmNsdWRlUGF0dGVybiB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvJyk7XG5cbmZ1bmN0aW9uIGRlZXBDb3B5KG9iaikge1xuICByZXR1cm4gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmopKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGNvbmZpZ3VyZVByb2plY3RXYWxrVGhyb3VnaChjb250ZXh0LCBhbXBsaWZ5Q29uZmlnKSB7XG4gIGNvbnN0IGZyb250ZW5kID0gZ2V0RnJvbnRFbmRIYW5kbGVyKGNvbnRleHQpO1xuICBjb25zdCBwcm9qZWN0cyA9IGFtcGxpZnlDb25maWcubWFwKGNmZyA9PiAoe1xuICAgIG5hbWU6IGNmZy5wcm9qZWN0TmFtZSxcbiAgICB2YWx1ZTogY2ZnLmFtcGxpZnlFeHRlbnNpb24uZ3JhcGhRTEFwaUlkLFxuICB9KSk7XG4gIGNvbnN0IGFwaUlkID0gYXdhaXQgYXNrRm9yR3JhcGhRTEFQSVJlc291cmNlKGNvbnRleHQsIHByb2plY3RzKTtcblxuICBjb25zdCBzZWxlY3RlZFByb2plY3RDb25maWcgPSBkZWVwQ29weShcbiAgICBhbXBsaWZ5Q29uZmlnLmZpbmQocHJvamVjdCA9PiBwcm9qZWN0LmFtcGxpZnlFeHRlbnNpb24uZ3JhcGhRTEFwaUlkID09PSBhcGlJZCksXG4gICk7XG5cbiAgY29uc3QgeyBhbXBsaWZ5RXh0ZW5zaW9uIH0gPSBzZWxlY3RlZFByb2plY3RDb25maWc7XG4gIGxldCB0YXJnZXRMYW5ndWFnZSA9ICdhbmRyb2lkJztcblxuICBpZiAoZnJvbnRlbmQgIT09ICdhbmRyb2lkJykge1xuICAgIHRhcmdldExhbmd1YWdlID0gYXdhaXQgYXNrQ29kZUdlblRhcmdldExhbmd1YWdlKFxuICAgICAgY29udGV4dCxcbiAgICAgIGFtcGxpZnlFeHRlbnNpb24uY29kZUdlblRhcmdldCxcbiAgICApO1xuICB9XG5cbiAgY29uc3QgaW5jbHVkZVBhdHRlcm5EZWZhdWx0ID0gZ2V0SW5jbHVkZVBhdHRlcm4odGFyZ2V0TGFuZ3VhZ2UsIHNlbGVjdGVkUHJvamVjdENvbmZpZy5zY2hlbWEpO1xuICBjb25zdCBpbmNsdWRlUGF0aEdsb2IgPSBqb2luKFxuICAgIGluY2x1ZGVQYXR0ZXJuRGVmYXVsdC5ncmFwaFFMRGlyZWN0b3J5LFxuICAgICcqKicsXG4gICAgaW5jbHVkZVBhdHRlcm5EZWZhdWx0LmdyYXBoUUxFeHRlbnNpb24sXG4gICk7XG4gIGNvbnN0IGluY2x1ZGVQYXR0ZXJuID1cbiAgICB0YXJnZXRMYW5ndWFnZSA9PT0gYW1wbGlmeUV4dGVuc2lvbi5jb2RlR2VuVGFyZ2V0XG4gICAgICA/IHNlbGVjdGVkUHJvamVjdENvbmZpZy5pbmNsdWRlc1xuICAgICAgOiBbaW5jbHVkZVBhdGhHbG9iXTtcblxuICBzZWxlY3RlZFByb2plY3RDb25maWcuaW5jbHVkZXMgPSBhd2FpdCBhc2tDb2RlR2VuZVF1ZXJ5RmlsZVBhdHRlcm4oaW5jbHVkZVBhdHRlcm4pO1xuXG4gIGlmICghKGZyb250ZW5kID09PSAnYW5kcm9pZCcgfHwgdGFyZ2V0TGFuZ3VhZ2UgPT09ICdqYXZhc2NyaXB0JykpIHtcbiAgICBhbXBsaWZ5RXh0ZW5zaW9uLmdlbmVyYXRlZEZpbGVOYW1lID0gYXdhaXQgYXNrVGFyZ2V0RmlsZU5hbWUoXG4gICAgICBhbXBsaWZ5RXh0ZW5zaW9uLmdlbmVyYXRlZEZpbGVOYW1lIHx8ICdBUEknLFxuICAgICAgdGFyZ2V0TGFuZ3VhZ2UsXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICBhbXBsaWZ5RXh0ZW5zaW9uLmdlbmVyYXRlZEZpbGVOYW1lID0gJyc7XG4gIH1cbiAgYW1wbGlmeUV4dGVuc2lvbi5jb2RlR2VuVGFyZ2V0ID0gdGFyZ2V0TGFuZ3VhZ2U7XG5cbiAgYW1wbGlmeUV4dGVuc2lvbi5tYXhEZXB0aCA9IGF3YWl0IGFza01heERlcHRoKFxuICAgIGFtcGxpZnlFeHRlbnNpb24ubWF4RGVwdGgsXG4gICk7XG5cbiAgcmV0dXJuIHNlbGVjdGVkUHJvamVjdENvbmZpZztcbn1cbm1vZHVsZS5leHBvcnRzID0gY29uZmlndXJlUHJvamVjdFdhbGtUaHJvdWdoO1xuIl19