cde22549761c68d9bdbb0f959cba9456
/* istanbul ignore next */var cov_1vm0uprru4 = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/utils/updateAmplifyMeta.js',hash = 'fbd14c871d71499f3bd53f35de366bf75736ed24',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/utils/updateAmplifyMeta.js', statementMap: { '0': { start: { line: 2, column: 0 }, end: { line: 40, column: 2 } }, '1': { start: { line: 3, column: 13 }, end: { line: 3, column: 31 } }, '2': { start: { line: 5, column: 26 }, end: { line: 13, column: 3 } }, '3': { start: { line: 14, column: 2 }, end: { line: 16, column: 3 } }, '4': { start: { line: 15, column: 4 }, end: { line: 15, column: 67 } }, '5': { start: { line: 18, column: 26 }, end: { line: 18, column: 61 } }, '6': { start: { line: 20, column: 2 }, end: { line: 22, column: 3 } }, '7': { start: { line: 21, column: 4 }, end: { line: 21, column: 25 } }, '8': { start: { line: 24, column: 2 }, end: { line: 24, column: 53 } }, '9': { start: { line: 27, column: 30 }, end: { line: 27, column: 82 } }, '10': { start: { line: 28, column: 2 }, end: { line: 28, column: 45 } }, '11': { start: { line: 30, column: 37 }, end: { line: 30, column: 95 } }, '12': { start: { line: 31, column: 29 }, end: { line: 31, column: 76 } }, '13': { start: { line: 32, column: 2 }, end: { line: 34, column: 3 } }, '14': { start: { line: 33, column: 4 }, end: { line: 33, column: 32 } }, '15': { start: { line: 35, column: 2 }, end: { line: 35, column: 60 } }, '16': { start: { line: 36, column: 2 }, end: { line: 36, column: 59 } }, '17': { start: { line: 38, column: 2 }, end: { line: 38, column: 51 } }, '18': { start: { line: 39, column: 2 }, end: { line: 39, column: 93 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 2, column: 17 }, end: { line: 2, column: 18 } }, loc: { start: { line: 2, column: 42 }, end: { line: 40, column: 1 } }, line: 2 } }, branchMap: { '0': { loc: { start: { line: 14, column: 2 }, end: { line: 16, column: 3 } }, type: 'if', locations: [{ start: { line: 14, column: 2 }, end: { line: 16, column: 3 } }, { start: { line: 14, column: 2 }, end: { line: 16, column: 3 } }], line: 14 }, '1': { loc: { start: { line: 20, column: 2 }, end: { line: 22, column: 3 } }, type: 'if', locations: [{ start: { line: 20, column: 2 }, end: { line: 22, column: 3 } }, { start: { line: 20, column: 2 }, end: { line: 22, column: 3 } }], line: 20 }, '2': { loc: { start: { line: 32, column: 2 }, end: { line: 34, column: 3 } }, type: 'if', locations: [{ start: { line: 32, column: 2 }, end: { line: 34, column: 3 } }, { start: { line: 32, column: 2 }, end: { line: 34, column: 3 } }], line: 32 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0 }, f: { '0': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();cov_1vm0uprru4.s[0]++;
module.exports = (context, apiDetails) => {/* istanbul ignore next */cov_1vm0uprru4.f[0]++;
  const fs = /* istanbul ignore next */(cov_1vm0uprru4.s[1]++, context.filesystem);

  const appsyncMetadata = /* istanbul ignore next */(cov_1vm0uprru4.s[2]++, {
    service: 'AppSync',
    output: {
      securityType: apiDetails.securityType,
      GraphQLAPIIdOutput: apiDetails.id,
      GraphQLAPIEndpointOutput: apiDetails.endpoint },

    lastPushTimeStamp: new Date() }); /* istanbul ignore next */cov_1vm0uprru4.s[3]++;

  if (apiDetails.apiKey) {/* istanbul ignore next */cov_1vm0uprru4.b[0][0]++;cov_1vm0uprru4.s[4]++;
    appsyncMetadata.output.GraphQLAPIKeyOutput = apiDetails.apiKey;
  } else /* istanbul ignore next */{cov_1vm0uprru4.b[0][1]++;}

  const { amplifyMeta } = /* istanbul ignore next */(cov_1vm0uprru4.s[5]++, context.amplify.getProjectDetails()); /* istanbul ignore next */cov_1vm0uprru4.s[6]++;

  if (!amplifyMeta.api) {/* istanbul ignore next */cov_1vm0uprru4.b[1][0]++;cov_1vm0uprru4.s[7]++;
    amplifyMeta.api = {};
  } else /* istanbul ignore next */{cov_1vm0uprru4.b[1][1]++;}cov_1vm0uprru4.s[8]++;

  amplifyMeta.api[apiDetails.name] = appsyncMetadata;


  const amplifyMetaFilePath = /* istanbul ignore next */(cov_1vm0uprru4.s[9]++, context.amplify.pathManager.getAmplifyMetaFilePath()); /* istanbul ignore next */cov_1vm0uprru4.s[10]++;
  fs.write(amplifyMetaFilePath, amplifyMeta);

  const currentAmplifyMetaFilePath = /* istanbul ignore next */(cov_1vm0uprru4.s[11]++, context.amplify.pathManager.getCurentAmplifyMetaFilePath());
  const currentAmplifyMeta = /* istanbul ignore next */(cov_1vm0uprru4.s[12]++, JSON.parse(fs.read(currentAmplifyMetaFilePath))); /* istanbul ignore next */cov_1vm0uprru4.s[13]++;
  if (!currentAmplifyMeta.api) {/* istanbul ignore next */cov_1vm0uprru4.b[2][0]++;cov_1vm0uprru4.s[14]++;
    currentAmplifyMeta.api = {};
  } else /* istanbul ignore next */{cov_1vm0uprru4.b[2][1]++;}cov_1vm0uprru4.s[15]++;
  currentAmplifyMeta.api[apiDetails.name] = appsyncMetadata; /* istanbul ignore next */cov_1vm0uprru4.s[16]++;
  fs.write(currentAmplifyMetaFilePath, currentAmplifyMeta); /* istanbul ignore next */cov_1vm0uprru4.s[17]++;

  context.amplify.onCategoryOutputsChange(context); /* istanbul ignore next */cov_1vm0uprru4.s[18]++;
  context.print.success(`Successfully added API ${apiDetails.name} to your Amplify project`);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwZGF0ZUFtcGxpZnlNZXRhLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJjb250ZXh0IiwiYXBpRGV0YWlscyIsImZzIiwiZmlsZXN5c3RlbSIsImFwcHN5bmNNZXRhZGF0YSIsInNlcnZpY2UiLCJvdXRwdXQiLCJzZWN1cml0eVR5cGUiLCJHcmFwaFFMQVBJSWRPdXRwdXQiLCJpZCIsIkdyYXBoUUxBUElFbmRwb2ludE91dHB1dCIsImVuZHBvaW50IiwibGFzdFB1c2hUaW1lU3RhbXAiLCJEYXRlIiwiYXBpS2V5IiwiR3JhcGhRTEFQSUtleU91dHB1dCIsImFtcGxpZnlNZXRhIiwiYW1wbGlmeSIsImdldFByb2plY3REZXRhaWxzIiwiYXBpIiwibmFtZSIsImFtcGxpZnlNZXRhRmlsZVBhdGgiLCJwYXRoTWFuYWdlciIsImdldEFtcGxpZnlNZXRhRmlsZVBhdGgiLCJ3cml0ZSIsImN1cnJlbnRBbXBsaWZ5TWV0YUZpbGVQYXRoIiwiZ2V0Q3VyZW50QW1wbGlmeU1ldGFGaWxlUGF0aCIsImN1cnJlbnRBbXBsaWZ5TWV0YSIsIkpTT04iLCJwYXJzZSIsInJlYWQiLCJvbkNhdGVnb3J5T3V0cHV0c0NoYW5nZSIsInByaW50Iiwic3VjY2VzcyJdLCJtYXBwaW5ncyI6IjtBQUNBQSxPQUFPQyxPQUFQLEdBQWlCLENBQUNDLE9BQUQsRUFBVUMsVUFBVixLQUF5QjtBQUN4QyxRQUFNQyx1REFBS0YsUUFBUUcsVUFBYixDQUFOOztBQUVBLFFBQU1DLG9FQUFrQjtBQUN0QkMsYUFBUyxTQURhO0FBRXRCQyxZQUFRO0FBQ05DLG9CQUFjTixXQUFXTSxZQURuQjtBQUVOQywwQkFBb0JQLFdBQVdRLEVBRnpCO0FBR05DLGdDQUEwQlQsV0FBV1UsUUFIL0IsRUFGYzs7QUFPdEJDLHVCQUFtQixJQUFJQyxJQUFKLEVBUEcsRUFBbEIsQ0FBTixDQUh3Qzs7QUFZeEMsTUFBSVosV0FBV2EsTUFBZixFQUF1QjtBQUNyQlYsb0JBQWdCRSxNQUFoQixDQUF1QlMsbUJBQXZCLEdBQTZDZCxXQUFXYSxNQUF4RDtBQUNELEdBRkQ7O0FBSUEsUUFBTSxFQUFFRSxXQUFGLHVEQUFrQmhCLFFBQVFpQixPQUFSLENBQWdCQyxpQkFBaEIsRUFBbEIsQ0FBTixDQWhCd0M7O0FBa0J4QyxNQUFJLENBQUNGLFlBQVlHLEdBQWpCLEVBQXNCO0FBQ3BCSCxnQkFBWUcsR0FBWixHQUFrQixFQUFsQjtBQUNELEdBRkQsMkRBbEJ3Qzs7QUFzQnhDSCxjQUFZRyxHQUFaLENBQWdCbEIsV0FBV21CLElBQTNCLElBQW1DaEIsZUFBbkM7OztBQUdBLFFBQU1pQix3RUFBc0JyQixRQUFRaUIsT0FBUixDQUFnQkssV0FBaEIsQ0FBNEJDLHNCQUE1QixFQUF0QixDQUFOLENBekJ3QztBQTBCeENyQixLQUFHc0IsS0FBSCxDQUFTSCxtQkFBVCxFQUE4QkwsV0FBOUI7O0FBRUEsUUFBTVMsZ0ZBQTZCekIsUUFBUWlCLE9BQVIsQ0FBZ0JLLFdBQWhCLENBQTRCSSw0QkFBNUIsRUFBN0IsQ0FBTjtBQUNBLFFBQU1DLHdFQUFxQkMsS0FBS0MsS0FBTCxDQUFXM0IsR0FBRzRCLElBQUgsQ0FBUUwsMEJBQVIsQ0FBWCxDQUFyQixDQUFOLENBN0J3QztBQThCeEMsTUFBSSxDQUFDRSxtQkFBbUJSLEdBQXhCLEVBQTZCO0FBQzNCUSx1QkFBbUJSLEdBQW5CLEdBQXlCLEVBQXpCO0FBQ0QsR0FGRCwyREE5QndDO0FBaUN4Q1EscUJBQW1CUixHQUFuQixDQUF1QmxCLFdBQVdtQixJQUFsQyxJQUEwQ2hCLGVBQTFDLENBakN3QztBQWtDeENGLEtBQUdzQixLQUFILENBQVNDLDBCQUFULEVBQXFDRSxrQkFBckMsRUFsQ3dDOztBQW9DeEMzQixVQUFRaUIsT0FBUixDQUFnQmMsdUJBQWhCLENBQXdDL0IsT0FBeEMsRUFwQ3dDO0FBcUN4Q0EsVUFBUWdDLEtBQVIsQ0FBY0MsT0FBZCxDQUF1QiwwQkFBeUJoQyxXQUFXbUIsSUFBSywwQkFBaEU7QUFDRCxDQXRDRCIsImZpbGUiOiJ1cGRhdGVBbXBsaWZ5TWV0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxubW9kdWxlLmV4cG9ydHMgPSAoY29udGV4dCwgYXBpRGV0YWlscykgPT4ge1xuICBjb25zdCBmcyA9IGNvbnRleHQuZmlsZXN5c3RlbTtcblxuICBjb25zdCBhcHBzeW5jTWV0YWRhdGEgPSB7XG4gICAgc2VydmljZTogJ0FwcFN5bmMnLFxuICAgIG91dHB1dDoge1xuICAgICAgc2VjdXJpdHlUeXBlOiBhcGlEZXRhaWxzLnNlY3VyaXR5VHlwZSxcbiAgICAgIEdyYXBoUUxBUElJZE91dHB1dDogYXBpRGV0YWlscy5pZCxcbiAgICAgIEdyYXBoUUxBUElFbmRwb2ludE91dHB1dDogYXBpRGV0YWlscy5lbmRwb2ludCxcbiAgICB9LFxuICAgIGxhc3RQdXNoVGltZVN0YW1wOiBuZXcgRGF0ZSgpLFxuICB9O1xuICBpZiAoYXBpRGV0YWlscy5hcGlLZXkpIHtcbiAgICBhcHBzeW5jTWV0YWRhdGEub3V0cHV0LkdyYXBoUUxBUElLZXlPdXRwdXQgPSBhcGlEZXRhaWxzLmFwaUtleTtcbiAgfVxuXG4gIGNvbnN0IHsgYW1wbGlmeU1ldGEgfSA9IGNvbnRleHQuYW1wbGlmeS5nZXRQcm9qZWN0RGV0YWlscygpO1xuXG4gIGlmICghYW1wbGlmeU1ldGEuYXBpKSB7XG4gICAgYW1wbGlmeU1ldGEuYXBpID0ge307XG4gIH1cblxuICBhbXBsaWZ5TWV0YS5hcGlbYXBpRGV0YWlscy5uYW1lXSA9IGFwcHN5bmNNZXRhZGF0YTtcblxuXG4gIGNvbnN0IGFtcGxpZnlNZXRhRmlsZVBhdGggPSBjb250ZXh0LmFtcGxpZnkucGF0aE1hbmFnZXIuZ2V0QW1wbGlmeU1ldGFGaWxlUGF0aCgpO1xuICBmcy53cml0ZShhbXBsaWZ5TWV0YUZpbGVQYXRoLCBhbXBsaWZ5TWV0YSk7XG5cbiAgY29uc3QgY3VycmVudEFtcGxpZnlNZXRhRmlsZVBhdGggPSBjb250ZXh0LmFtcGxpZnkucGF0aE1hbmFnZXIuZ2V0Q3VyZW50QW1wbGlmeU1ldGFGaWxlUGF0aCgpO1xuICBjb25zdCBjdXJyZW50QW1wbGlmeU1ldGEgPSBKU09OLnBhcnNlKGZzLnJlYWQoY3VycmVudEFtcGxpZnlNZXRhRmlsZVBhdGgpKTtcbiAgaWYgKCFjdXJyZW50QW1wbGlmeU1ldGEuYXBpKSB7XG4gICAgY3VycmVudEFtcGxpZnlNZXRhLmFwaSA9IHt9O1xuICB9XG4gIGN1cnJlbnRBbXBsaWZ5TWV0YS5hcGlbYXBpRGV0YWlscy5uYW1lXSA9IGFwcHN5bmNNZXRhZGF0YTtcbiAgZnMud3JpdGUoY3VycmVudEFtcGxpZnlNZXRhRmlsZVBhdGgsIGN1cnJlbnRBbXBsaWZ5TWV0YSk7XG5cbiAgY29udGV4dC5hbXBsaWZ5Lm9uQ2F0ZWdvcnlPdXRwdXRzQ2hhbmdlKGNvbnRleHQpO1xuICBjb250ZXh0LnByaW50LnN1Y2Nlc3MoYFN1Y2Nlc3NmdWxseSBhZGRlZCBBUEkgJHthcGlEZXRhaWxzLm5hbWV9IHRvIHlvdXIgQW1wbGlmeSBwcm9qZWN0YCk7XG59O1xuIl19