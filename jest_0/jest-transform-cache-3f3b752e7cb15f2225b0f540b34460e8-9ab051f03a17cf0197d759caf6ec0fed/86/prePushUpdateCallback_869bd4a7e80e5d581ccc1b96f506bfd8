f33bfc6faa70a6f0f96fec765d51fef8
/* istanbul ignore next */var cov_1w7fpwhhaj = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/callbacks/prePushUpdateCallback.js',hash = '2e8fd96290116b0ce35b877b89fe6a07552f4d7c',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/callbacks/prePushUpdateCallback.js', statementMap: { '0': { start: { line: 1, column: 33 }, end: { line: 1, column: 73 } }, '1': { start: { line: 2, column: 18 }, end: { line: 2, column: 41 } }, '2': { start: { line: 3, column: 19 }, end: { line: 3, column: 47 } }, '3': { start: { line: 4, column: 28 }, end: { line: 4, column: 74 } }, '4': { start: { line: 5, column: 28 }, end: { line: 5, column: 74 } }, '5': { start: { line: 8, column: 17 }, end: { line: 8, column: 36 } }, '6': { start: { line: 9, column: 18 }, end: { line: 11, column: 66 } }, '7': { start: { line: 11, column: 25 }, end: { line: 11, column: 65 } }, '8': { start: { line: 12, column: 2 }, end: { line: 38, column: 3 } }, '9': { start: { line: 13, column: 29 }, end: { line: 13, column: 34 } }, '10': { start: { line: 14, column: 29 }, end: { line: 14, column: 34 } }, '11': { start: { line: 15, column: 4 }, end: { line: 30, column: 5 } }, '12': { start: { line: 16, column: 6 }, end: { line: 16, column: 36 } }, '13': { start: { line: 17, column: 26 }, end: { line: 17, column: 70 } }, '14': { start: { line: 18, column: 22 }, end: { line: 18, column: 53 } }, '15': { start: { line: 20, column: 6 }, end: { line: 20, column: 121 } }, '16': { start: { line: 20, column: 98 }, end: { line: 20, column: 119 } }, '17': { start: { line: 22, column: 6 }, end: { line: 24, column: 7 } }, '18': { start: { line: 23, column: 8 }, end: { line: 23, column: 123 } }, '19': { start: { line: 23, column: 100 }, end: { line: 23, column: 121 } }, '20': { start: { line: 26, column: 6 }, end: { line: 26, column: 55 } }, '21': { start: { line: 27, column: 6 }, end: { line: 29, column: 7 } }, '22': { start: { line: 28, column: 8 }, end: { line: 28, column: 57 } }, '23': { start: { line: 32, column: 4 }, end: { line: 37, column: 5 } }, '24': { start: { line: 33, column: 6 }, end: { line: 36, column: 8 } }, '25': { start: { line: 43, column: 2 }, end: { line: 49, column: 3 } }, '26': { start: { line: 44, column: 4 }, end: { line: 44, column: 39 } }, '27': { start: { line: 45, column: 9 }, end: { line: 49, column: 3 } }, '28': { start: { line: 46, column: 4 }, end: { line: 46, column: 26 } }, '29': { start: { line: 48, column: 4 }, end: { line: 48, column: 33 } }, '30': { start: { line: 50, column: 2 }, end: { line: 50, column: 16 } }, '31': { start: { line: 53, column: 0 }, end: { line: 53, column: 39 } } }, fnMap: { '0': { name: 'prePushUpdateCallback', decl: { start: { line: 7, column: 15 }, end: { line: 7, column: 36 } }, loc: { start: { line: 7, column: 60 }, end: { line: 39, column: 1 } }, line: 7 }, '1': { name: '(anonymous_1)', decl: { start: { line: 11, column: 10 }, end: { line: 11, column: 11 } }, loc: { start: { line: 11, column: 25 }, end: { line: 11, column: 65 } }, line: 11 }, '2': { name: '(anonymous_2)', decl: { start: { line: 20, column: 92 }, end: { line: 20, column: 93 } }, loc: { start: { line: 20, column: 98 }, end: { line: 20, column: 119 } }, line: 20 }, '3': { name: '(anonymous_3)', decl: { start: { line: 23, column: 94 }, end: { line: 23, column: 95 } }, loc: { start: { line: 23, column: 100 }, end: { line: 23, column: 121 } }, line: 23 }, '4': { name: 'determineValue', decl: { start: { line: 41, column: 15 }, end: { line: 41, column: 29 } }, loc: { start: { line: 41, column: 93 }, end: { line: 51, column: 1 } }, line: 41 } }, branchMap: { '0': { loc: { start: { line: 12, column: 2 }, end: { line: 38, column: 3 } }, type: 'if', locations: [{ start: { line: 12, column: 2 }, end: { line: 38, column: 3 } }, { start: { line: 12, column: 2 }, end: { line: 38, column: 3 } }], line: 12 }, '1': { loc: { start: { line: 15, column: 4 }, end: { line: 30, column: 5 } }, type: 'if', locations: [{ start: { line: 15, column: 4 }, end: { line: 30, column: 5 } }, { start: { line: 15, column: 4 }, end: { line: 30, column: 5 } }], line: 15 }, '2': { loc: { start: { line: 22, column: 6 }, end: { line: 24, column: 7 } }, type: 'if', locations: [{ start: { line: 22, column: 6 }, end: { line: 24, column: 7 } }, { start: { line: 22, column: 6 }, end: { line: 24, column: 7 } }], line: 22 }, '3': { loc: { start: { line: 27, column: 6 }, end: { line: 29, column: 7 } }, type: 'if', locations: [{ start: { line: 27, column: 6 }, end: { line: 29, column: 7 } }, { start: { line: 27, column: 6 }, end: { line: 29, column: 7 } }], line: 27 }, '4': { loc: { start: { line: 32, column: 4 }, end: { line: 37, column: 5 } }, type: 'if', locations: [{ start: { line: 32, column: 4 }, end: { line: 37, column: 5 } }, { start: { line: 32, column: 4 }, end: { line: 37, column: 5 } }], line: 32 }, '5': { loc: { start: { line: 43, column: 2 }, end: { line: 49, column: 3 } }, type: 'if', locations: [{ start: { line: 43, column: 2 }, end: { line: 49, column: 3 } }, { start: { line: 43, column: 2 }, end: { line: 49, column: 3 } }], line: 43 }, '6': { loc: { start: { line: 43, column: 6 }, end: { line: 43, column: 61 } }, type: 'binary-expr', locations: [{ start: { line: 43, column: 6 }, end: { line: 43, column: 17 } }, { start: { line: 43, column: 21 }, end: { line: 43, column: 61 } }], line: 43 }, '7': { loc: { start: { line: 45, column: 9 }, end: { line: 49, column: 3 } }, type: 'if', locations: [{ start: { line: 45, column: 9 }, end: { line: 49, column: 3 } }, { start: { line: 45, column: 9 }, end: { line: 49, column: 3 } }], line: 45 }, '8': { loc: { start: { line: 45, column: 13 }, end: { line: 45, column: 50 } }, type: 'binary-expr', locations: [{ start: { line: 45, column: 13 }, end: { line: 45, column: 20 } }, { start: { line: 45, column: 24 }, end: { line: 45, column: 50 } }], line: 45 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0, '26': 0, '27': 0, '28': 0, '29': 0, '30': 0, '31': 0 }, f: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0], '8': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const { normalizeInputParams } = /* istanbul ignore next */(cov_1w7fpwhhaj.s[0]++, require('../utils/input-params-manager'));
const constants = /* istanbul ignore next */(cov_1w7fpwhhaj.s[1]++, require('../constants'));
const loadConfig = /* istanbul ignore next */(cov_1w7fpwhhaj.s[2]++, require('../codegen-config'));
const askShouldUpdateCode = /* istanbul ignore next */(cov_1w7fpwhhaj.s[3]++, require('../walkthrough/questions/updateCode'));
const askShouldUpdateDocs = /* istanbul ignore next */(cov_1w7fpwhhaj.s[4]++, require('../walkthrough/questions/updateDocs'));

async function prePushUpdateCallback(context, resourceName) {/* istanbul ignore next */cov_1w7fpwhhaj.f[0]++;
  const config = /* istanbul ignore next */(cov_1w7fpwhhaj.s[5]++, loadConfig(context));
  const project = /* istanbul ignore next */(cov_1w7fpwhhaj.s[6]++, config.
  getProjects().
  find(projectItem => {/* istanbul ignore next */cov_1w7fpwhhaj.f[1]++;cov_1w7fpwhhaj.s[7]++;return projectItem.projectName === resourceName;})); /* istanbul ignore next */cov_1w7fpwhhaj.s[8]++;
  if (project) {/* istanbul ignore next */cov_1w7fpwhhaj.b[0][0]++;
    let shouldGenerateCode = /* istanbul ignore next */(cov_1w7fpwhhaj.s[9]++, false);
    let shouldGenerateDocs = /* istanbul ignore next */(cov_1w7fpwhhaj.s[10]++, false); /* istanbul ignore next */cov_1w7fpwhhaj.s[11]++;
    if (context.exeInfo.inputParams) {/* istanbul ignore next */cov_1w7fpwhhaj.b[1][0]++;cov_1w7fpwhhaj.s[12]++;
      normalizeInputParams(context);
      const inputParams = /* istanbul ignore next */(cov_1w7fpwhhaj.s[13]++, context.exeInfo.inputParams[constants.Label]);
      const yesFlag = /* istanbul ignore next */(cov_1w7fpwhhaj.s[14]++, context.exeInfo.inputParams.yes); /* istanbul ignore next */cov_1w7fpwhhaj.s[15]++;

      shouldGenerateCode = await determineValue(inputParams, yesFlag, 'generateCode', true, () => {/* istanbul ignore next */cov_1w7fpwhhaj.f[2]++;cov_1w7fpwhhaj.s[16]++;return askShouldUpdateCode();}); /* istanbul ignore next */cov_1w7fpwhhaj.s[17]++;

      if (shouldGenerateCode) {/* istanbul ignore next */cov_1w7fpwhhaj.b[2][0]++;cov_1w7fpwhhaj.s[18]++;
        shouldGenerateDocs = await determineValue(inputParams, yesFlag, 'generateDocs', true, () => {/* istanbul ignore next */cov_1w7fpwhhaj.f[3]++;cov_1w7fpwhhaj.s[19]++;return askShouldUpdateDocs();});
      } else /* istanbul ignore next */{cov_1w7fpwhhaj.b[2][1]++;}
    } else {/* istanbul ignore next */cov_1w7fpwhhaj.b[1][1]++;cov_1w7fpwhhaj.s[20]++;
      shouldGenerateCode = await askShouldUpdateCode(); /* istanbul ignore next */cov_1w7fpwhhaj.s[21]++;
      if (shouldGenerateCode) {/* istanbul ignore next */cov_1w7fpwhhaj.b[3][0]++;cov_1w7fpwhhaj.s[22]++;
        shouldGenerateDocs = await askShouldUpdateDocs();
      } else /* istanbul ignore next */{cov_1w7fpwhhaj.b[3][1]++;}
    } /* istanbul ignore next */cov_1w7fpwhhaj.s[23]++;

    if (shouldGenerateCode) {/* istanbul ignore next */cov_1w7fpwhhaj.b[4][0]++;cov_1w7fpwhhaj.s[24]++;
      return {
        gqlConfig: project,
        shouldGenerateDocs };

    } else /* istanbul ignore next */{cov_1w7fpwhhaj.b[4][1]++;}
  } else /* istanbul ignore next */{cov_1w7fpwhhaj.b[0][1]++;}
}

async function determineValue(inputParams, yesFlag, propertyName, defaultValue, askFunction) {/* istanbul ignore next */cov_1w7fpwhhaj.f[4]++;
  let result; /* istanbul ignore next */cov_1w7fpwhhaj.s[25]++;
  if ( /* istanbul ignore next */(cov_1w7fpwhhaj.b[6][0]++, inputParams) && /* istanbul ignore next */(cov_1w7fpwhhaj.b[6][1]++, inputParams.hasOwnProperty(propertyName))) {/* istanbul ignore next */cov_1w7fpwhhaj.b[5][0]++;cov_1w7fpwhhaj.s[26]++;
    result = inputParams[propertyName];
  } else {/* istanbul ignore next */cov_1w7fpwhhaj.b[5][1]++;cov_1w7fpwhhaj.s[27]++;if ( /* istanbul ignore next */(cov_1w7fpwhhaj.b[8][0]++, yesFlag) && /* istanbul ignore next */(cov_1w7fpwhhaj.b[8][1]++, defaultValue !== undefined)) {/* istanbul ignore next */cov_1w7fpwhhaj.b[7][0]++;cov_1w7fpwhhaj.s[28]++;
        result = defaultValue;
      } else {/* istanbul ignore next */cov_1w7fpwhhaj.b[7][1]++;cov_1w7fpwhhaj.s[29]++;
        result = await askFunction();
      }} /* istanbul ignore next */cov_1w7fpwhhaj.s[30]++;
  return result;
} /* istanbul ignore next */cov_1w7fpwhhaj.s[31]++;

module.exports = prePushUpdateCallback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZVB1c2hVcGRhdGVDYWxsYmFjay5qcyJdLCJuYW1lcyI6WyJub3JtYWxpemVJbnB1dFBhcmFtcyIsInJlcXVpcmUiLCJjb25zdGFudHMiLCJsb2FkQ29uZmlnIiwiYXNrU2hvdWxkVXBkYXRlQ29kZSIsImFza1Nob3VsZFVwZGF0ZURvY3MiLCJwcmVQdXNoVXBkYXRlQ2FsbGJhY2siLCJjb250ZXh0IiwicmVzb3VyY2VOYW1lIiwiY29uZmlnIiwicHJvamVjdCIsImdldFByb2plY3RzIiwiZmluZCIsInByb2plY3RJdGVtIiwicHJvamVjdE5hbWUiLCJzaG91bGRHZW5lcmF0ZUNvZGUiLCJzaG91bGRHZW5lcmF0ZURvY3MiLCJleGVJbmZvIiwiaW5wdXRQYXJhbXMiLCJMYWJlbCIsInllc0ZsYWciLCJ5ZXMiLCJkZXRlcm1pbmVWYWx1ZSIsImdxbENvbmZpZyIsInByb3BlcnR5TmFtZSIsImRlZmF1bHRWYWx1ZSIsImFza0Z1bmN0aW9uIiwicmVzdWx0IiwiaGFzT3duUHJvcGVydHkiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiNGpOQUFBLE1BQU0sRUFBRUEsb0JBQUYsdURBQTJCQyxRQUFRLCtCQUFSLENBQTNCLENBQU47QUFDQSxNQUFNQyw4REFBWUQsUUFBUSxjQUFSLENBQVosQ0FBTjtBQUNBLE1BQU1FLCtEQUFhRixRQUFRLG1CQUFSLENBQWIsQ0FBTjtBQUNBLE1BQU1HLHdFQUFzQkgsUUFBUSxxQ0FBUixDQUF0QixDQUFOO0FBQ0EsTUFBTUksd0VBQXNCSixRQUFRLHFDQUFSLENBQXRCLENBQU47O0FBRUEsZUFBZUsscUJBQWYsQ0FBcUNDLE9BQXJDLEVBQThDQyxZQUE5QyxFQUE0RDtBQUMxRCxRQUFNQywyREFBU04sV0FBV0ksT0FBWCxDQUFULENBQU47QUFDQSxRQUFNRyw0REFBVUQ7QUFDYkUsYUFEYTtBQUViQyxNQUZhLENBRVJDLGVBQWUsMEZBQVlDLFdBQVosS0FBNEJOLFlBQTVCLENBQXdDLENBRi9DLENBQVYsQ0FBTixDQUYwRDtBQUsxRCxNQUFJRSxPQUFKLEVBQWE7QUFDWCxRQUFJSyx1RUFBcUIsS0FBckIsQ0FBSjtBQUNBLFFBQUlDLHdFQUFxQixLQUFyQixDQUFKLENBRlc7QUFHWCxRQUFJVCxRQUFRVSxPQUFSLENBQWdCQyxXQUFwQixFQUFpQztBQUMvQmxCLDJCQUFxQk8sT0FBckI7QUFDQSxZQUFNVyxpRUFBY1gsUUFBUVUsT0FBUixDQUFnQkMsV0FBaEIsQ0FBNEJoQixVQUFVaUIsS0FBdEMsQ0FBZCxDQUFOO0FBQ0EsWUFBTUMsNkRBQVViLFFBQVFVLE9BQVIsQ0FBZ0JDLFdBQWhCLENBQTRCRyxHQUF0QyxDQUFOLENBSCtCOztBQUsvQk4sMkJBQXFCLE1BQU1PLGVBQWVKLFdBQWYsRUFBNEJFLE9BQTVCLEVBQXFDLGNBQXJDLEVBQXFELElBQXJELEVBQTJELE1BQU0scUdBQXFCLENBQXRGLENBQTNCLENBTCtCOztBQU8vQixVQUFJTCxrQkFBSixFQUF3QjtBQUN0QkMsNkJBQXFCLE1BQU1NLGVBQWVKLFdBQWYsRUFBNEJFLE9BQTVCLEVBQXFDLGNBQXJDLEVBQXFELElBQXJELEVBQTJELE1BQU0scUdBQXFCLENBQXRGLENBQTNCO0FBQ0QsT0FGRDtBQUdELEtBVkQsTUFVTztBQUNMTCwyQkFBcUIsTUFBTVgscUJBQTNCLENBREs7QUFFTCxVQUFJVyxrQkFBSixFQUF3QjtBQUN0QkMsNkJBQXFCLE1BQU1YLHFCQUEzQjtBQUNELE9BRkQ7QUFHRCxLQWxCVTs7QUFvQlgsUUFBSVUsa0JBQUosRUFBd0I7QUFDdEIsYUFBTztBQUNMUSxtQkFBV2IsT0FETjtBQUVMTSwwQkFGSyxFQUFQOztBQUlELEtBTEQ7QUFNRCxHQTFCRDtBQTJCRDs7QUFFRCxlQUFlTSxjQUFmLENBQThCSixXQUE5QixFQUEyQ0UsT0FBM0MsRUFBb0RJLFlBQXBELEVBQWtFQyxZQUFsRSxFQUFnRkMsV0FBaEYsRUFBNkY7QUFDM0YsTUFBSUMsTUFBSixDQUQyRjtBQUUzRixNQUFJLDJIQUFlVCxZQUFZVSxjQUFaLENBQTJCSixZQUEzQixDQUFmLENBQUosRUFBNkQ7QUFDM0RHLGFBQVNULFlBQVlNLFlBQVosQ0FBVDtBQUNELEdBRkQsTUFFTywrRUFBSSx1SEFBV0MsaUJBQWlCSSxTQUE1QixDQUFKLEVBQTJDO0FBQ2hERixpQkFBU0YsWUFBVDtBQUNELE9BRk0sTUFFQTtBQUNMRSxpQkFBUyxNQUFNRCxhQUFmO0FBQ0QsUUFSMEY7QUFTM0YsU0FBT0MsTUFBUDtBQUNELEM7O0FBRURHLE9BQU9DLE9BQVAsR0FBaUJ6QixxQkFBakIiLCJmaWxlIjoicHJlUHVzaFVwZGF0ZUNhbGxiYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBub3JtYWxpemVJbnB1dFBhcmFtcyB9ID0gcmVxdWlyZSgnLi4vdXRpbHMvaW5wdXQtcGFyYW1zLW1hbmFnZXInKTtcbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cycpO1xuY29uc3QgbG9hZENvbmZpZyA9IHJlcXVpcmUoJy4uL2NvZGVnZW4tY29uZmlnJyk7XG5jb25zdCBhc2tTaG91bGRVcGRhdGVDb2RlID0gcmVxdWlyZSgnLi4vd2Fsa3Rocm91Z2gvcXVlc3Rpb25zL3VwZGF0ZUNvZGUnKTtcbmNvbnN0IGFza1Nob3VsZFVwZGF0ZURvY3MgPSByZXF1aXJlKCcuLi93YWxrdGhyb3VnaC9xdWVzdGlvbnMvdXBkYXRlRG9jcycpO1xuXG5hc3luYyBmdW5jdGlvbiBwcmVQdXNoVXBkYXRlQ2FsbGJhY2soY29udGV4dCwgcmVzb3VyY2VOYW1lKSB7XG4gIGNvbnN0IGNvbmZpZyA9IGxvYWRDb25maWcoY29udGV4dCk7XG4gIGNvbnN0IHByb2plY3QgPSBjb25maWdcbiAgICAuZ2V0UHJvamVjdHMoKVxuICAgIC5maW5kKHByb2plY3RJdGVtID0+IHByb2plY3RJdGVtLnByb2plY3ROYW1lID09PSByZXNvdXJjZU5hbWUpO1xuICBpZiAocHJvamVjdCkge1xuICAgIGxldCBzaG91bGRHZW5lcmF0ZUNvZGUgPSBmYWxzZTtcbiAgICBsZXQgc2hvdWxkR2VuZXJhdGVEb2NzID0gZmFsc2U7XG4gICAgaWYgKGNvbnRleHQuZXhlSW5mby5pbnB1dFBhcmFtcykge1xuICAgICAgbm9ybWFsaXplSW5wdXRQYXJhbXMoY29udGV4dCk7XG4gICAgICBjb25zdCBpbnB1dFBhcmFtcyA9IGNvbnRleHQuZXhlSW5mby5pbnB1dFBhcmFtc1tjb25zdGFudHMuTGFiZWxdO1xuICAgICAgY29uc3QgeWVzRmxhZyA9IGNvbnRleHQuZXhlSW5mby5pbnB1dFBhcmFtcy55ZXM7XG5cbiAgICAgIHNob3VsZEdlbmVyYXRlQ29kZSA9IGF3YWl0IGRldGVybWluZVZhbHVlKGlucHV0UGFyYW1zLCB5ZXNGbGFnLCAnZ2VuZXJhdGVDb2RlJywgdHJ1ZSwgKCkgPT4gYXNrU2hvdWxkVXBkYXRlQ29kZSgpKTtcblxuICAgICAgaWYgKHNob3VsZEdlbmVyYXRlQ29kZSkge1xuICAgICAgICBzaG91bGRHZW5lcmF0ZURvY3MgPSBhd2FpdCBkZXRlcm1pbmVWYWx1ZShpbnB1dFBhcmFtcywgeWVzRmxhZywgJ2dlbmVyYXRlRG9jcycsIHRydWUsICgpID0+IGFza1Nob3VsZFVwZGF0ZURvY3MoKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNob3VsZEdlbmVyYXRlQ29kZSA9IGF3YWl0IGFza1Nob3VsZFVwZGF0ZUNvZGUoKTtcbiAgICAgIGlmIChzaG91bGRHZW5lcmF0ZUNvZGUpIHtcbiAgICAgICAgc2hvdWxkR2VuZXJhdGVEb2NzID0gYXdhaXQgYXNrU2hvdWxkVXBkYXRlRG9jcygpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChzaG91bGRHZW5lcmF0ZUNvZGUpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGdxbENvbmZpZzogcHJvamVjdCxcbiAgICAgICAgc2hvdWxkR2VuZXJhdGVEb2NzLFxuICAgICAgfTtcbiAgICB9XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZGV0ZXJtaW5lVmFsdWUoaW5wdXRQYXJhbXMsIHllc0ZsYWcsIHByb3BlcnR5TmFtZSwgZGVmYXVsdFZhbHVlLCBhc2tGdW5jdGlvbikge1xuICBsZXQgcmVzdWx0O1xuICBpZiAoaW5wdXRQYXJhbXMgJiYgaW5wdXRQYXJhbXMuaGFzT3duUHJvcGVydHkocHJvcGVydHlOYW1lKSkge1xuICAgIHJlc3VsdCA9IGlucHV0UGFyYW1zW3Byb3BlcnR5TmFtZV07XG4gIH0gZWxzZSBpZiAoeWVzRmxhZyAmJiBkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgIHJlc3VsdCA9IGRlZmF1bHRWYWx1ZTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHQgPSBhd2FpdCBhc2tGdW5jdGlvbigpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJlUHVzaFVwZGF0ZUNhbGxiYWNrO1xuIl19