9bc161f3082180fb8579a72fd3777d42
/* istanbul ignore next */var cov_yso4ct2r3 = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/commands/statements.js',hash = '3e1e978e570a368c3ccef3e51afe25d486f26ec8',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/commands/statements.js', statementMap: { '0': { start: { line: 1, column: 13 }, end: { line: 1, column: 28 } }, '1': { start: { line: 2, column: 16 }, end: { line: 2, column: 37 } }, '2': { start: { line: 3, column: 12 }, end: { line: 3, column: 26 } }, '3': { start: { line: 4, column: 22 }, end: { line: 4, column: 71 } }, '4': { start: { line: 6, column: 19 }, end: { line: 6, column: 47 } }, '5': { start: { line: 7, column: 18 }, end: { line: 7, column: 41 } }, '6': { start: { line: 8, column: 72 }, end: { line: 8, column: 91 } }, '7': { start: { line: 11, column: 17 }, end: { line: 11, column: 36 } }, '8': { start: { line: 12, column: 19 }, end: { line: 12, column: 39 } }, '9': { start: { line: 13, column: 2 }, end: { line: 16, column: 3 } }, '10': { start: { line: 14, column: 4 }, end: { line: 14, column: 66 } }, '11': { start: { line: 15, column: 4 }, end: { line: 15, column: 11 } }, '12': { start: { line: 17, column: 2 }, end: { line: 43, column: 5 } }, '13': { start: { line: 18, column: 25 }, end: { line: 18, column: 40 } }, '14': { start: { line: 20, column: 6 }, end: { line: 20, column: 83 } }, '15': { start: { line: 21, column: 19 }, end: { line: 21, column: 43 } }, '16': { start: { line: 22, column: 4 }, end: { line: 29, column: 5 } }, '17': { start: { line: 23, column: 6 }, end: { line: 28, column: 8 } }, '18': { start: { line: 30, column: 21 }, end: { line: 30, column: 48 } }, '19': { start: { line: 31, column: 21 }, end: { line: 31, column: 95 } }, '20': { start: { line: 32, column: 26 }, end: { line: 32, column: 65 } }, '21': { start: { line: 33, column: 4 }, end: { line: 33, column: 26 } }, '22': { start: { line: 34, column: 4 }, end: { line: 34, column: 33 } }, '23': { start: { line: 35, column: 4 }, end: { line: 39, column: 7 } }, '24': { start: { line: 40, column: 4 }, end: { line: 42, column: 6 } }, '25': { start: { line: 45, column: 0 }, end: { line: 45, column: 36 } } }, fnMap: { '0': { name: 'generateStatements', decl: { start: { line: 10, column: 15 }, end: { line: 10, column: 33 } }, loc: { start: { line: 10, column: 74 }, end: { line: 44, column: 1 } }, line: 10 }, '1': { name: '(anonymous_1)', decl: { start: { line: 17, column: 19 }, end: { line: 17, column: 20 } }, loc: { start: { line: 17, column: 34 }, end: { line: 43, column: 3 } }, line: 17 } }, branchMap: { '0': { loc: { start: { line: 13, column: 2 }, end: { line: 16, column: 3 } }, type: 'if', locations: [{ start: { line: 13, column: 2 }, end: { line: 16, column: 3 } }, { start: { line: 13, column: 2 }, end: { line: 16, column: 3 } }], line: 13 }, '1': { loc: { start: { line: 20, column: 6 }, end: { line: 20, column: 83 } }, type: 'binary-expr', locations: [{ start: { line: 20, column: 6 }, end: { line: 20, column: 39 } }, { start: { line: 20, column: 43 }, end: { line: 20, column: 83 } }], line: 20 }, '2': { loc: { start: { line: 22, column: 4 }, end: { line: 29, column: 5 } }, type: 'if', locations: [{ start: { line: 22, column: 4 }, end: { line: 29, column: 5 } }, { start: { line: 22, column: 4 }, end: { line: 29, column: 5 } }], line: 22 }, '3': { loc: { start: { line: 22, column: 8 }, end: { line: 22, column: 64 } }, type: 'binary-expr', locations: [{ start: { line: 22, column: 8 }, end: { line: 22, column: 27 } }, { start: { line: 22, column: 31 }, end: { line: 22, column: 64 } }], line: 22 }, '4': { loc: { start: { line: 31, column: 21 }, end: { line: 31, column: 95 } }, type: 'cond-expr', locations: [{ start: { line: 31, column: 49 }, end: { line: 31, column: 83 } }, { start: { line: 31, column: 86 }, end: { line: 31, column: 95 } }], line: 31 }, '5': { loc: { start: { line: 38, column: 16 }, end: { line: 38, column: 57 } }, type: 'binary-expr', locations: [{ start: { line: 38, column: 16 }, end: { line: 38, column: 24 } }, { start: { line: 38, column: 28 }, end: { line: 38, column: 57 } }], line: 38 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0, '23': 0, '24': 0, '25': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const path = /* istanbul ignore next */(cov_yso4ct2r3.s[0]++, require('path'));
const jetpack = /* istanbul ignore next */(cov_yso4ct2r3.s[1]++, require('fs-jetpack'));
const Ora = /* istanbul ignore next */(cov_yso4ct2r3.s[2]++, require('ora'));
const statementsGen = /* istanbul ignore next */(cov_yso4ct2r3.s[3]++, require('amplify-graphql-docs-generator').default);

const loadConfig = /* istanbul ignore next */(cov_yso4ct2r3.s[4]++, require('../codegen-config'));
const constants = /* istanbul ignore next */(cov_yso4ct2r3.s[5]++, require('../constants'));
const { downloadIntrospectionSchemaWithProgress, getFrontEndHandler } = /* istanbul ignore next */(cov_yso4ct2r3.s[6]++, require('../utils'));

async function generateStatements(context, forceDownloadSchema, maxDepth) {/* istanbul ignore next */cov_yso4ct2r3.f[0]++;
  const config = /* istanbul ignore next */(cov_yso4ct2r3.s[7]++, loadConfig(context));
  const projects = /* istanbul ignore next */(cov_yso4ct2r3.s[8]++, config.getProjects()); /* istanbul ignore next */cov_yso4ct2r3.s[9]++;
  if (!projects.length) {/* istanbul ignore next */cov_yso4ct2r3.b[0][0]++;cov_yso4ct2r3.s[10]++;
    context.print.info(constants.ERROR_CODEGEN_NO_API_CONFIGURED); /* istanbul ignore next */cov_yso4ct2r3.s[11]++;
    return;
  } else /* istanbul ignore next */{cov_yso4ct2r3.b[0][1]++;}cov_yso4ct2r3.s[12]++;
  projects.forEach(async cfg => {/* istanbul ignore next */cov_yso4ct2r3.f[1]++;
    const includeFiles = /* istanbul ignore next */(cov_yso4ct2r3.s[13]++, cfg.includes[0]);
    const opsGenDirectory = /* istanbul ignore next */(cov_yso4ct2r3.s[14]++,
    /* istanbul ignore next */(cov_yso4ct2r3.b[1][0]++, cfg.amplifyExtension.docsFilePath) || /* istanbul ignore next */(cov_yso4ct2r3.b[1][1]++, path.dirname(path.dirname(includeFiles))));
    const schema = /* istanbul ignore next */(cov_yso4ct2r3.s[15]++, path.resolve(cfg.schema)); /* istanbul ignore next */cov_yso4ct2r3.s[16]++;
    if ( /* istanbul ignore next */(cov_yso4ct2r3.b[3][0]++, forceDownloadSchema) || /* istanbul ignore next */(cov_yso4ct2r3.b[3][1]++, jetpack.exists(schema) !== 'file')) {/* istanbul ignore next */cov_yso4ct2r3.b[2][0]++;cov_yso4ct2r3.s[17]++;
      await downloadIntrospectionSchemaWithProgress(
      context,
      cfg.amplifyExtension.graphQLApiId,
      cfg.schema,
      cfg.amplifyExtension.region);

    } else /* istanbul ignore next */{cov_yso4ct2r3.b[2][1]++;}
    const frontend = /* istanbul ignore next */(cov_yso4ct2r3.s[18]++, getFrontEndHandler(context));
    const language = /* istanbul ignore next */(cov_yso4ct2r3.s[19]++, frontend === 'javascript' ? /* istanbul ignore next */(cov_yso4ct2r3.b[4][0]++, cfg.amplifyExtension.codeGenTarget) : /* istanbul ignore next */(cov_yso4ct2r3.b[4][1]++, 'graphql'));
    const opsGenSpinner = /* istanbul ignore next */(cov_yso4ct2r3.s[20]++, new Ora(constants.INFO_MESSAGE_OPS_GEN)); /* istanbul ignore next */cov_yso4ct2r3.s[21]++;
    opsGenSpinner.start(); /* istanbul ignore next */cov_yso4ct2r3.s[22]++;
    jetpack.dir(opsGenDirectory); /* istanbul ignore next */cov_yso4ct2r3.s[23]++;
    await statementsGen(schema, opsGenDirectory, {
      separateFiles: true,
      language,
      maxDepth: /* istanbul ignore next */(cov_yso4ct2r3.b[5][0]++, maxDepth) || /* istanbul ignore next */(cov_yso4ct2r3.b[5][1]++, cfg.amplifyExtension.maxDepth) }); /* istanbul ignore next */cov_yso4ct2r3.s[24]++;

    opsGenSpinner.succeed(
    constants.INFO_MESSAGE_OPS_GEN_SUCCESS + path.relative(path.resolve('.'), opsGenDirectory));

  });
} /* istanbul ignore next */cov_yso4ct2r3.s[25]++;
module.exports = generateStatements;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0YXRlbWVudHMuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJqZXRwYWNrIiwiT3JhIiwic3RhdGVtZW50c0dlbiIsImRlZmF1bHQiLCJsb2FkQ29uZmlnIiwiY29uc3RhbnRzIiwiZG93bmxvYWRJbnRyb3NwZWN0aW9uU2NoZW1hV2l0aFByb2dyZXNzIiwiZ2V0RnJvbnRFbmRIYW5kbGVyIiwiZ2VuZXJhdGVTdGF0ZW1lbnRzIiwiY29udGV4dCIsImZvcmNlRG93bmxvYWRTY2hlbWEiLCJtYXhEZXB0aCIsImNvbmZpZyIsInByb2plY3RzIiwiZ2V0UHJvamVjdHMiLCJsZW5ndGgiLCJwcmludCIsImluZm8iLCJFUlJPUl9DT0RFR0VOX05PX0FQSV9DT05GSUdVUkVEIiwiZm9yRWFjaCIsImNmZyIsImluY2x1ZGVGaWxlcyIsImluY2x1ZGVzIiwib3BzR2VuRGlyZWN0b3J5IiwiYW1wbGlmeUV4dGVuc2lvbiIsImRvY3NGaWxlUGF0aCIsImRpcm5hbWUiLCJzY2hlbWEiLCJyZXNvbHZlIiwiZXhpc3RzIiwiZ3JhcGhRTEFwaUlkIiwicmVnaW9uIiwiZnJvbnRlbmQiLCJsYW5ndWFnZSIsImNvZGVHZW5UYXJnZXQiLCJvcHNHZW5TcGlubmVyIiwiSU5GT19NRVNTQUdFX09QU19HRU4iLCJzdGFydCIsImRpciIsInNlcGFyYXRlRmlsZXMiLCJzdWNjZWVkIiwiSU5GT19NRVNTQUdFX09QU19HRU5fU1VDQ0VTUyIsInJlbGF0aXZlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Iit1SkFBQSxNQUFNQSx3REFBT0MsUUFBUSxNQUFSLENBQVAsQ0FBTjtBQUNBLE1BQU1DLDJEQUFVRCxRQUFRLFlBQVIsQ0FBVixDQUFOO0FBQ0EsTUFBTUUsdURBQU1GLFFBQVEsS0FBUixDQUFOLENBQU47QUFDQSxNQUFNRyxpRUFBZ0JILFFBQVEsZ0NBQVIsRUFBMENJLE9BQTFELENBQU47O0FBRUEsTUFBTUMsOERBQWFMLFFBQVEsbUJBQVIsQ0FBYixDQUFOO0FBQ0EsTUFBTU0sNkRBQVlOLFFBQVEsY0FBUixDQUFaLENBQU47QUFDQSxNQUFNLEVBQUVPLHVDQUFGLEVBQTJDQyxrQkFBM0Msc0RBQWtFUixRQUFRLFVBQVIsQ0FBbEUsQ0FBTjs7QUFFQSxlQUFlUyxrQkFBZixDQUFrQ0MsT0FBbEMsRUFBMkNDLG1CQUEzQyxFQUFnRUMsUUFBaEUsRUFBMEU7QUFDeEUsUUFBTUMsMERBQVNSLFdBQVdLLE9BQVgsQ0FBVCxDQUFOO0FBQ0EsUUFBTUksNERBQVdELE9BQU9FLFdBQVAsRUFBWCxDQUFOLENBRndFO0FBR3hFLE1BQUksQ0FBQ0QsU0FBU0UsTUFBZCxFQUFzQjtBQUNwQk4sWUFBUU8sS0FBUixDQUFjQyxJQUFkLENBQW1CWixVQUFVYSwrQkFBN0IsRUFEb0I7QUFFcEI7QUFDRCxHQUhELDBEQUh3RTtBQU94RUwsV0FBU00sT0FBVCxDQUFpQixNQUFPQyxHQUFQLElBQWU7QUFDOUIsVUFBTUMsaUVBQWVELElBQUlFLFFBQUosQ0FBYSxDQUFiLENBQWYsQ0FBTjtBQUNBLFVBQU1DO0FBQ0osNERBQUlDLGdCQUFKLENBQXFCQyxZQUFyQix5REFBcUMzQixLQUFLNEIsT0FBTCxDQUFhNUIsS0FBSzRCLE9BQUwsQ0FBYUwsWUFBYixDQUFiLENBQXJDLENBREksQ0FBTjtBQUVBLFVBQU1NLDJEQUFTN0IsS0FBSzhCLE9BQUwsQ0FBYVIsSUFBSU8sTUFBakIsQ0FBVCxDQUFOLENBSjhCO0FBSzlCLFFBQUksaUlBQXVCM0IsUUFBUTZCLE1BQVIsQ0FBZUYsTUFBZixNQUEyQixNQUFsRCxDQUFKLEVBQThEO0FBQzVELFlBQU1yQjtBQUNKRyxhQURJO0FBRUpXLFVBQUlJLGdCQUFKLENBQXFCTSxZQUZqQjtBQUdKVixVQUFJTyxNQUhBO0FBSUpQLFVBQUlJLGdCQUFKLENBQXFCTyxNQUpqQixDQUFOOztBQU1ELEtBUEQ7QUFRQSxVQUFNQyw2REFBV3pCLG1CQUFtQkUsT0FBbkIsQ0FBWCxDQUFOO0FBQ0EsVUFBTXdCLDZEQUFXRCxhQUFhLFlBQWIsdURBQTRCWixJQUFJSSxnQkFBSixDQUFxQlUsYUFBakQsd0RBQWlFLFNBQWpFLENBQVgsQ0FBTjtBQUNBLFVBQU1DLGtFQUFnQixJQUFJbEMsR0FBSixDQUFRSSxVQUFVK0Isb0JBQWxCLENBQWhCLENBQU4sQ0FmOEI7QUFnQjlCRCxrQkFBY0UsS0FBZCxHQWhCOEI7QUFpQjlCckMsWUFBUXNDLEdBQVIsQ0FBWWYsZUFBWixFQWpCOEI7QUFrQjlCLFVBQU1yQixjQUFjeUIsTUFBZCxFQUFzQkosZUFBdEIsRUFBdUM7QUFDM0NnQixxQkFBZSxJQUQ0QjtBQUUzQ04sY0FGMkM7QUFHM0N0QixnQkFBVSxxSEFBWVMsSUFBSUksZ0JBQUosQ0FBcUJiLFFBQWpDLENBSGlDLEVBQXZDLENBQU4sQ0FsQjhCOztBQXVCOUJ3QixrQkFBY0ssT0FBZDtBQUNFbkMsY0FBVW9DLDRCQUFWLEdBQXlDM0MsS0FBSzRDLFFBQUwsQ0FBYzVDLEtBQUs4QixPQUFMLENBQWEsR0FBYixDQUFkLEVBQWlDTCxlQUFqQyxDQUQzQzs7QUFHRCxHQTFCRDtBQTJCRCxDO0FBQ0RvQixPQUFPQyxPQUFQLEdBQWlCcEMsa0JBQWpCIiwiZmlsZSI6InN0YXRlbWVudHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgamV0cGFjayA9IHJlcXVpcmUoJ2ZzLWpldHBhY2snKTtcbmNvbnN0IE9yYSA9IHJlcXVpcmUoJ29yYScpO1xuY29uc3Qgc3RhdGVtZW50c0dlbiA9IHJlcXVpcmUoJ2FtcGxpZnktZ3JhcGhxbC1kb2NzLWdlbmVyYXRvcicpLmRlZmF1bHQ7XG5cbmNvbnN0IGxvYWRDb25maWcgPSByZXF1aXJlKCcuLi9jb2RlZ2VuLWNvbmZpZycpO1xuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzJyk7XG5jb25zdCB7IGRvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYVdpdGhQcm9ncmVzcywgZ2V0RnJvbnRFbmRIYW5kbGVyIH0gPSByZXF1aXJlKCcuLi91dGlscycpO1xuXG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZVN0YXRlbWVudHMoY29udGV4dCwgZm9yY2VEb3dubG9hZFNjaGVtYSwgbWF4RGVwdGgpIHtcbiAgY29uc3QgY29uZmlnID0gbG9hZENvbmZpZyhjb250ZXh0KTtcbiAgY29uc3QgcHJvamVjdHMgPSBjb25maWcuZ2V0UHJvamVjdHMoKTtcbiAgaWYgKCFwcm9qZWN0cy5sZW5ndGgpIHtcbiAgICBjb250ZXh0LnByaW50LmluZm8oY29uc3RhbnRzLkVSUk9SX0NPREVHRU5fTk9fQVBJX0NPTkZJR1VSRUQpO1xuICAgIHJldHVybjtcbiAgfVxuICBwcm9qZWN0cy5mb3JFYWNoKGFzeW5jIChjZmcpID0+IHtcbiAgICBjb25zdCBpbmNsdWRlRmlsZXMgPSBjZmcuaW5jbHVkZXNbMF07XG4gICAgY29uc3Qgb3BzR2VuRGlyZWN0b3J5ID1cbiAgICAgIGNmZy5hbXBsaWZ5RXh0ZW5zaW9uLmRvY3NGaWxlUGF0aCB8fCBwYXRoLmRpcm5hbWUocGF0aC5kaXJuYW1lKGluY2x1ZGVGaWxlcykpO1xuICAgIGNvbnN0IHNjaGVtYSA9IHBhdGgucmVzb2x2ZShjZmcuc2NoZW1hKTtcbiAgICBpZiAoZm9yY2VEb3dubG9hZFNjaGVtYSB8fCBqZXRwYWNrLmV4aXN0cyhzY2hlbWEpICE9PSAnZmlsZScpIHtcbiAgICAgIGF3YWl0IGRvd25sb2FkSW50cm9zcGVjdGlvblNjaGVtYVdpdGhQcm9ncmVzcyhcbiAgICAgICAgY29udGV4dCxcbiAgICAgICAgY2ZnLmFtcGxpZnlFeHRlbnNpb24uZ3JhcGhRTEFwaUlkLFxuICAgICAgICBjZmcuc2NoZW1hLFxuICAgICAgICBjZmcuYW1wbGlmeUV4dGVuc2lvbi5yZWdpb24sXG4gICAgICApO1xuICAgIH1cbiAgICBjb25zdCBmcm9udGVuZCA9IGdldEZyb250RW5kSGFuZGxlcihjb250ZXh0KTtcbiAgICBjb25zdCBsYW5ndWFnZSA9IGZyb250ZW5kID09PSAnamF2YXNjcmlwdCcgPyBjZmcuYW1wbGlmeUV4dGVuc2lvbi5jb2RlR2VuVGFyZ2V0IDogJ2dyYXBocWwnO1xuICAgIGNvbnN0IG9wc0dlblNwaW5uZXIgPSBuZXcgT3JhKGNvbnN0YW50cy5JTkZPX01FU1NBR0VfT1BTX0dFTik7XG4gICAgb3BzR2VuU3Bpbm5lci5zdGFydCgpO1xuICAgIGpldHBhY2suZGlyKG9wc0dlbkRpcmVjdG9yeSk7XG4gICAgYXdhaXQgc3RhdGVtZW50c0dlbihzY2hlbWEsIG9wc0dlbkRpcmVjdG9yeSwge1xuICAgICAgc2VwYXJhdGVGaWxlczogdHJ1ZSxcbiAgICAgIGxhbmd1YWdlLFxuICAgICAgbWF4RGVwdGg6IG1heERlcHRoIHx8IGNmZy5hbXBsaWZ5RXh0ZW5zaW9uLm1heERlcHRoLFxuICAgIH0pO1xuICAgIG9wc0dlblNwaW5uZXIuc3VjY2VlZChcbiAgICAgIGNvbnN0YW50cy5JTkZPX01FU1NBR0VfT1BTX0dFTl9TVUNDRVNTICsgcGF0aC5yZWxhdGl2ZShwYXRoLnJlc29sdmUoJy4nKSwgb3BzR2VuRGlyZWN0b3J5KSxcbiAgICApO1xuICB9KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZ2VuZXJhdGVTdGF0ZW1lbnRzO1xuIl19