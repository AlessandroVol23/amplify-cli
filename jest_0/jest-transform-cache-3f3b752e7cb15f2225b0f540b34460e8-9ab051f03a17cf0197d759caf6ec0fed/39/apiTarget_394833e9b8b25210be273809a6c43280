92c1b95774482be1efb1ae718c3cf53f
/* istanbul ignore next */var cov_2hpzi1i5rm = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/questions/apiTarget.js',hash = 'd40664c6a5f1ebad067a7a6ed476a4ae21a567df',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/walkthrough/questions/apiTarget.js', statementMap: { '0': { start: { line: 1, column: 17 }, end: { line: 1, column: 36 } }, '1': { start: { line: 3, column: 18 }, end: { line: 3, column: 44 } }, '2': { start: { line: 6, column: 18 }, end: { line: 6, column: 70 } }, '3': { start: { line: 6, column: 35 }, end: { line: 6, column: 68 } }, '4': { start: { line: 7, column: 2 }, end: { line: 9, column: 3 } }, '5': { start: { line: 8, column: 4 }, end: { line: 8, column: 22 } }, '6': { start: { line: 11, column: 17 }, end: { line: 19, column: 4 } }, '7': { start: { line: 21, column: 2 }, end: { line: 21, column: 22 } }, '8': { start: { line: 24, column: 0 }, end: { line: 24, column: 37 } } }, fnMap: { '0': { name: 'askAppSyncAPITarget', decl: { start: { line: 5, column: 15 }, end: { line: 5, column: 34 } }, loc: { start: { line: 5, column: 70 }, end: { line: 22, column: 1 } }, line: 5 }, '1': { name: '(anonymous_1)', decl: { start: { line: 6, column: 27 }, end: { line: 6, column: 28 } }, loc: { start: { line: 6, column: 35 }, end: { line: 6, column: 68 } }, line: 6 } }, branchMap: { '0': { loc: { start: { line: 5, column: 50 }, end: { line: 5, column: 68 } }, type: 'default-arg', locations: [{ start: { line: 5, column: 64 }, end: { line: 5, column: 68 } }], line: 5 }, '1': { loc: { start: { line: 7, column: 2 }, end: { line: 9, column: 3 } }, type: 'if', locations: [{ start: { line: 7, column: 2 }, end: { line: 9, column: 3 } }, { start: { line: 7, column: 2 }, end: { line: 9, column: 3 } }], line: 7 }, '2': { loc: { start: { line: 17, column: 15 }, end: { line: 17, column: 34 } }, type: 'binary-expr', locations: [{ start: { line: 17, column: 15 }, end: { line: 17, column: 26 } }, { start: { line: 17, column: 30 }, end: { line: 17, column: 34 } }], line: 17 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0 }, f: { '0': 0, '1': 0 }, b: { '0': [0], '1': [0, 0], '2': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const inquirer = /* istanbul ignore next */(cov_2hpzi1i5rm.s[0]++, require('inquirer'));

const constants = /* istanbul ignore next */(cov_2hpzi1i5rm.s[1]++, require('../../constants'));

async function askAppSyncAPITarget(context, apis, selectedApi = /* istanbul ignore next */(cov_2hpzi1i5rm.b[0][0]++, null)) {/* istanbul ignore next */cov_2hpzi1i5rm.f[0]++;
  const choices = /* istanbul ignore next */(cov_2hpzi1i5rm.s[2]++, apis.map(api => {/* istanbul ignore next */cov_2hpzi1i5rm.f[1]++;cov_2hpzi1i5rm.s[3]++;return { name: api.name, value: api.id };})); /* istanbul ignore next */cov_2hpzi1i5rm.s[4]++;
  if (apis.length === 1) {/* istanbul ignore next */cov_2hpzi1i5rm.b[1][0]++;cov_2hpzi1i5rm.s[5]++;
    return apis[0].id;
  } else /* istanbul ignore next */{cov_2hpzi1i5rm.b[1][1]++;}

  const answer = /* istanbul ignore next */(cov_2hpzi1i5rm.s[6]++, await inquirer.prompt([
  {
    name: 'apiId',
    message: constants.PROMPT_MSG_API_LIST,
    type: 'list',
    choices,
    default: /* istanbul ignore next */(cov_2hpzi1i5rm.b[2][0]++, selectedApi) || /* istanbul ignore next */(cov_2hpzi1i5rm.b[2][1]++, null) }])); /* istanbul ignore next */cov_2hpzi1i5rm.s[7]++;



  return answer.apiId;
} /* istanbul ignore next */cov_2hpzi1i5rm.s[8]++;

module.exports = askAppSyncAPITarget;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaVRhcmdldC5qcyJdLCJuYW1lcyI6WyJpbnF1aXJlciIsInJlcXVpcmUiLCJjb25zdGFudHMiLCJhc2tBcHBTeW5jQVBJVGFyZ2V0IiwiY29udGV4dCIsImFwaXMiLCJzZWxlY3RlZEFwaSIsImNob2ljZXMiLCJtYXAiLCJhcGkiLCJuYW1lIiwidmFsdWUiLCJpZCIsImxlbmd0aCIsImFuc3dlciIsInByb21wdCIsIm1lc3NhZ2UiLCJQUk9NUFRfTVNHX0FQSV9MSVNUIiwidHlwZSIsImRlZmF1bHQiLCJhcGlJZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJ1aEZBQUEsTUFBTUEsNkRBQVdDLFFBQVEsVUFBUixDQUFYLENBQU47O0FBRUEsTUFBTUMsOERBQVlELFFBQVEsaUJBQVIsQ0FBWixDQUFOOztBQUVBLGVBQWVFLG1CQUFmLENBQW1DQyxPQUFuQyxFQUE0Q0MsSUFBNUMsRUFBa0RDLG1FQUFjLElBQWQsQ0FBbEQsRUFBc0U7QUFDcEUsUUFBTUMsNERBQVVGLEtBQUtHLEdBQUwsQ0FBU0MsT0FBUSxnRkFBRUMsTUFBTUQsSUFBSUMsSUFBWixFQUFrQkMsT0FBT0YsSUFBSUcsRUFBN0IsR0FBaUMsQ0FBbEQsQ0FBVixDQUFOLENBRG9FO0FBRXBFLE1BQUlQLEtBQUtRLE1BQUwsS0FBZ0IsQ0FBcEIsRUFBdUI7QUFDckIsV0FBT1IsS0FBSyxDQUFMLEVBQVFPLEVBQWY7QUFDRCxHQUZEOztBQUlBLFFBQU1FLDJEQUFTLE1BQU1kLFNBQVNlLE1BQVQsQ0FBZ0I7QUFDbkM7QUFDRUwsVUFBTSxPQURSO0FBRUVNLGFBQVNkLFVBQVVlLG1CQUZyQjtBQUdFQyxVQUFNLE1BSFI7QUFJRVgsV0FKRjtBQUtFWSxhQUFTLDBIQUFlLElBQWYsQ0FMWCxFQURtQyxDQUFoQixDQUFmLENBQU4sQ0FOb0U7Ozs7QUFnQnBFLFNBQU9MLE9BQU9NLEtBQWQ7QUFDRCxDOztBQUVEQyxPQUFPQyxPQUFQLEdBQWlCbkIsbUJBQWpCIiwiZmlsZSI6ImFwaVRhcmdldC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGlucXVpcmVyID0gcmVxdWlyZSgnaW5xdWlyZXInKTtcblxuY29uc3QgY29uc3RhbnRzID0gcmVxdWlyZSgnLi4vLi4vY29uc3RhbnRzJyk7XG5cbmFzeW5jIGZ1bmN0aW9uIGFza0FwcFN5bmNBUElUYXJnZXQoY29udGV4dCwgYXBpcywgc2VsZWN0ZWRBcGkgPSBudWxsKSB7XG4gIGNvbnN0IGNob2ljZXMgPSBhcGlzLm1hcChhcGkgPT4gKHsgbmFtZTogYXBpLm5hbWUsIHZhbHVlOiBhcGkuaWQgfSkpO1xuICBpZiAoYXBpcy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gYXBpc1swXS5pZDtcbiAgfVxuXG4gIGNvbnN0IGFuc3dlciA9IGF3YWl0IGlucXVpcmVyLnByb21wdChbXG4gICAge1xuICAgICAgbmFtZTogJ2FwaUlkJyxcbiAgICAgIG1lc3NhZ2U6IGNvbnN0YW50cy5QUk9NUFRfTVNHX0FQSV9MSVNULFxuICAgICAgdHlwZTogJ2xpc3QnLFxuICAgICAgY2hvaWNlcyxcbiAgICAgIGRlZmF1bHQ6IHNlbGVjdGVkQXBpIHx8IG51bGwsXG4gICAgfSxcbiAgXSk7XG5cbiAgcmV0dXJuIGFuc3dlci5hcGlJZDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc2tBcHBTeW5jQVBJVGFyZ2V0O1xuIl19