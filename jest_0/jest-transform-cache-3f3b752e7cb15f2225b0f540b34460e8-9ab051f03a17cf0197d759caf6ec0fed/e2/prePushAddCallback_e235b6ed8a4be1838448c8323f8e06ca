6e5c4517d7901135c0b5725f4721a7f6
/* istanbul ignore next */var cov_265ewlyjf5 = function () {var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/callbacks/prePushAddCallback.js',hash = 'abcad44985c72c0e2ccec8ba781f75f40f7dd73c',Function = function () {}.constructor,global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-codegen/src/callbacks/prePushAddCallback.js', statementMap: { '0': { start: { line: 1, column: 33 }, end: { line: 1, column: 73 } }, '1': { start: { line: 2, column: 18 }, end: { line: 2, column: 41 } }, '2': { start: { line: 3, column: 30 }, end: { line: 3, column: 78 } }, '3': { start: { line: 4, column: 23 }, end: { line: 4, column: 52 } }, '4': { start: { line: 7, column: 27 }, end: { line: 7, column: 32 } }, '5': { start: { line: 8, column: 2 }, end: { line: 16, column: 3 } }, '6': { start: { line: 9, column: 4 }, end: { line: 9, column: 34 } }, '7': { start: { line: 10, column: 24 }, end: { line: 10, column: 68 } }, '8': { start: { line: 11, column: 20 }, end: { line: 11, column: 51 } }, '9': { start: { line: 13, column: 4 }, end: { line: 13, column: 121 } }, '10': { start: { line: 13, column: 96 }, end: { line: 13, column: 119 } }, '11': { start: { line: 15, column: 4 }, end: { line: 15, column: 55 } }, '12': { start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }, '13': { start: { line: 19, column: 20 }, end: { line: 19, column: 73 } }, '14': { start: { line: 20, column: 23 }, end: { line: 29, column: 5 } }, '15': { start: { line: 30, column: 4 }, end: { line: 33, column: 6 } }, '16': { start: { line: 39, column: 2 }, end: { line: 45, column: 3 } }, '17': { start: { line: 40, column: 4 }, end: { line: 40, column: 39 } }, '18': { start: { line: 41, column: 9 }, end: { line: 45, column: 3 } }, '19': { start: { line: 42, column: 4 }, end: { line: 42, column: 26 } }, '20': { start: { line: 44, column: 4 }, end: { line: 44, column: 33 } }, '21': { start: { line: 46, column: 2 }, end: { line: 46, column: 16 } }, '22': { start: { line: 49, column: 0 }, end: { line: 49, column: 36 } } }, fnMap: { '0': { name: 'prePushAddCallback', decl: { start: { line: 6, column: 15 }, end: { line: 6, column: 33 } }, loc: { start: { line: 6, column: 57 }, end: { line: 35, column: 1 } }, line: 6 }, '1': { name: '(anonymous_1)', decl: { start: { line: 13, column: 90 }, end: { line: 13, column: 91 } }, loc: { start: { line: 13, column: 96 }, end: { line: 13, column: 119 } }, line: 13 }, '2': { name: 'determineValue', decl: { start: { line: 37, column: 15 }, end: { line: 37, column: 29 } }, loc: { start: { line: 37, column: 93 }, end: { line: 47, column: 1 } }, line: 37 } }, branchMap: { '0': { loc: { start: { line: 8, column: 2 }, end: { line: 16, column: 3 } }, type: 'if', locations: [{ start: { line: 8, column: 2 }, end: { line: 16, column: 3 } }, { start: { line: 8, column: 2 }, end: { line: 16, column: 3 } }], line: 8 }, '1': { loc: { start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }, type: 'if', locations: [{ start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }, { start: { line: 18, column: 2 }, end: { line: 34, column: 3 } }], line: 18 }, '2': { loc: { start: { line: 25, column: 23 }, end: { line: 25, column: 43 } }, type: 'binary-expr', locations: [{ start: { line: 25, column: 23 }, end: { line: 25, column: 37 } }, { start: { line: 25, column: 41 }, end: { line: 25, column: 43 } }], line: 25 }, '3': { loc: { start: { line: 26, column: 27 }, end: { line: 26, column: 58 } }, type: 'binary-expr', locations: [{ start: { line: 26, column: 27 }, end: { line: 26, column: 52 } }, { start: { line: 26, column: 56 }, end: { line: 26, column: 58 } }], line: 26 }, '4': { loc: { start: { line: 39, column: 2 }, end: { line: 45, column: 3 } }, type: 'if', locations: [{ start: { line: 39, column: 2 }, end: { line: 45, column: 3 } }, { start: { line: 39, column: 2 }, end: { line: 45, column: 3 } }], line: 39 }, '5': { loc: { start: { line: 39, column: 6 }, end: { line: 39, column: 61 } }, type: 'binary-expr', locations: [{ start: { line: 39, column: 6 }, end: { line: 39, column: 17 } }, { start: { line: 39, column: 21 }, end: { line: 39, column: 61 } }], line: 39 }, '6': { loc: { start: { line: 41, column: 9 }, end: { line: 45, column: 3 } }, type: 'if', locations: [{ start: { line: 41, column: 9 }, end: { line: 45, column: 3 } }, { start: { line: 41, column: 9 }, end: { line: 45, column: 3 } }], line: 41 }, '7': { loc: { start: { line: 41, column: 13 }, end: { line: 41, column: 50 } }, type: 'binary-expr', locations: [{ start: { line: 41, column: 13 }, end: { line: 41, column: 20 } }, { start: { line: 41, column: 24 }, end: { line: 41, column: 50 } }], line: 41 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0, '18': 0, '19': 0, '20': 0, '21': 0, '22': 0 }, f: { '0': 0, '1': 0, '2': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();const { normalizeInputParams } = /* istanbul ignore next */(cov_265ewlyjf5.s[0]++, require('../utils/input-params-manager'));
const constants = /* istanbul ignore next */(cov_265ewlyjf5.s[1]++, require('../constants'));
const askShouldGenerateCode = /* istanbul ignore next */(cov_265ewlyjf5.s[2]++, require('../walkthrough/questions/generateCode'));
const addWalkThrough = /* istanbul ignore next */(cov_265ewlyjf5.s[3]++, require('../walkthrough/add'));

async function prePushAddCallback(context, resourceName) {/* istanbul ignore next */cov_265ewlyjf5.f[0]++;
  let shouldGenerateCode = /* istanbul ignore next */(cov_265ewlyjf5.s[4]++, false); /* istanbul ignore next */cov_265ewlyjf5.s[5]++;
  if (context.exeInfo.inputParams) {/* istanbul ignore next */cov_265ewlyjf5.b[0][0]++;cov_265ewlyjf5.s[6]++;
    normalizeInputParams(context);
    const inputParams = /* istanbul ignore next */(cov_265ewlyjf5.s[7]++, context.exeInfo.inputParams[constants.Label]);
    const yesFlag = /* istanbul ignore next */(cov_265ewlyjf5.s[8]++, context.exeInfo.inputParams.yes); /* istanbul ignore next */cov_265ewlyjf5.s[9]++;

    shouldGenerateCode = await determineValue(inputParams, yesFlag, 'generateCode', true, () => {/* istanbul ignore next */cov_265ewlyjf5.f[1]++;cov_265ewlyjf5.s[10]++;return askShouldGenerateCode();});
  } else {/* istanbul ignore next */cov_265ewlyjf5.b[0][1]++;cov_265ewlyjf5.s[11]++;
    shouldGenerateCode = await askShouldGenerateCode();
  } /* istanbul ignore next */cov_265ewlyjf5.s[12]++;

  if (shouldGenerateCode) {/* istanbul ignore next */cov_265ewlyjf5.b[1][0]++;
    const answers = /* istanbul ignore next */(cov_265ewlyjf5.s[13]++, await addWalkThrough(context, ['shouldGenerateCode']));
    const newProject = /* istanbul ignore next */(cov_265ewlyjf5.s[14]++, {
      projectName: resourceName,
      includes: answers.includePattern,
      excludes: answers.excludePattern,
      amplifyExtension: {
        codeGenTarget: /* istanbul ignore next */(cov_265ewlyjf5.b[2][0]++, answers.target) || /* istanbul ignore next */(cov_265ewlyjf5.b[2][1]++, ''),
        generatedFileName: /* istanbul ignore next */(cov_265ewlyjf5.b[3][0]++, answers.generatedFileName) || /* istanbul ignore next */(cov_265ewlyjf5.b[3][1]++, ''),
        docsFilePath: answers.docsFilePath } }); /* istanbul ignore next */cov_265ewlyjf5.s[15]++;


    return {
      gqlConfig: newProject,
      shouldGenerateDocs: answers.shouldGenerateDocs };

  } else /* istanbul ignore next */{cov_265ewlyjf5.b[1][1]++;}
}

async function determineValue(inputParams, yesFlag, propertyName, defaultValue, askFunction) {/* istanbul ignore next */cov_265ewlyjf5.f[2]++;
  let result; /* istanbul ignore next */cov_265ewlyjf5.s[16]++;
  if ( /* istanbul ignore next */(cov_265ewlyjf5.b[5][0]++, inputParams) && /* istanbul ignore next */(cov_265ewlyjf5.b[5][1]++, inputParams.hasOwnProperty(propertyName))) {/* istanbul ignore next */cov_265ewlyjf5.b[4][0]++;cov_265ewlyjf5.s[17]++;
    result = inputParams[propertyName];
  } else {/* istanbul ignore next */cov_265ewlyjf5.b[4][1]++;cov_265ewlyjf5.s[18]++;if ( /* istanbul ignore next */(cov_265ewlyjf5.b[7][0]++, yesFlag) && /* istanbul ignore next */(cov_265ewlyjf5.b[7][1]++, defaultValue !== undefined)) {/* istanbul ignore next */cov_265ewlyjf5.b[6][0]++;cov_265ewlyjf5.s[19]++;
        result = defaultValue;
      } else {/* istanbul ignore next */cov_265ewlyjf5.b[6][1]++;cov_265ewlyjf5.s[20]++;
        result = await askFunction();
      }} /* istanbul ignore next */cov_265ewlyjf5.s[21]++;
  return result;
} /* istanbul ignore next */cov_265ewlyjf5.s[22]++;

module.exports = prePushAddCallback;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByZVB1c2hBZGRDYWxsYmFjay5qcyJdLCJuYW1lcyI6WyJub3JtYWxpemVJbnB1dFBhcmFtcyIsInJlcXVpcmUiLCJjb25zdGFudHMiLCJhc2tTaG91bGRHZW5lcmF0ZUNvZGUiLCJhZGRXYWxrVGhyb3VnaCIsInByZVB1c2hBZGRDYWxsYmFjayIsImNvbnRleHQiLCJyZXNvdXJjZU5hbWUiLCJzaG91bGRHZW5lcmF0ZUNvZGUiLCJleGVJbmZvIiwiaW5wdXRQYXJhbXMiLCJMYWJlbCIsInllc0ZsYWciLCJ5ZXMiLCJkZXRlcm1pbmVWYWx1ZSIsImFuc3dlcnMiLCJuZXdQcm9qZWN0IiwicHJvamVjdE5hbWUiLCJpbmNsdWRlcyIsImluY2x1ZGVQYXR0ZXJuIiwiZXhjbHVkZXMiLCJleGNsdWRlUGF0dGVybiIsImFtcGxpZnlFeHRlbnNpb24iLCJjb2RlR2VuVGFyZ2V0IiwidGFyZ2V0IiwiZ2VuZXJhdGVkRmlsZU5hbWUiLCJkb2NzRmlsZVBhdGgiLCJncWxDb25maWciLCJzaG91bGRHZW5lcmF0ZURvY3MiLCJwcm9wZXJ0eU5hbWUiLCJkZWZhdWx0VmFsdWUiLCJhc2tGdW5jdGlvbiIsInJlc3VsdCIsImhhc093blByb3BlcnR5IiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6InN0S0FBQSxNQUFNLEVBQUVBLG9CQUFGLHVEQUEyQkMsUUFBUSwrQkFBUixDQUEzQixDQUFOO0FBQ0EsTUFBTUMsOERBQVlELFFBQVEsY0FBUixDQUFaLENBQU47QUFDQSxNQUFNRSwwRUFBd0JGLFFBQVEsdUNBQVIsQ0FBeEIsQ0FBTjtBQUNBLE1BQU1HLG1FQUFpQkgsUUFBUSxvQkFBUixDQUFqQixDQUFOOztBQUVBLGVBQWVJLGtCQUFmLENBQWtDQyxPQUFsQyxFQUEyQ0MsWUFBM0MsRUFBeUQ7QUFDdkQsTUFBSUMsdUVBQXFCLEtBQXJCLENBQUosQ0FEdUQ7QUFFdkQsTUFBSUYsUUFBUUcsT0FBUixDQUFnQkMsV0FBcEIsRUFBaUM7QUFDL0JWLHlCQUFxQk0sT0FBckI7QUFDQSxVQUFNSSxnRUFBY0osUUFBUUcsT0FBUixDQUFnQkMsV0FBaEIsQ0FBNEJSLFVBQVVTLEtBQXRDLENBQWQsQ0FBTjtBQUNBLFVBQU1DLDREQUFVTixRQUFRRyxPQUFSLENBQWdCQyxXQUFoQixDQUE0QkcsR0FBdEMsQ0FBTixDQUgrQjs7QUFLL0JMLHlCQUFxQixNQUFNTSxlQUFlSixXQUFmLEVBQTRCRSxPQUE1QixFQUFxQyxjQUFyQyxFQUFxRCxJQUFyRCxFQUEyRCxNQUFNLHVHQUF1QixDQUF4RixDQUEzQjtBQUNELEdBTkQsTUFNTztBQUNMSix5QkFBcUIsTUFBTUwsdUJBQTNCO0FBQ0QsR0FWc0Q7O0FBWXZELE1BQUlLLGtCQUFKLEVBQXdCO0FBQ3RCLFVBQU1PLDZEQUFVLE1BQU1YLGVBQWVFLE9BQWYsRUFBd0IsQ0FBQyxvQkFBRCxDQUF4QixDQUFoQixDQUFOO0FBQ0EsVUFBTVUsZ0VBQWE7QUFDakJDLG1CQUFhVixZQURJO0FBRWpCVyxnQkFBVUgsUUFBUUksY0FGRDtBQUdqQkMsZ0JBQVVMLFFBQVFNLGNBSEQ7QUFJakJDLHdCQUFrQjtBQUNoQkMsdUJBQWUsNkRBQVFDLE1BQVIsMERBQWtCLEVBQWxCLENBREM7QUFFaEJDLDJCQUFtQiw2REFBUUEsaUJBQVIsMERBQTZCLEVBQTdCLENBRkg7QUFHaEJDLHNCQUFjWCxRQUFRVyxZQUhOLEVBSkQsRUFBYixDQUFOLENBRnNCOzs7QUFZdEIsV0FBTztBQUNMQyxpQkFBV1gsVUFETjtBQUVMWSwwQkFBb0JiLFFBQVFhLGtCQUZ2QixFQUFQOztBQUlELEdBaEJEO0FBaUJEOztBQUVELGVBQWVkLGNBQWYsQ0FBOEJKLFdBQTlCLEVBQTJDRSxPQUEzQyxFQUFvRGlCLFlBQXBELEVBQWtFQyxZQUFsRSxFQUFnRkMsV0FBaEYsRUFBNkY7QUFDM0YsTUFBSUMsTUFBSixDQUQyRjtBQUUzRixNQUFJLDJIQUFldEIsWUFBWXVCLGNBQVosQ0FBMkJKLFlBQTNCLENBQWYsQ0FBSixFQUE2RDtBQUMzREcsYUFBU3RCLFlBQVltQixZQUFaLENBQVQ7QUFDRCxHQUZELE1BRU8sK0VBQUksdUhBQVdDLGlCQUFpQkksU0FBNUIsQ0FBSixFQUEyQztBQUNoREYsaUJBQVNGLFlBQVQ7QUFDRCxPQUZNLE1BRUE7QUFDTEUsaUJBQVMsTUFBTUQsYUFBZjtBQUNELFFBUjBGO0FBUzNGLFNBQU9DLE1BQVA7QUFDRCxDOztBQUVERyxPQUFPQyxPQUFQLEdBQWlCL0Isa0JBQWpCIiwiZmlsZSI6InByZVB1c2hBZGRDYWxsYmFjay5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgbm9ybWFsaXplSW5wdXRQYXJhbXMgfSA9IHJlcXVpcmUoJy4uL3V0aWxzL2lucHV0LXBhcmFtcy1tYW5hZ2VyJyk7XG5jb25zdCBjb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMnKTtcbmNvbnN0IGFza1Nob3VsZEdlbmVyYXRlQ29kZSA9IHJlcXVpcmUoJy4uL3dhbGt0aHJvdWdoL3F1ZXN0aW9ucy9nZW5lcmF0ZUNvZGUnKTtcbmNvbnN0IGFkZFdhbGtUaHJvdWdoID0gcmVxdWlyZSgnLi4vd2Fsa3Rocm91Z2gvYWRkJyk7XG5cbmFzeW5jIGZ1bmN0aW9uIHByZVB1c2hBZGRDYWxsYmFjayhjb250ZXh0LCByZXNvdXJjZU5hbWUpIHtcbiAgbGV0IHNob3VsZEdlbmVyYXRlQ29kZSA9IGZhbHNlO1xuICBpZiAoY29udGV4dC5leGVJbmZvLmlucHV0UGFyYW1zKSB7XG4gICAgbm9ybWFsaXplSW5wdXRQYXJhbXMoY29udGV4dCk7XG4gICAgY29uc3QgaW5wdXRQYXJhbXMgPSBjb250ZXh0LmV4ZUluZm8uaW5wdXRQYXJhbXNbY29uc3RhbnRzLkxhYmVsXTtcbiAgICBjb25zdCB5ZXNGbGFnID0gY29udGV4dC5leGVJbmZvLmlucHV0UGFyYW1zLnllcztcblxuICAgIHNob3VsZEdlbmVyYXRlQ29kZSA9IGF3YWl0IGRldGVybWluZVZhbHVlKGlucHV0UGFyYW1zLCB5ZXNGbGFnLCAnZ2VuZXJhdGVDb2RlJywgdHJ1ZSwgKCkgPT4gYXNrU2hvdWxkR2VuZXJhdGVDb2RlKCkpO1xuICB9IGVsc2Uge1xuICAgIHNob3VsZEdlbmVyYXRlQ29kZSA9IGF3YWl0IGFza1Nob3VsZEdlbmVyYXRlQ29kZSgpO1xuICB9XG5cbiAgaWYgKHNob3VsZEdlbmVyYXRlQ29kZSkge1xuICAgIGNvbnN0IGFuc3dlcnMgPSBhd2FpdCBhZGRXYWxrVGhyb3VnaChjb250ZXh0LCBbJ3Nob3VsZEdlbmVyYXRlQ29kZSddKTtcbiAgICBjb25zdCBuZXdQcm9qZWN0ID0ge1xuICAgICAgcHJvamVjdE5hbWU6IHJlc291cmNlTmFtZSxcbiAgICAgIGluY2x1ZGVzOiBhbnN3ZXJzLmluY2x1ZGVQYXR0ZXJuLFxuICAgICAgZXhjbHVkZXM6IGFuc3dlcnMuZXhjbHVkZVBhdHRlcm4sXG4gICAgICBhbXBsaWZ5RXh0ZW5zaW9uOiB7XG4gICAgICAgIGNvZGVHZW5UYXJnZXQ6IGFuc3dlcnMudGFyZ2V0IHx8ICcnLFxuICAgICAgICBnZW5lcmF0ZWRGaWxlTmFtZTogYW5zd2Vycy5nZW5lcmF0ZWRGaWxlTmFtZSB8fCAnJyxcbiAgICAgICAgZG9jc0ZpbGVQYXRoOiBhbnN3ZXJzLmRvY3NGaWxlUGF0aCxcbiAgICAgIH0sXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgZ3FsQ29uZmlnOiBuZXdQcm9qZWN0LFxuICAgICAgc2hvdWxkR2VuZXJhdGVEb2NzOiBhbnN3ZXJzLnNob3VsZEdlbmVyYXRlRG9jcyxcbiAgICB9O1xuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGRldGVybWluZVZhbHVlKGlucHV0UGFyYW1zLCB5ZXNGbGFnLCBwcm9wZXJ0eU5hbWUsIGRlZmF1bHRWYWx1ZSwgYXNrRnVuY3Rpb24pIHtcbiAgbGV0IHJlc3VsdDtcbiAgaWYgKGlucHV0UGFyYW1zICYmIGlucHV0UGFyYW1zLmhhc093blByb3BlcnR5KHByb3BlcnR5TmFtZSkpIHtcbiAgICByZXN1bHQgPSBpbnB1dFBhcmFtc1twcm9wZXJ0eU5hbWVdO1xuICB9IGVsc2UgaWYgKHllc0ZsYWcgJiYgZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXN1bHQgPSBkZWZhdWx0VmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgcmVzdWx0ID0gYXdhaXQgYXNrRnVuY3Rpb24oKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHByZVB1c2hBZGRDYWxsYmFjaztcbiJdfQ==