{"version":3,"sources":["string-maps.js"],"names":["messages","authExists","dependenciesExists","learnMoreOption","name","value","defaultPrompMap","booleanOptions","mfaOptions","mfaMethods","emailRegistration","authSelectionMap","coreAttributes","appClientReadAttributes","authProviders","answerHashKey","disableOptionsOnEdit","find","i","disabled","getAllMaps","edit","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,6DAAW;AACfC,cAAY,iFADG;AAEfC,sBAAoB;AAFL,CAAX,CAAN;;AAKA,MAAMC,oEAAkB,CAAC;AACvBC,QAAM,uBADiB;AAEvBC,SAAO;AAFgB,CAAD,CAAlB,CAAN;;AAKA,MAAMC,oEAAkB,CACtB;AACEF,QAAM,qCADR;AAEEC,SAAO;AAFT,CADsB,EAKtB;AACED,QAAM,yCADR;AAEEC,SAAO;AAFT,CALsB,EAStB,GAAGF,eATmB,CAAlB,CAAN;;AAYA,MAAMI,mEAAiB,CACrB;AACEH,QAAM,KADR;AAEEC,SAAO;AAFT,CADqB,EAKrB;AACED,QAAM,IADR;AAEEC,SAAO;AAFT,CALqB,EASrB,GAAGF,eATkB,CAAjB,CAAN;;AAYA,MAAMK,+DAAa,CACjB;AACEJ,QAAM,KADR;AAEEC,SAAO;AAFT,CADiB,EAKjB;AACED,QAAM,wDADR;AAEEC,SAAO;AAFT,CALiB,EASjB;AACED,QAAM,yCADR;AAEEC,SAAO;AAFT,CATiB,EAajB,GAAGF,eAbc,CAAb,CAAN;;AAgBA,MAAMM,+DAAa,CACjB;AACEL,QAAM,kBADR;AAEEC,SAAO;AAFT,CADiB,EAKjB;AACED,QAAM,qCADR;AAEEC,SAAO;AAFT,CALiB,CAAb,CAAN;;AAWA,MAAMK,sEAAoB,CACxB;AACEN,QAAM,yDADR;AAEEC,SAAO,CAAC,OAAD;AAFT,CADwB,EAKxB;AACED,QAAM,4CADR;AAEEC,SAAO,CAAC,cAAD;AAFT,CALwB,CAApB,CAAN;;AAWA,MAAMM,qEAAmB,CACvB;AACEP,QAAM,6IADR;AAEEC,SAAO;AAFT,CADuB,EAKvB;AACED,QAAM,+DADR;AAEEC,SAAO;AAFT,CALuB;AASvB;AACA;AACA;AACA;AACA,GAAGF,eAboB,CAAnB,CAAN;;AAgBA,MAAMS,mEAAiB,CACrB;AACER,QAAM,SADR;AAEEC,SAAO;AAFT,CADqB,EAIlB;AACDD,QAAM,WADL;AAEDC,SAAO;AAFN,CAJkB,EAOlB;AACDD,QAAM,OADL;AAEDC,SAAO;AAFN,CAPkB,EAUlB;AACDD,QAAM,aADL;AAEDC,SAAO;AAFN,CAVkB,EAalB;AACDD,QAAM,YADL;AAEDC,SAAO;AAFN,CAbkB,EAgBlB;AACDD,QAAM,QADL;AAEDC,SAAO;AAFN,CAhBkB,EAmBlB;AACDD,QAAM,aADL;AAEDC,SAAO;AAFN,CAnBkB,EAuBrB;AACED,QAAM,MADR;AAEEC,SAAO;AAFT,CAvBqB,EA0BlB;AACDD,QAAM,UADL;AAEDC,SAAO;AAFN,CA1BkB,EA6BlB;AACDD,QAAM,cADL;AAEDC,SAAO;AAFN,CA7BkB,EAgClB;AACDD,QAAM,oBADL;AAEDC,SAAO;AAFN,CAhCkB,EAmClB;AACDD,QAAM,SADL;AAEDC,SAAO;AAFN,CAnCkB,EAsClB;AACDD,QAAM,SADL;AAEDC,SAAO;AAFN,CAtCkB,EAyClB;AACDD,QAAM,YADL;AAEDC,SAAO;AAFN,CAzCkB,EA4ClB;AACDD,QAAM,SADL;AAEDC,SAAO;AAFN,CA5CkB,EA+ClB;AACDD,QAAM,WADL;AAEDC,SAAO;AAFN,CA/CkB,CAAjB,CAAN;;AAqDA,MAAMQ,4EAA0B,CAC9B,GAAGD,cAD2B,EAE9B;AACER,QAAM,iBADR;AAEEC,SAAO;AAFT,CAF8B,EAK3B;AACDD,QAAM,wBADL;AAEDC,SAAO;AAFN,CAL2B,CAA1B,CAAN;;AAWA,MAAMS,mEAAgB,CACpB;AACEV,QAAM,UADR;AAEEC,SAAO,oBAFT;AAGEU,iBAAe;AAHjB,CADoB,EAMpB;AACEX,QAAM,QADR;AAEEC,SAAO,qBAFT;AAGEU,iBAAe;AAHjB,CANoB,EAWpB;AACEX,QAAM,QADR;AAEEC,SAAO,gBAFT;AAGEU,iBAAe;AAHjB,CAXoB,CAAhB,CAAN;;;AAkBA,MAAMC,uBAAuB,MAAM;AAAA;AAAA;;AACjCR,aAAWS,IAAX,CAAgBC,KAAK;AAAA;AAAA;AAAA,aAAEb,KAAF,KAAY,IAAZ;AAAgB,GAArC,EAAuCc,QAAvC,GAAkD,IAAlD;AACD,CAFD;;;AAIA,MAAMC,aAAeC,IAAD,IAAU;AAAA;AAAA;;AAC5B,MAAIA,IAAJ,EAAU;AAAA;AAAA;;AACRL;AACD,GAFD;AAAA;AAAA;AAD4B;AAI5B,SAAO;AACLJ,kBADK;AAELD,oBAFK;AAGLE,2BAHK;AAILC,iBAJK;AAKLN,cALK;AAMLC,cANK;AAOLC,qBAPK;AAQLJ,mBARK;AASLC;AATK,GAAP;AAWD,CAfD;;;AAiBAe,OAAOC,OAAP,GAAiB;AACfX,gBADe;AAEfC,yBAFe;AAGfF,kBAHe;AAIfS,YAJe;AAKfN,eALe;AAMfN,YANe;AAOfC,YAPe;AAQfC,mBARe;AASfJ,iBATe;AAUfC,gBAVe;AAWfP;AAXe,CAAjB","file":"string-maps.js","sourcesContent":["const messages = {\n  authExists: 'Auth has already been added to this project. To update run amplify update auth.',\n  dependenciesExists: '\\nYou have configured resources that might depend on this Cognito resource.  Updating this Cognito resource could have unintended side effects.\\n',\n};\n\nconst learnMoreOption = [{\n  name: 'I want to learn more.',\n  value: 'learnMore',\n}];\n\nconst defaultPrompMap = [\n  {\n    name: 'Yes, use the default configuration.',\n    value: 'default',\n  },\n  {\n    name: 'No, I will set up my own configuration.',\n    value: 'manual',\n  },\n  ...learnMoreOption,\n];\n\nconst booleanOptions = [\n  {\n    name: 'Yes',\n    value: true,\n  },\n  {\n    name: 'No',\n    value: false,\n  },\n  ...learnMoreOption,\n];\n\nconst mfaOptions = [\n  {\n    name: 'OFF',\n    value: 'OFF',\n  },\n  {\n    name: 'ON (Required for all logins, can not be enabled later)',\n    value: 'ON',\n  },\n  {\n    name: 'OPTIONAL (Individual users can use MFA)',\n    value: 'OPTIONAL',\n  },\n  ...learnMoreOption,\n];\n\nconst mfaMethods = [\n  {\n    name: 'SMS Text Message',\n    value: 'SMS Text Message',\n  },\n  {\n    name: 'Time-Based One-Time Password (TOTP)',\n    value: 'TOTP',\n  },\n];\n\nconst emailRegistration = [\n  {\n    name: 'Enabled (Requires per-user email entry at registration)',\n    value: ['email'],\n  },\n  {\n    name: 'Disabled (Uses SMS/TOTP as an alternative)',\n    value: ['phone_number'],\n  },\n];\n\nconst authSelectionMap = [\n  {\n    name: 'User Sign-Up, Sign-In, connected with AWS IAM controls (Enables per-user Storage features for images or other content, Analytics, and more)',\n    value: 'identityPoolAndUserPool',\n  },\n  {\n    name: 'User Sign-Up & Sign-In only (Best used with a cloud API only)',\n    value: 'userPoolOnly',\n  },\n  // {\n  //   name: 'Identity Pool Only',\n  //   value: 'identityPoolOnly',\n  // },\n  ...learnMoreOption,\n];\n\nconst coreAttributes = [\n  {\n    name: 'Address',\n    value: 'address',\n  }, {\n    name: 'Birthdate',\n    value: 'birthdate',\n  }, {\n    name: 'Email',\n    value: 'email',\n  }, {\n    name: 'Family Name',\n    value: 'family_name',\n  }, {\n    name: 'Given Name',\n    value: 'given_name',\n  }, {\n    name: 'Locale',\n    value: 'locale',\n  }, {\n    name: 'Middle Name',\n    value: 'middle_name',\n  },\n  {\n    name: 'Name',\n    value: 'name',\n  }, {\n    name: 'Nickname',\n    value: 'nickname',\n  }, {\n    name: 'Phone Number',\n    value: 'phone_number',\n  }, {\n    name: 'Preferred Username',\n    value: 'preferred_username',\n  }, {\n    name: 'Picture',\n    value: 'picture',\n  }, {\n    name: 'Profile',\n    value: 'profile',\n  }, {\n    name: 'Updated At',\n    value: 'updated_at',\n  }, {\n    name: 'Website',\n    value: 'website',\n  }, {\n    name: 'Zone Info',\n    value: 'zoneinfo',\n  },\n];\n\nconst appClientReadAttributes = [\n  ...coreAttributes,\n  {\n    name: 'Email Verified?',\n    value: 'email_verified',\n  }, {\n    name: 'Phone Number Verified?',\n    value: 'phone_number_verified',\n  },\n];\n\nconst authProviders = [\n  {\n    name: 'Facebook',\n    value: 'graph.facebook.com',\n    answerHashKey: 'facebookAppId',\n  },\n  {\n    name: 'Google',\n    value: 'accounts.google.com',\n    answerHashKey: 'googleClientId',\n  },\n  {\n    name: 'Amazon',\n    value: 'www.amazon.com',\n    answerHashKey: 'amazonAppId',\n  },\n];\n\nconst disableOptionsOnEdit = () => {\n  mfaOptions.find(i => i.value === 'ON').disabled = true;\n};\n\nconst getAllMaps = ((edit) => {\n  if (edit) {\n    disableOptionsOnEdit();\n  }\n  return {\n    coreAttributes,\n    authSelectionMap,\n    appClientReadAttributes,\n    authProviders,\n    mfaOptions,\n    mfaMethods,\n    emailRegistration,\n    defaultPrompMap,\n    booleanOptions,\n  };\n});\n\nmodule.exports = {\n  coreAttributes,\n  appClientReadAttributes,\n  authSelectionMap,\n  getAllMaps,\n  authProviders,\n  mfaOptions,\n  mfaMethods,\n  emailRegistration,\n  defaultPrompMap,\n  booleanOptions,\n  messages,\n};\n"]}