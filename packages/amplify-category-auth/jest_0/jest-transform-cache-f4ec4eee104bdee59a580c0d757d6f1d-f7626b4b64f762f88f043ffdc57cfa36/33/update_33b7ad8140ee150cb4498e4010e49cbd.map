{"version":3,"sources":["update.js"],"names":["fs","require","messages","subcommand","category","options","module","exports","name","alias","run","context","amplify","servicesMetadata","JSON","parse","readFileSync","__dirname","existingAuth","getProjectDetails","amplifyMeta","auth","Object","keys","length","print","warning","info","meta","dependentResources","some","e","includes","dependenciesExists","resourceName","providerPlugin","getPluginInstance","Cognito","provider","updatingAuth","loadResourceParameters","serviceSelectionPrompt","then","result","service","providerName","providerController","error","updateResource","updateamplifyMetaAfterResourceUpdate","success","catch","err","stack"],"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","file":"update.js","sourcesContent":["const fs = require('fs');\nconst { messages } = require('../../provider-utils/awscloudformation/assets/string-maps');\n\n\nconst subcommand = 'update';\nconst category = 'auth';\nlet options;\n\nmodule.exports = {\n  name: subcommand,\n  alias: ['update'],\n  run: async (context) => {\n    const { amplify } = context;\n    const servicesMetadata = JSON.parse(fs.readFileSync(`${__dirname}/../../provider-utils/supported-services.json`));\n    const existingAuth = amplify.getProjectDetails().amplifyMeta.auth || {};\n\n    if (!Object.keys(existingAuth).length > 0) {\n      return context.print.warning('Auth has not yet been added to this project.');\n    }\n\n    context.print.info('Please note that certain attributes may not be overwritten if you choose to use defaults settings.');\n\n    const meta = amplify.getProjectDetails().amplifyMeta;\n    const dependentResources = Object.keys(meta)\n      .some((e) => { //eslint-disable-line\n        return ['analytics', 'api', 'storage', 'function'].includes(e) && Object.keys(meta[e]).length > 0;\n      });\n\n    if (dependentResources) {\n      context.print.info(messages.dependenciesExists);\n    }\n\n    const resourceName = Object.keys(amplify.getProjectDetails().amplifyMeta.auth)[0];\n    const providerPlugin = context.amplify\n      .getPluginInstance(context, servicesMetadata.Cognito.provider);\n    context.updatingAuth = providerPlugin.loadResourceParameters(context, 'auth', resourceName);\n\n    return amplify.serviceSelectionPrompt(context, category, servicesMetadata)\n      .then((result) => {\n        options = {\n          service: result.service,\n          providerPlugin: result.providerName,\n          resourceName,\n        };\n        const providerController = require(`../../provider-utils/${result.providerName}/index`);\n        if (!providerController) {\n          context.print.error('Provider not configured for this category');\n          return;\n        }\n        return providerController.updateResource(context, category, options);\n      })\n      .then((resourceName) => { // eslint-disable-line no-shadow\n        amplify.updateamplifyMetaAfterResourceUpdate(category, resourceName, options);\n        const { print } = context;\n        print.success(`Successfully updated resource ${resourceName} locally`);\n        print.info('');\n        print.success('Some next steps:');\n        print.info('\"amplify push\" will build all your local backend resources and provision it in the cloud');\n        print.info('\"amplify publish\" will build all your local backend and frontend resources (if you have hosting category added) and provision it in the cloud');\n        print.info('');\n      })\n      .catch((err) => {\n        context.print.info(err.stack);\n        context.print.error('There was an error adding the auth resource');\n      });\n  },\n};\n"]}