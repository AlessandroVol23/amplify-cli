3d683466f02e3af9e17f459b8afe2707
/* istanbul ignore next */var cov_1ebx4q8og0 = function () {
  var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-category-auth/provider-utils/awscloudformation/assets/cognito-defaults.js',
      hash = 'd88894e0b6589cbc36da168ae1a72346e9f3351b',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-category-auth/provider-utils/awscloudformation/assets/cognito-defaults.js',
    statementMap: {
      '0': {
        start: {
          line: 1,
          column: 13
        },
        end: {
          line: 1,
          column: 28
        }
      },
      '1': {
        start: {
          line: 2,
          column: 68
        },
        end: {
          line: 2,
          column: 92
        }
      },
      '2': {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 4,
          column: 36
        }
      },
      '3': {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 25,
          column: 1
        }
      },
      '4': {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 31,
          column: 2
        }
      },
      '5': {
        start: {
          line: 27,
          column: 31
        },
        end: {
          line: 31,
          column: 1
        }
      },
      '6': {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 70,
          column: 2
        }
      },
      '7': {
        start: {
          line: 33,
          column: 41
        },
        end: {
          line: 70,
          column: 1
        }
      },
      '8': {
        start: {
          line: 45,
          column: 50
        },
        end: {
          line: 45,
          column: 67
        }
      },
      '9': {
        start: {
          line: 54,
          column: 29
        },
        end: {
          line: 54,
          column: 47
        }
      },
      '10': {
        start: {
          line: 60,
          column: 38
        },
        end: {
          line: 60,
          column: 56
        }
      },
      '11': {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 82,
          column: 2
        }
      },
      '12': {
        start: {
          line: 72,
          column: 45
        },
        end: {
          line: 82,
          column: 1
        }
      },
      '13': {
        start: {
          line: 74,
          column: 59
        },
        end: {
          line: 74,
          column: 76
        }
      },
      '14': {
        start: {
          line: 75,
          column: 43
        },
        end: {
          line: 75,
          column: 60
        }
      },
      '15': {
        start: {
          line: 84,
          column: 36
        },
        end: {
          line: 88,
          column: 2
        }
      },
      '16': {
        start: {
          line: 84,
          column: 52
        },
        end: {
          line: 88,
          column: 1
        }
      },
      '17': {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 94,
          column: 1
        }
      },
      '18': {
        start: {
          line: 96,
          column: 19
        },
        end: {
          line: 99,
          column: 1
        }
      },
      '19': {
        start: {
          line: 101,
          column: 23
        },
        end: {
          line: 112,
          column: 1
        }
      },
      '20': {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 102,
          column: 43
        }
      },
      '21': {
        start: {
          line: 103,
          column: 20
        },
        end: {
          line: 103,
          column: 144
        }
      },
      '22': {
        start: {
          line: 104,
          column: 2
        },
        end: {
          line: 104,
          column: 58
        }
      },
      '23': {
        start: {
          line: 105,
          column: 17
        },
        end: {
          line: 105,
          column: 45
        }
      },
      '24': {
        start: {
          line: 106,
          column: 18
        },
        end: {
          line: 109,
          column: 3
        }
      },
      '25': {
        start: {
          line: 111,
          column: 2
        },
        end: {
          line: 111,
          column: 43
        }
      },
      '26': {
        start: {
          line: 114,
          column: 0
        },
        end: {
          line: 120,
          column: 2
        }
      }
    },
    fnMap: {
      '0': {
        name: '(anonymous_0)',
        decl: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 25
          }
        },
        loc: {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      '1': {
        name: '(anonymous_1)',
        decl: {
          start: {
            line: 33,
            column: 25
          },
          end: {
            line: 33,
            column: 26
          }
        },
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 33
      },
      '2': {
        name: '(anonymous_2)',
        decl: {
          start: {
            line: 45,
            column: 45
          },
          end: {
            line: 45,
            column: 46
          }
        },
        loc: {
          start: {
            line: 45,
            column: 50
          },
          end: {
            line: 45,
            column: 67
          }
        },
        line: 45
      },
      '3': {
        name: '(anonymous_3)',
        decl: {
          start: {
            line: 54,
            column: 24
          },
          end: {
            line: 54,
            column: 25
          }
        },
        loc: {
          start: {
            line: 54,
            column: 29
          },
          end: {
            line: 54,
            column: 47
          }
        },
        line: 54
      },
      '4': {
        name: '(anonymous_4)',
        decl: {
          start: {
            line: 60,
            column: 33
          },
          end: {
            line: 60,
            column: 34
          }
        },
        loc: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 56
          }
        },
        line: 60
      },
      '5': {
        name: '(anonymous_5)',
        decl: {
          start: {
            line: 72,
            column: 29
          },
          end: {
            line: 72,
            column: 30
          }
        },
        loc: {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 72
      },
      '6': {
        name: '(anonymous_6)',
        decl: {
          start: {
            line: 74,
            column: 54
          },
          end: {
            line: 74,
            column: 55
          }
        },
        loc: {
          start: {
            line: 74,
            column: 59
          },
          end: {
            line: 74,
            column: 76
          }
        },
        line: 74
      },
      '7': {
        name: '(anonymous_7)',
        decl: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 75,
            column: 39
          }
        },
        loc: {
          start: {
            line: 75,
            column: 43
          },
          end: {
            line: 75,
            column: 60
          }
        },
        line: 75
      },
      '8': {
        name: '(anonymous_8)',
        decl: {
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 37
          }
        },
        loc: {
          start: {
            line: 84,
            column: 52
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 84
      },
      '9': {
        name: '(anonymous_9)',
        decl: {
          start: {
            line: 101,
            column: 23
          },
          end: {
            line: 101,
            column: 24
          }
        },
        loc: {
          start: {
            line: 101,
            column: 33
          },
          end: {
            line: 112,
            column: 1
          }
        },
        line: 101
      }
    },
    branchMap: {
      '0': {
        loc: {
          start: {
            line: 103,
            column: 20
          },
          end: {
            line: 103,
            column: 144
          }
        },
        type: 'cond-expr',
        locations: [{
          start: {
            line: 103,
            column: 41
          },
          end: {
            line: 103,
            column: 119
          }
        }, {
          start: {
            line: 103,
            column: 122
          },
          end: {
            line: 103,
            column: 144
          }
        }],
        line: 103
      }
    },
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0,
      '10': 0,
      '11': 0,
      '12': 0,
      '13': 0,
      '14': 0,
      '15': 0,
      '16': 0,
      '17': 0,
      '18': 0,
      '19': 0,
      '20': 0,
      '21': 0,
      '22': 0,
      '23': 0,
      '24': 0,
      '25': 0,
      '26': 0
    },
    f: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0,
      '5': 0,
      '6': 0,
      '7': 0,
      '8': 0,
      '9': 0
    },
    b: {
      '0': [0, 0]
    },
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

const uuid = /* istanbul ignore next */(cov_1ebx4q8og0.s[0]++, require('uuid'));
const { coreAttributes, appClientReadAttributes, booleanOptions } = /* istanbul ignore next */(cov_1ebx4q8og0.s[1]++, require('./string-maps'));

const [sharedId] = /* istanbul ignore next */(cov_1ebx4q8og0.s[2]++, uuid().split('-'));

const roles = /* istanbul ignore next */(cov_1ebx4q8og0.s[3]++, {
  authRoleName: {
    Ref: 'AuthRoleName'
  },
  unauthRoleName: {
    Ref: 'UnauthRoleName'
  },
  authRoleArn: {
    'Fn::GetAtt': ['AuthRole', 'Arn']
  },
  unauthRoleArn: {
    'Fn::GetAtt': ['UnauthRole', 'Arn']
  }
});

/* istanbul ignore next */cov_1ebx4q8og0.s[4]++;
const generalDefaults = () => {
  /* istanbul ignore next */cov_1ebx4q8og0.f[0]++;
  cov_1ebx4q8og0.s[5]++;
  return {
    resourceName: `cognito${sharedId}`,
    authSelections: 'identityPoolAndUserPool',
    ...roles
  };
};

/* istanbul ignore next */cov_1ebx4q8og0.s[6]++;
const userPoolDefaults = projectName => {
  /* istanbul ignore next */cov_1ebx4q8og0.f[1]++;
  cov_1ebx4q8og0.s[7]++;
  return {
    userPoolName: `${projectName}_userpool_${sharedId}`,
    autoVerifiedAttributes: ['email'],
    mfaConfiguration: 'OFF',
    mfaTypes: ['SMS Text Message'],
    roleName: `${projectName}_sns-role`,
    roleExternalId: `${projectName}_role_external_id`,
    policyName: `${projectName}-sns-policy`,
    smsAuthenticationMessage: 'Your authentication code is {####}',
    smsVerificationMessage: 'Your verification code is {####}',
    emailVerificationSubject: 'Your verification code',
    emailVerificationMessage: 'Your verification code is {####}',
    defaultPasswordPolicy: booleanOptions.find(b => {
      /* istanbul ignore next */cov_1ebx4q8og0.f[2]++;
      cov_1ebx4q8og0.s[8]++;
      return b.value === false;
    }).value,
    passwordPolicyMinLength: 8,
    passwordPolicyCharacters: ['Requires Lowercase', 'Requires Uppercase', 'Requires Numbers', 'Requires Symbols'],
    requiredAttributes: [coreAttributes.find(b => {
      /* istanbul ignore next */cov_1ebx4q8og0.f[3]++;
      cov_1ebx4q8og0.s[9]++;
      return b.name === 'Email';
    }).value],
    userpoolClientName: `${projectName}_app_client`,
    userpoolClientGenerateSecret: true,
    userpoolClientRefreshTokenValidity: 30,
    userpoolClientReadAttributes: [appClientReadAttributes.find(d => {
      /* istanbul ignore next */cov_1ebx4q8og0.f[4]++;
      cov_1ebx4q8og0.s[10]++;
      return d.name === 'Email';
    }).value],
    mfaLambdaRole: `${projectName}_totp_lambda_role`,
    mfaLambdaLogPolicy: `${projectName}_totp_lambda_log_policy`,
    mfaPassRolePolicy: `${projectName}_totp_pass_role_policy`,
    mfaLambdaIAMPolicy: `${projectName}_totp_lambda_iam_policy`,
    userpoolClientLambdaRole: `${projectName}_userpoolclient_lambda_role`,
    userpoolClientLogPolicy: `${projectName}_userpoolclient_lambda_log_policy`,
    userpoolClientLambdaPolicy: `${projectName}_userpoolclient_lambda_iam_policy`,
    userpoolClientSetAttributes: false
  };
};

/* istanbul ignore next */cov_1ebx4q8og0.s[11]++;
const identityPoolDefaults = projectName => {
  /* istanbul ignore next */cov_1ebx4q8og0.f[5]++;
  cov_1ebx4q8og0.s[12]++;
  return {
    identityPoolName: `${projectName}_identitypool_${sharedId}`,
    allowUnauthenticatedIdentities: booleanOptions.find(b => {
      /* istanbul ignore next */cov_1ebx4q8og0.f[6]++;
      cov_1ebx4q8og0.s[13]++;
      return b.value === false;
    }).value,
    thirdPartyAuth: booleanOptions.find(b => {
      /* istanbul ignore next */cov_1ebx4q8og0.f[7]++;
      cov_1ebx4q8og0.s[14]++;
      return b.value === false;
    }).value,
    lambdaLogPolicy: `${projectName}_lambda_log_policy`,
    openIdLambdaRoleName: `${projectName}_openid_lambda_role`,
    openIdRolePolicy: `${projectName}_openid_pass_role_policy`,
    openIdLambdaIAMPolicy: `${projectName}_openid_lambda_iam_policy`,
    openIdLogPolicy: `${projectName}_openid_lambda_log_policy`

  };
};

/* istanbul ignore next */cov_1ebx4q8og0.s[15]++;
const identityAndUserPoolDefaults = projectName => {
  /* istanbul ignore next */cov_1ebx4q8og0.f[8]++;
  cov_1ebx4q8og0.s[16]++;
  return {
    // replace dashes with underscores for id pool regex constraint
    ...identityPoolDefaults(projectName),
    ...userPoolDefaults(projectName)
  };
};

const functionMap = /* istanbul ignore next */(cov_1ebx4q8og0.s[17]++, {
  userPoolOnly: userPoolDefaults,
  identityPoolAndUserPool: identityAndUserPoolDefaults,
  identityPoolOnly: identityPoolDefaults
});

const entityKeys = /* istanbul ignore next */(cov_1ebx4q8og0.s[18]++, {
  identityPoolKeys: Object.keys(identityPoolDefaults('')),
  userPoolKeys: Object.keys(userPoolDefaults(''))
});

/* istanbul ignore next */cov_1ebx4q8og0.s[19]++;
const getAllDefaults = name => {
  /* istanbul ignore next */cov_1ebx4q8og0.f[9]++;

  const disallowedChars = /* istanbul ignore next */(cov_1ebx4q8og0.s[20]++, /[^A-Za-z0-9_]+/g);
  let projectName = /* istanbul ignore next */(cov_1ebx4q8og0.s[21]++, name.projectConfig ? /* istanbul ignore next */(cov_1ebx4q8og0.b[0][0]++, `${name.projectConfig.projectName.toLowerCase().substring(0, 100)}${sharedId}`) : /* istanbul ignore next */(cov_1ebx4q8og0.b[0][1]++, name.substring(0, 100)));
  /* istanbul ignore next */cov_1ebx4q8og0.s[22]++;
  projectName = projectName.replace(disallowedChars, '_');
  const target = /* istanbul ignore next */(cov_1ebx4q8og0.s[23]++, generalDefaults(projectName));
  const sources = /* istanbul ignore next */(cov_1ebx4q8og0.s[24]++, [userPoolDefaults(projectName), identityAndUserPoolDefaults(projectName)]);

  /* istanbul ignore next */cov_1ebx4q8og0.s[25]++;
  return Object.assign(target, ...sources);
};

/* istanbul ignore next */cov_1ebx4q8og0.s[26]++;
module.exports = {
  getAllDefaults,
  functionMap,
  generalDefaults,
  entityKeys,
  roles
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,