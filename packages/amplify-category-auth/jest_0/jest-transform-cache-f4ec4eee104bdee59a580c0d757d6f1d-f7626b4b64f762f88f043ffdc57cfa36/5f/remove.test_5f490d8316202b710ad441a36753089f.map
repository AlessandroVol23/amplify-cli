{"version":3,"sources":["remove.test.js"],"names":["remove","require","messages","describe","mockExecuteProviderUtils","jest","fn","mockGetProjectDetails","warningString","dependenciesExists","mockRemoveResource","mockReturnValue","Promise","resolve","mockProjectPath","mockContext","amplify","executeProviderUtils","getProjectDetails","removeResource","print","info","parameters","first","dependencies","it","expect","run","toBeDefined","forEach","d","beforeEach","amplifyMeta","foo","projectConfig","projectPath","toBeCalledWith","toBeCalled","clearAllMocks","not"],"mappings":"AAAA,MAAMA,SAASC,QAAQ,4BAAR,CAAf;AACA,MAAM,EAAEC,QAAF,KAAeD,QAAQ,2DAAR,CAArB;;AAEAE,SAAS,eAAT,EAA0B,MAAM;AAC9B,QAAMC,2BAA2BC,KAAKC,EAAL,EAAjC;AACA,QAAMC,wBAAwBF,KAAKC,EAAL,EAA9B;AACA,QAAME,gBAAgBN,SAASO,kBAA/B;AACA,QAAMC,qBAAqBL,KAAKC,EAAL,GAAUK,eAAV,CAA0BC,QAAQC,OAAR,CAAgB,EAAhB,CAA1B,CAA3B;AACA,QAAMC,kBAAkB,8CAAxB;AACA,QAAMC,cAAc;AAClBC,aAAS;AACPC,4BAAsBb,wBADf;AAEPc,yBAAmBX,qBAFZ;AAGPY,sBAAgBT;AAHT,KADS;AAMlBU,WAAO;AACLC,YAAMhB,KAAKC,EAAL;AADD,KANW;AASlBgB,gBAAY;AACVC,aAAO;AADG;AATM,GAApB;AAaA,QAAMC,eAAe,CAAC,WAAD,EAAc,KAAd,EAAqB,UAArB,EAAiC,SAAjC,CAArB;;AAEAC,KAAG,gCAAH,EAAqC,MAAM;AACzCC,WAAO1B,OAAO2B,GAAd,EAAmBC,WAAnB;AACD,GAFD;;AAIAzB,WAAS,kCAAT,EAA6C,MAAM;AACjDqB,iBAAaK,OAAb,CAAsBC,CAAD,IAAO;AAC1BC,iBAAW,MAAM;AACf,cAAMC,cAAc,EAApB;AACAA,oBAAYF,CAAZ,IAAiB,EAAjB;AACAE,oBAAYF,CAAZ,EAAeG,GAAf,GAAqB,KAArB;AACA1B,8BAAsBI,eAAtB,CAAsC;AACpCuB,yBAAe;AACbC,yBAAarB;AADA,WADqB;AAIpCkB;AAJoC,SAAtC;AAMD,OAVD;AAWAP,SAAI,wCAAuCK,CAAE,+BAA7C,EAA6E,YAAY;AACvF,cAAM9B,OAAO2B,GAAP,CAAWZ,WAAX,CAAN;AACAW,eAAOX,YAAYK,KAAZ,CAAkBC,IAAzB,EAA+Be,cAA/B,CAA8C5B,aAA9C;AACD,OAHD;AAIAiB,SAAI,iFAAgFK,CAAE,WAAtF,EAAkG,YAAY;AAC5G,cAAM9B,OAAO2B,GAAP,CAAWZ,WAAX,CAAN;AACAW,eAAOX,YAAYC,OAAZ,CAAoBG,cAA3B,EAA2CkB,UAA3C;AACD,OAHD;AAID,KApBD;AAqBD,GAtBD;;AAwBAlC,WAAS,gDAAT,EAA2D,MAAM;AAC/D4B,eAAW,MAAM;AACf1B,WAAKiC,aAAL;AACA/B,4BAAsBI,eAAtB,CAAsC;AACpCuB,uBAAe;AACbC,uBAAarB;AADA,SADqB;AAIpCkB,qBAAa;AAJuB,OAAtC;AAMD,KARD;AASAP,OAAG,2CAAH,EAAgD,YAAY;AAC1D,YAAMzB,OAAO2B,GAAP,CAAWZ,WAAX,CAAN;AACAW,aAAOX,YAAYC,OAAZ,CAAoBG,cAA3B,EAA2CkB,UAA3C;AACD,KAHD;AAIAZ,OAAG,qDAAH,EAA0D,YAAY;AACpE,YAAMzB,OAAO2B,GAAP,CAAWZ,WAAX,CAAN;AACAW,aAAOX,YAAYK,KAAZ,CAAkBC,IAAzB,EAA+BkB,GAA/B,CAAmCH,cAAnC,CAAkD5B,aAAlD;AACD,KAHD;AAID,GAlBD;AAmBD,CApED","file":"remove.test.js","sourcesContent":["const remove = require('../../commands/auth/remove');\nconst { messages } = require('../../provider-utils/awscloudformation/assets/string-maps');\n\ndescribe('auth remove: ', () => {\n  const mockExecuteProviderUtils = jest.fn();\n  const mockGetProjectDetails = jest.fn();\n  const warningString = messages.dependenciesExists;\n  const mockRemoveResource = jest.fn().mockReturnValue(Promise.resolve({}));\n  const mockProjectPath = '/User/someone/Documents/Project/amplify-test';\n  const mockContext = {\n    amplify: {\n      executeProviderUtils: mockExecuteProviderUtils,\n      getProjectDetails: mockGetProjectDetails,\n      removeResource: mockRemoveResource,\n    },\n    print: {\n      info: jest.fn(),\n    },\n    parameters: {\n      first: 'mockFirst',\n    },\n  };\n  const dependencies = ['analytics', 'api', 'function', 'storage'];\n\n  it('remove run method should exist', () => {\n    expect(remove.run).toBeDefined();\n  });\n\n  describe('case: resources may rely on auth', () => {\n    dependencies.forEach((d) => {\n      beforeEach(() => {\n        const amplifyMeta = {};\n        amplifyMeta[d] = {};\n        amplifyMeta[d].foo = 'bar';\n        mockGetProjectDetails.mockReturnValue({\n          projectConfig: {\n            projectPath: mockProjectPath,\n          },\n          amplifyMeta,\n        });\n      });\n      it(`remove method should detect existing ${d} metadata and display warning`, async () => {\n        await remove.run(mockContext);\n        expect(mockContext.print.info).toBeCalledWith(warningString);\n      });\n      it(`remove method should still be called even when warning displayed for existing ${d} resource`, async () => {\n        await remove.run(mockContext);\n        expect(mockContext.amplify.removeResource).toBeCalled();\n      });\n    });\n  });\n\n  describe('case: auth and other resources not yet enabled', () => {\n    beforeEach(() => {\n      jest.clearAllMocks();\n      mockGetProjectDetails.mockReturnValue({\n        projectConfig: {\n          projectPath: mockProjectPath,\n        },\n        amplifyMeta: {},\n      });\n    });\n    it('service selection prompt should be called', async () => {\n      await remove.run(mockContext);\n      expect(mockContext.amplify.removeResource).toBeCalled();\n    });\n    it('should not display a warning for existing resources', async () => {\n      await remove.run(mockContext);\n      expect(mockContext.print.info).not.toBeCalledWith(warningString);\n    });\n  });\n});\n\n"]}