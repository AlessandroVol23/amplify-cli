8f6f81fdf88fe7259086e46ff0d82ab0
'use strict';require('ts-jest').install("/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/__tests__/generator/utils/getType.test.ts", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getType_1 = require(\"../../../src/generator/utils/getType\");\nconst graphql_1 = require(\"graphql\");\ndescribe(\"getType\", () => {\n    const testObj = new graphql_1.GraphQLObjectType({\n        name: \"Address\",\n        fields: {\n            street: { type: graphql_1.GraphQLString },\n            number: { type: graphql_1.GraphQLInt },\n            requiredInt: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },\n            listOfInt: { type: new graphql_1.GraphQLList(graphql_1.GraphQLInt) },\n            listOfNonNullInt: { type: new graphql_1.GraphQLNonNull(new graphql_1.GraphQLList(graphql_1.GraphQLInt)) }\n        }\n    });\n    it(\"should return string type for street\", () => {\n        expect(getType_1.default(testObj.getFields().street.type)).toEqual(graphql_1.GraphQLString);\n    });\n    it(\"should return integer type for number\", () => {\n        expect(getType_1.default(testObj.getFields().number.type)).toEqual(graphql_1.GraphQLInt);\n    });\n    it(\"should return integer type for a Non-Null integer\", () => {\n        expect(getType_1.default(testObj.getFields().requiredInt.type)).toEqual(graphql_1.GraphQLInt);\n    });\n    it(\"should return integer type for list of integer type\", () => {\n        expect(getType_1.default(testObj.getFields().listOfInt.type)).toEqual(graphql_1.GraphQLInt);\n    });\n    it(\"should return integer type for a list of non null integer type\", () => {\n        expect(getType_1.default(testObj.getFields().listOfNonNullInt.type)).toEqual(graphql_1.GraphQLInt);\n    });\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0VHlwZS50ZXN0LmpzIiwic291cmNlUm9vdCI6Ii9jL1VzZXJzL1NhbmRyby9yZXBvL2FtcGxpZnktY2xpL3BhY2thZ2VzL2FtcGxpZnktZ3JhcGhxbC1kb2NzLWdlbmVyYXRvci9zcmMvIiwic291cmNlcyI6WyJnZXRUeXBlLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxrRUFBNEQ7QUFDNUQscUNBUWlCO0FBQ2pCLFFBQVEsQ0FBQyxTQUFTLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLE1BQU0sT0FBTyxHQUFHLElBQUksMkJBQWlCLENBQUM7UUFDcEMsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUU7WUFDTixNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsdUJBQWEsRUFBRTtZQUMvQixNQUFNLEVBQUUsRUFBRSxJQUFJLEVBQUUsb0JBQVUsRUFBRTtZQUM1QixXQUFXLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSx3QkFBYyxDQUFDLG9CQUFVLENBQUMsRUFBRTtZQUNyRCxTQUFTLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxxQkFBVyxDQUFDLG9CQUFVLENBQUMsRUFBRTtZQUNoRCxnQkFBZ0IsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLHdCQUFjLENBQUMsSUFBSSxxQkFBVyxDQUFDLG9CQUFVLENBQUMsQ0FBQyxFQUFFO1NBQzVFO0tBQ0YsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHNDQUFzQyxFQUFFLEdBQUcsRUFBRTtRQUM5QyxNQUFNLENBQUMsaUJBQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLHVCQUFhLENBQUMsQ0FBQztJQUMxRSxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyx1Q0FBdUMsRUFBRSxHQUFHLEVBQUU7UUFDL0MsTUFBTSxDQUFDLGlCQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxvQkFBVSxDQUFDLENBQUM7SUFDdkUsQ0FBQyxDQUFDLENBQUM7SUFFSCxFQUFFLENBQUMsbURBQW1ELEVBQUUsR0FBRyxFQUFFO1FBQzNELE1BQU0sQ0FBQyxpQkFBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsb0JBQVUsQ0FBQyxDQUFDO0lBQzVFLENBQUMsQ0FBQyxDQUFDO0lBRUgsRUFBRSxDQUFDLHFEQUFxRCxFQUFFLEdBQUcsRUFBRTtRQUM3RCxNQUFNLENBQUMsaUJBQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsQ0FBQztJQUMxRSxDQUFDLENBQUMsQ0FBQztJQUVILEVBQUUsQ0FBQyxnRUFBZ0UsRUFBRSxHQUFHLEVBQUU7UUFDeEUsTUFBTSxDQUFDLGlCQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLG9CQUFVLENBQUMsQ0FBQztJQUNqRixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICBnZXRUeXBlIGZyb20gXCIuLi8uLi8uLi9zcmMvZ2VuZXJhdG9yL3V0aWxzL2dldFR5cGVcIjtcbmltcG9ydCB7XG4gIEdyYXBoUUxTY2FsYXJUeXBlLFxuICBLaW5kLFxuICBHcmFwaFFMSW50LFxuICBHcmFwaFFMT2JqZWN0VHlwZSxcbiAgR3JhcGhRTFN0cmluZyxcbiAgR3JhcGhRTE5vbk51bGwsXG4gIEdyYXBoUUxMaXN0XG59IGZyb20gXCJncmFwaHFsXCI7XG5kZXNjcmliZShcImdldFR5cGVcIiwgKCkgPT4ge1xuICBjb25zdCB0ZXN0T2JqID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICBuYW1lOiBcIkFkZHJlc3NcIixcbiAgICBmaWVsZHM6IHtcbiAgICAgIHN0cmVldDogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXG4gICAgICBudW1iZXI6IHsgdHlwZTogR3JhcGhRTEludCB9LFxuICAgICAgcmVxdWlyZWRJbnQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpIH0sXG4gICAgICBsaXN0T2ZJbnQ6IHsgdHlwZTogbmV3IEdyYXBoUUxMaXN0KEdyYXBoUUxJbnQpIH0sXG4gICAgICBsaXN0T2ZOb25OdWxsSW50OiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChuZXcgR3JhcGhRTExpc3QoR3JhcGhRTEludCkpIH1cbiAgICB9XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIHJldHVybiBzdHJpbmcgdHlwZSBmb3Igc3RyZWV0XCIsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0VHlwZSh0ZXN0T2JqLmdldEZpZWxkcygpLnN0cmVldC50eXBlKSkudG9FcXVhbChHcmFwaFFMU3RyaW5nKTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgcmV0dXJuIGludGVnZXIgdHlwZSBmb3IgbnVtYmVyXCIsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0VHlwZSh0ZXN0T2JqLmdldEZpZWxkcygpLm51bWJlci50eXBlKSkudG9FcXVhbChHcmFwaFFMSW50KTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgcmV0dXJuIGludGVnZXIgdHlwZSBmb3IgYSBOb24tTnVsbCBpbnRlZ2VyXCIsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0VHlwZSh0ZXN0T2JqLmdldEZpZWxkcygpLnJlcXVpcmVkSW50LnR5cGUpKS50b0VxdWFsKEdyYXBoUUxJbnQpO1xuICB9KTtcblxuICBpdChcInNob3VsZCByZXR1cm4gaW50ZWdlciB0eXBlIGZvciBsaXN0IG9mIGludGVnZXIgdHlwZVwiLCAoKSA9PiB7XG4gICAgZXhwZWN0KGdldFR5cGUodGVzdE9iai5nZXRGaWVsZHMoKS5saXN0T2ZJbnQudHlwZSkpLnRvRXF1YWwoR3JhcGhRTEludCk7XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIHJldHVybiBpbnRlZ2VyIHR5cGUgZm9yIGEgbGlzdCBvZiBub24gbnVsbCBpbnRlZ2VyIHR5cGVcIiwgKCkgPT4ge1xuICAgIGV4cGVjdChnZXRUeXBlKHRlc3RPYmouZ2V0RmllbGRzKCkubGlzdE9mTm9uTnVsbEludC50eXBlKSkudG9FcXVhbChHcmFwaFFMSW50KTtcbiAgfSk7XG59KTtcbiJdfQ==");"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const getType_1 = require("../../../src/generator/utils/getType");
const graphql_1 = require("graphql");
describe("getType", () => {
    const testObj = new graphql_1.GraphQLObjectType({
        name: "Address",
        fields: {
            street: { type: graphql_1.GraphQLString },
            number: { type: graphql_1.GraphQLInt },
            requiredInt: { type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLInt) },
            listOfInt: { type: new graphql_1.GraphQLList(graphql_1.GraphQLInt) },
            listOfNonNullInt: { type: new graphql_1.GraphQLNonNull(new graphql_1.GraphQLList(graphql_1.GraphQLInt)) } } });


    it("should return string type for street", () => {
        expect(getType_1.default(testObj.getFields().street.type)).toEqual(graphql_1.GraphQLString);
    });
    it("should return integer type for number", () => {
        expect(getType_1.default(testObj.getFields().number.type)).toEqual(graphql_1.GraphQLInt);
    });
    it("should return integer type for a Non-Null integer", () => {
        expect(getType_1.default(testObj.getFields().requiredInt.type)).toEqual(graphql_1.GraphQLInt);
    });
    it("should return integer type for list of integer type", () => {
        expect(getType_1.default(testObj.getFields().listOfInt.type)).toEqual(graphql_1.GraphQLInt);
    });
    it("should return integer type for a list of non null integer type", () => {
        expect(getType_1.default(testObj.getFields().listOfNonNullInt.type)).toEqual(graphql_1.GraphQLInt);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdldFR5cGUudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQUEsWUFBQSxRQUFBLHNDQUFBLENBQUE7QUFDQSxNQUFBLFlBQUEsUUFBQSxTQUFBLENBQUE7QUFTQSxTQUFTLFNBQVQsRUFBb0IsTUFBSztBQUN2QixVQUFNLFVBQVUsSUFBSSxVQUFBLGlCQUFKLENBQXNCO0FBQ3BDLGNBQU0sU0FEOEI7QUFFcEMsZ0JBQVE7QUFDTixvQkFBUSxFQUFFLE1BQU0sVUFBQSxhQUFSLEVBREY7QUFFTixvQkFBUSxFQUFFLE1BQU0sVUFBQSxVQUFSLEVBRkY7QUFHTix5QkFBYSxFQUFFLE1BQU0sSUFBSSxVQUFBLGNBQUosQ0FBbUIsVUFBQSxVQUFuQixDQUFSLEVBSFA7QUFJTix1QkFBVyxFQUFFLE1BQU0sSUFBSSxVQUFBLFdBQUosQ0FBZ0IsVUFBQSxVQUFoQixDQUFSLEVBSkw7QUFLTiw4QkFBa0IsRUFBRSxNQUFNLElBQUksVUFBQSxjQUFKLENBQW1CLElBQUksVUFBQSxXQUFKLENBQWdCLFVBQUEsVUFBaEIsQ0FBbkIsQ0FBUixFQUxaLEVBRjRCLEVBQXRCLENBQWhCOzs7QUFXQSxPQUFHLHNDQUFILEVBQTJDLE1BQUs7QUFDOUMsZUFBTyxVQUFBLE9BQUEsQ0FBUSxRQUFRLFNBQVIsR0FBb0IsTUFBcEIsQ0FBMkIsSUFBbkMsQ0FBUCxFQUFpRCxPQUFqRCxDQUF5RCxVQUFBLGFBQXpEO0FBQ0QsS0FGRDtBQUlBLE9BQUcsdUNBQUgsRUFBNEMsTUFBSztBQUMvQyxlQUFPLFVBQUEsT0FBQSxDQUFRLFFBQVEsU0FBUixHQUFvQixNQUFwQixDQUEyQixJQUFuQyxDQUFQLEVBQWlELE9BQWpELENBQXlELFVBQUEsVUFBekQ7QUFDRCxLQUZEO0FBSUEsT0FBRyxtREFBSCxFQUF3RCxNQUFLO0FBQzNELGVBQU8sVUFBQSxPQUFBLENBQVEsUUFBUSxTQUFSLEdBQW9CLFdBQXBCLENBQWdDLElBQXhDLENBQVAsRUFBc0QsT0FBdEQsQ0FBOEQsVUFBQSxVQUE5RDtBQUNELEtBRkQ7QUFJQSxPQUFHLHFEQUFILEVBQTBELE1BQUs7QUFDN0QsZUFBTyxVQUFBLE9BQUEsQ0FBUSxRQUFRLFNBQVIsR0FBb0IsU0FBcEIsQ0FBOEIsSUFBdEMsQ0FBUCxFQUFvRCxPQUFwRCxDQUE0RCxVQUFBLFVBQTVEO0FBQ0QsS0FGRDtBQUlBLE9BQUcsZ0VBQUgsRUFBcUUsTUFBSztBQUN4RSxlQUFPLFVBQUEsT0FBQSxDQUFRLFFBQVEsU0FBUixHQUFvQixnQkFBcEIsQ0FBcUMsSUFBN0MsQ0FBUCxFQUEyRCxPQUEzRCxDQUFtRSxVQUFBLFVBQW5FO0FBQ0QsS0FGRDtBQUdELENBL0JEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICBnZXRUeXBlIGZyb20gXCIuLi8uLi8uLi9zcmMvZ2VuZXJhdG9yL3V0aWxzL2dldFR5cGVcIjtcbmltcG9ydCB7XG4gIEdyYXBoUUxTY2FsYXJUeXBlLFxuICBLaW5kLFxuICBHcmFwaFFMSW50LFxuICBHcmFwaFFMT2JqZWN0VHlwZSxcbiAgR3JhcGhRTFN0cmluZyxcbiAgR3JhcGhRTE5vbk51bGwsXG4gIEdyYXBoUUxMaXN0XG59IGZyb20gXCJncmFwaHFsXCI7XG5kZXNjcmliZShcImdldFR5cGVcIiwgKCkgPT4ge1xuICBjb25zdCB0ZXN0T2JqID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICBuYW1lOiBcIkFkZHJlc3NcIixcbiAgICBmaWVsZHM6IHtcbiAgICAgIHN0cmVldDogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXG4gICAgICBudW1iZXI6IHsgdHlwZTogR3JhcGhRTEludCB9LFxuICAgICAgcmVxdWlyZWRJbnQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxJbnQpIH0sXG4gICAgICBsaXN0T2ZJbnQ6IHsgdHlwZTogbmV3IEdyYXBoUUxMaXN0KEdyYXBoUUxJbnQpIH0sXG4gICAgICBsaXN0T2ZOb25OdWxsSW50OiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChuZXcgR3JhcGhRTExpc3QoR3JhcGhRTEludCkpIH1cbiAgICB9XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIHJldHVybiBzdHJpbmcgdHlwZSBmb3Igc3RyZWV0XCIsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0VHlwZSh0ZXN0T2JqLmdldEZpZWxkcygpLnN0cmVldC50eXBlKSkudG9FcXVhbChHcmFwaFFMU3RyaW5nKTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgcmV0dXJuIGludGVnZXIgdHlwZSBmb3IgbnVtYmVyXCIsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0VHlwZSh0ZXN0T2JqLmdldEZpZWxkcygpLm51bWJlci50eXBlKSkudG9FcXVhbChHcmFwaFFMSW50KTtcbiAgfSk7XG5cbiAgaXQoXCJzaG91bGQgcmV0dXJuIGludGVnZXIgdHlwZSBmb3IgYSBOb24tTnVsbCBpbnRlZ2VyXCIsICgpID0+IHtcbiAgICBleHBlY3QoZ2V0VHlwZSh0ZXN0T2JqLmdldEZpZWxkcygpLnJlcXVpcmVkSW50LnR5cGUpKS50b0VxdWFsKEdyYXBoUUxJbnQpO1xuICB9KTtcblxuICBpdChcInNob3VsZCByZXR1cm4gaW50ZWdlciB0eXBlIGZvciBsaXN0IG9mIGludGVnZXIgdHlwZVwiLCAoKSA9PiB7XG4gICAgZXhwZWN0KGdldFR5cGUodGVzdE9iai5nZXRGaWVsZHMoKS5saXN0T2ZJbnQudHlwZSkpLnRvRXF1YWwoR3JhcGhRTEludCk7XG4gIH0pO1xuXG4gIGl0KFwic2hvdWxkIHJldHVybiBpbnRlZ2VyIHR5cGUgZm9yIGEgbGlzdCBvZiBub24gbnVsbCBpbnRlZ2VyIHR5cGVcIiwgKCkgPT4ge1xuICAgIGV4cGVjdChnZXRUeXBlKHRlc3RPYmouZ2V0RmllbGRzKCkubGlzdE9mTm9uTnVsbEludC50eXBlKSkudG9FcXVhbChHcmFwaFFMSW50KTtcbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiL2MvVXNlcnMvU2FuZHJvL3JlcG8vYW1wbGlmeS1jbGkvcGFja2FnZXMvYW1wbGlmeS1ncmFwaHFsLWRvY3MtZ2VuZXJhdG9yL3NyYy8ifQ==