fc78eb5cca1c7fd7fc3855d4024fad68
'use strict';
require('ts-jest').install("/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/generator/getArgs.ts", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getType_1 = require(\"./utils/getType\");\nconst isList_1 = require(\"./utils/isList\");\nconst isRequired_1 = require(\"./utils/isRequired\");\nconst isRequiredList_1 = require(\"./utils/isRequiredList\");\nfunction getArgs(args) {\n    const argMaps = args.map((arg) => {\n        return {\n            name: arg.name,\n            type: getType_1.default(arg.type).name,\n            isRequired: isRequired_1.default(arg.type),\n            isList: isList_1.default(arg.type),\n            isListRequired: isRequiredList_1.default(arg.type),\n            defaultValue: arg.defaultValue,\n        };\n    });\n    return argMaps;\n}\nexports.default = getArgs;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0QXJncy5qcyIsInNvdXJjZVJvb3QiOiIvYy9Vc2Vycy9TYW5kcm8vcmVwby9hbXBsaWZ5LWNsaS9wYWNrYWdlcy9hbXBsaWZ5LWdyYXBocWwtZG9jcy1nZW5lcmF0b3Ivc3JjLyIsInNvdXJjZXMiOlsiZ2V0QXJncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUVBLDZDQUFxQztBQUNyQywyQ0FBb0M7QUFDcEMsbURBQTJDO0FBQzNDLDJEQUFvRDtBQUlwRCxpQkFBZ0MsSUFBdUI7SUFDckQsTUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQW9CLEVBQUUsRUFBRTtRQUNoRCxPQUFPO1lBQ0wsSUFBSSxFQUFFLEdBQUcsQ0FBQyxJQUFJO1lBQ2QsSUFBSSxFQUFFLGlCQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUk7WUFDNUIsVUFBVSxFQUFFLG9CQUFVLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztZQUNoQyxNQUFNLEVBQUUsZ0JBQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ3hCLGNBQWMsRUFBRSx3QkFBYyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDeEMsWUFBWSxFQUFFLEdBQUcsQ0FBQyxZQUFZO1NBQy9CLENBQUE7SUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNGLE9BQU8sT0FBTyxDQUFBO0FBQ2hCLENBQUM7QUFaRCwwQkFZQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxBcmd1bWVudCB9IGZyb20gJ2dyYXBocWwnXG5cbmltcG9ydCBnZXRUeXBlIGZyb20gJy4vdXRpbHMvZ2V0VHlwZSdcbmltcG9ydCBpc0xpc3QgZnJvbSAnLi91dGlscy9pc0xpc3QnO1xuaW1wb3J0IGlzUmVxdWlyZWQgZnJvbSAnLi91dGlscy9pc1JlcXVpcmVkJ1xuaW1wb3J0IGlzUmVxdWlyZWRMaXN0IGZyb20gJy4vdXRpbHMvaXNSZXF1aXJlZExpc3QnO1xuXG5pbXBvcnQgeyBHUUxUZW1wbGF0ZUFyZ0RlY2xhcmF0aW9uIH0gZnJvbSAnLi90eXBlcydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0QXJncyhhcmdzOiBHcmFwaFFMQXJndW1lbnRbXSk6IEFycmF5PEdRTFRlbXBsYXRlQXJnRGVjbGFyYXRpb24+IHtcbiAgY29uc3QgYXJnTWFwcyA9IGFyZ3MubWFwKChhcmc6IEdyYXBoUUxBcmd1bWVudCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBhcmcubmFtZSxcbiAgICAgIHR5cGU6IGdldFR5cGUoYXJnLnR5cGUpLm5hbWUsXG4gICAgICBpc1JlcXVpcmVkOiBpc1JlcXVpcmVkKGFyZy50eXBlKSxcbiAgICAgIGlzTGlzdDogaXNMaXN0KGFyZy50eXBlKSxcbiAgICAgIGlzTGlzdFJlcXVpcmVkOiBpc1JlcXVpcmVkTGlzdChhcmcudHlwZSksXG4gICAgICBkZWZhdWx0VmFsdWU6IGFyZy5kZWZhdWx0VmFsdWUsXG4gICAgfVxuICB9KVxuICByZXR1cm4gYXJnTWFwc1xufVxuIl19");"use strict"; /* istanbul ignore next */var cov_1morl0b1pl = function () {
    var path = "/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/generator/getArgs.ts",
        hash = "6428931e4e18de2a197a143bd70d17e6f61c918a",
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = "__coverage__",
        coverageData = { path: "/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/generator/getArgs.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 18 }, end: { line: 3, column: 44 } }, "2": { start: { line: 4, column: 17 }, end: { line: 4, column: 42 } }, "3": { start: { line: 5, column: 21 }, end: { line: 5, column: 50 } }, "4": { start: { line: 6, column: 25 }, end: { line: 6, column: 58 } }, "5": { start: { line: 8, column: 20 }, end: { line: 17, column: 6 } }, "6": { start: { line: 9, column: 8 }, end: { line: 16, column: 10 } }, "7": { start: { line: 18, column: 4 }, end: { line: 18, column: 19 } }, "8": { start: { line: 20, column: 0 }, end: { line: 20, column: 26 } } }, fnMap: { "0": { name: "getArgs", decl: { start: { line: 7, column: 9 }, end: { line: 7, column: 16 } }, loc: { start: { line: 7, column: 23 }, end: { line: 19, column: 1 } }, line: 7 }, "1": { name: "(anonymous_1)", decl: { start: { line: 8, column: 29 }, end: { line: 8, column: 30 } }, loc: { start: { line: 8, column: 38 }, end: { line: 17, column: 5 } }, line: 8 } }, branchMap: {}, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0 }, f: { "0": 0, "1": 0 }, b: {}, inputSourceMap: { version: 3, file: "getArgs.js", sourceRoot: "/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/", sources: ["getArgs.ts"], names: [], mappings: ";;AAEA,6CAAqC;AACrC,2CAAoC;AACpC,mDAA2C;AAC3C,2DAAoD;AAIpD,iBAAgC,IAAuB;IACrD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAoB,EAAE,EAAE;QAChD,OAAO;YACL,IAAI,EAAE,GAAG,CAAC,IAAI;YACd,IAAI,EAAE,iBAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI;YAC5B,UAAU,EAAE,oBAAU,CAAC,GAAG,CAAC,IAAI,CAAC;YAChC,MAAM,EAAE,gBAAM,CAAC,GAAG,CAAC,IAAI,CAAC;YACxB,cAAc,EAAE,wBAAc,CAAC,GAAG,CAAC,IAAI,CAAC;YACxC,YAAY,EAAE,GAAG,CAAC,YAAY;SAC/B,CAAA;IACH,CAAC,CAAC,CAAA;IACF,OAAO,OAAO,CAAA;AAChB,CAAC;AAZD,0BAYC", sourcesContent: ["import { GraphQLArgument } from 'graphql'\n\nimport getType from './utils/getType'\nimport isList from './utils/isList';\nimport isRequired from './utils/isRequired'\nimport isRequiredList from './utils/isRequiredList';\n\nimport { GQLTemplateArgDeclaration } from './types'\n\nexport default function getArgs(args: GraphQLArgument[]): Array<GQLTemplateArgDeclaration> {\n  const argMaps = args.map((arg: GraphQLArgument) => {\n    return {\n      name: arg.name,\n      type: getType(arg.type).name,\n      isRequired: isRequired(arg.type),\n      isList: isList(arg.type),\n      isListRequired: isRequiredList(arg.type),\n      defaultValue: arg.defaultValue,\n    }\n  })\n  return argMaps\n}\n"] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },
        coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }coverageData.hash = hash;return coverage[path] = coverageData;
}();cov_1morl0b1pl.s[0]++;
Object.defineProperty(exports, "__esModule", { value: true });
const getType_1 = ( /* istanbul ignore next */cov_1morl0b1pl.s[1]++, require("./utils/getType"));
const isList_1 = ( /* istanbul ignore next */cov_1morl0b1pl.s[2]++, require("./utils/isList"));
const isRequired_1 = ( /* istanbul ignore next */cov_1morl0b1pl.s[3]++, require("./utils/isRequired"));
const isRequiredList_1 = ( /* istanbul ignore next */cov_1morl0b1pl.s[4]++, require("./utils/isRequiredList"));
function getArgs(args) {
    /* istanbul ignore next */cov_1morl0b1pl.f[0]++;
    const argMaps = ( /* istanbul ignore next */cov_1morl0b1pl.s[5]++, args.map(arg => {
        /* istanbul ignore next */cov_1morl0b1pl.f[1]++;cov_1morl0b1pl.s[6]++;
        return {
            name: arg.name,
            type: getType_1.default(arg.type).name,
            isRequired: isRequired_1.default(arg.type),
            isList: isList_1.default(arg.type),
            isListRequired: isRequiredList_1.default(arg.type),
            defaultValue: arg.defaultValue };
    })); /* istanbul ignore next */cov_1morl0b1pl.s[7]++;
    return argMaps;
} /* istanbul ignore next */cov_1morl0b1pl.s[8]++;
exports.default = getArgs;