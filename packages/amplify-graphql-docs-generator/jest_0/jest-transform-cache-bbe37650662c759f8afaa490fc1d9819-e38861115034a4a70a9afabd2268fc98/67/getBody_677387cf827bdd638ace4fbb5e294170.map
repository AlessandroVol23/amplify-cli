{"version":3,"sources":["getBody.ts"],"names":[],"mappings":";;AAEA,MAAA,gEAAA,QAAA,aAAA,CAAA,CAAA;AAGA,SAAA,OAAA,CACE,EADF,EAEE,MAFF,EAGE,gEAAmB,CAAnB,CAHF,EAIE,OAJF,EAI4B;AAE1B,UAAM,yDAAwC,GAAG,IAAH,CAAQ,GAAR,CAAa,GAAD,IAAU;AAClE,kBAAM,IAAI,IADwD;AAElE,mBAAO,KAAK,IAAI,IAAI,EAF8C;AAGnE,KAH6C,CAAxC,CAAN;AAIA,UAAM,2DAA2B,YAAA,OAAA,CAAU,EAAV,EAAc,MAAd,EAAsB,QAAtB,EAAgC,OAAhC,CAA3B,CAAN,CAN0B;AAO1B,WAAA,OAAA,MAAA,CAAA,EACE,IADF,EAAA,EAEK,MAFL,CAAA;AAID,C;AAfD,QAAA,OAAA,GAAA,OAAA","sourcesContent":["import { GraphQLField, GraphQLSchema } from 'graphql'\n\nimport getFields from './getFields'\nimport { GQLTemplateOpBody, GQLTemplateArgInvocation, GQLTemplateField, GQLDocsGenOptions } from './types'\n\nexport default function getBody(\n  op: GraphQLField<any, any>,\n  schema: GraphQLSchema,\n  maxDepth: number = 3,\n  options: GQLDocsGenOptions\n): GQLTemplateOpBody {\n  const args: Array<GQLTemplateArgInvocation> = op.args.map((arg) => ({\n    name: arg.name,\n    value: `\\$${arg.name}`,\n  }))\n  const fields: GQLTemplateField = getFields(op, schema, maxDepth, options)\n  return {\n    args,\n    ...fields,\n  }\n}\n"],"sourceRoot":"/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/"}