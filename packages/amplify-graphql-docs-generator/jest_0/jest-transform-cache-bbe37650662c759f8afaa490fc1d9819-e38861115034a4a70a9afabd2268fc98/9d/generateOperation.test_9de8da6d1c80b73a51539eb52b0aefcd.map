{"version":3,"sources":["generateOperation.test.ts"],"names":[],"mappings":";;;;;AAKA,KAAK,IAAL,CAAU,6BAAV;AACA,KAAK,IAAL,CAAU,6BAAV,E,8DANA,MAAA,sBAAA,QAAA,uCAAA,CAAA,CACA,MAAA,YAAA,QAAA,6BAAA,CAAA,CACA,MAAA,YAAA,QAAA,6BAAA,CAAA;AAMA,MAAM,WAAW,CAAjB;AACA,MAAM,iBAAoC,EAAE,gCAAgC,IAAlC,EAA1C;AACA,SAAS,mBAAT,EAA8B,MAAK;AACjC,eAAW,MAAK;AACd,aAAK,aAAL;AACA,kBAAA,OAAA,CAAQ,eAAR,CAAwB,CAAC,UAAD,CAAxB;AACA,kBAAA,OAAA,CAAQ,eAAR,CAAwB,WAAxB;AACD,KAJD;AAMA,OAAG,2BAAH,EAAgC,MAAK;AACnC,cAAM,KAAK;AACT,kBAAM,CAAC,MAAD,CADG,EAAX;;AAGA,cAAM,MAAM,eAAZ;AACA,eAAO,oBAAA,OAAA,CAAkB,EAAlB,EAAsB,eAAtB,EAAuC,QAAvC,EAAiD,cAAjD,CAAP,EAAyE,OAAzE,CAAiF;AAC/E,kBAAM,CAAC,UAAD,CADyE;AAE/E,kBAAM,WAFyE,EAAjF;;AAKA,eAAO,UAAA,OAAP,EAAgB,oBAAhB,CAAqC,GAAG,IAAxC;AACA,eAAO,UAAA,OAAP,EAAgB,cAAhB,CAA+B,EAA/B,EAAmC,GAAnC,EAAwC,QAAxC,EAAkD,cAAlD;AACD,KAZD;AAaD,CApBD","sourcesContent":["import generateOperation from '../../src/generator/generateOperation'\nimport getArgs from '../../src/generator/getArgs'\nimport getBody from '../../src/generator/getBody'\nimport { GQLDocsGenOptions } from '../../src/generator/types';\n\njest.mock('../../src/generator/getArgs')\njest.mock('../../src/generator/getBody')\n\nconst maxDepth = 4\nconst generateOption: GQLDocsGenOptions = { useExternalFragmentForS3Object: true }\ndescribe('generateOperation', () => {\n  beforeEach(() => {\n    jest.resetAllMocks()\n    getArgs.mockReturnValue(['MOCK_ARG'])\n    getBody.mockReturnValue('MOCK_BODY')\n  })\n\n  it('should generate operation', () => {\n    const op = {\n      args: ['arg1'],\n    }\n    const doc = 'MOCK_DOCUMENT'\n    expect(generateOperation(op, 'MOCK_DOCUMENT', maxDepth, generateOption)).toEqual({\n      args: ['MOCK_ARG'],\n      body: 'MOCK_BODY',\n    })\n\n    expect(getArgs).toHaveBeenCalledWith(op.args)\n    expect(getBody).toBeCalledWith(op, doc, maxDepth, generateOption)\n  })\n})\n"],"sourceRoot":"/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/"}