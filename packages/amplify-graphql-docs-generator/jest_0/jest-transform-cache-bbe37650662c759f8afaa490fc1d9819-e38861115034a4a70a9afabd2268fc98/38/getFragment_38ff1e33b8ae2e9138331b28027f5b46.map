{"version":3,"sources":["getFragment.ts"],"names":[],"mappings":";;AAEA,MAAA,+DAAA,QAAA,aAAA,CAAA,CAAA;AAGA,SAAA,WAAA,CACE,OADF,EAEE,MAFF,EAGE,KAHF,EAIE,mEAAwC,EAAxC,CAJF,EAKE,IALF,EAME,+DAAoB,KAApB,CANF,EAOE,OAPF,EAO6B;AAE3B,UAAM,6DAAa,oHAAW,QAAQ,SAAnB,yDAAgC,QAAQ,SAAR,EAAhC,CAAD,wDAAyD,EAAzD,CAAZ,CAAN;AACA,UAAM,oEAAmB,aAAa,GAAb,CAAkB,CAAD,IAAO,8EAAE,IAAF,CAAM,CAA9B,CAAnB,CAAN;AACA,UAAM,0DAAkC,OAAO,IAAP,CAAY,SAAZ;AACrC,OADqC,CAChC,KAAD,IAAW,wFAAA,OAAA,CAAU,UAAU,KAAV,CAAV,EAA4B,MAA5B,EAAoC,QAAQ,CAA5C,EAA+C,OAA/C,EAAuD,CADjC;AAErC,UAFqC,CAE7B,KAAD,IAAW,+LAAS,CAAC,iBAAiB,QAAjB,CAA0B,MAAM,IAAhC,CAAV,GAA+C,CAF5B,CAAlC,CAAN,CAJ2B;AAO3B,QAAI,OAAO,MAAX,EAAmB;AACjB,eAAO;AACL,gBAAI,QAAQ,IADP;AAEL,kBAFK;AAGL,oBAHK;AAIL,kBAAM,iHAAQ,GAAG,QAAQ,IAAI,UAAvB,CAJD,EAAP;;AAMD,KAPD;AAQD,C;AAtBD,QAAA,OAAA,GAAA,WAAA","sourcesContent":["import { GraphQLObjectType, GraphQLSchema } from 'graphql'\n\nimport getFields from './getFields'\nimport { GQLTemplateField, GQLTemplateFragment, GQLDocsGenOptions } from './types'\n\nexport default function getFragment(\n  typeObj: GraphQLObjectType,\n  schema: GraphQLSchema,\n  depth: number,\n  filterFields: Array<GQLTemplateField> = [],\n  name?: string,\n  external: boolean = false,\n  options?: GQLDocsGenOptions\n): GQLTemplateFragment {\n  const subFields = (typeObj && typeObj.getFields && typeObj.getFields()) || []\n  const filterFieldNames = filterFields.map((f) => f.name)\n  const fields: Array<GQLTemplateField> = Object.keys(subFields)\n    .map((field) => getFields(subFields[field], schema, depth - 1, options))\n    .filter((field) => field && !filterFieldNames.includes(field.name))\n  if (fields.length) {\n    return {\n      on: typeObj.name,\n      fields,\n      external,\n      name: name || `${typeObj.name}Fragment`,\n    }\n  }\n}\n"],"sourceRoot":"/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/"}