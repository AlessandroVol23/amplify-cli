8d655294a8305aa9056cd7ac29fd6dde
'use strict';
require('ts-jest').install("/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/generator/getFragment.ts", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getFields_1 = require(\"./getFields\");\nfunction getFragment(typeObj, schema, depth, filterFields = [], name, external = false, options) {\n    const subFields = (typeObj && typeObj.getFields && typeObj.getFields()) || [];\n    const filterFieldNames = filterFields.map((f) => f.name);\n    const fields = Object.keys(subFields)\n        .map((field) => getFields_1.default(subFields[field], schema, depth - 1, options))\n        .filter((field) => field && !filterFieldNames.includes(field.name));\n    if (fields.length) {\n        return {\n            on: typeObj.name,\n            fields,\n            external,\n            name: name || `${typeObj.name}Fragment`,\n        };\n    }\n}\nexports.default = getFragment;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0RnJhZ21lbnQuanMiLCJzb3VyY2VSb290IjoiL2MvVXNlcnMvU2FuZHJvL3JlcG8vYW1wbGlmeS1jbGkvcGFja2FnZXMvYW1wbGlmeS1ncmFwaHFsLWRvY3MtZ2VuZXJhdG9yL3NyYy8iLCJzb3VyY2VzIjpbImdldEZyYWdtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsMkNBQW1DO0FBR25DLHFCQUNFLE9BQTBCLEVBQzFCLE1BQXFCLEVBQ3JCLEtBQWEsRUFDYixlQUF3QyxFQUFFLEVBQzFDLElBQWEsRUFDYixXQUFvQixLQUFLLEVBQ3pCLE9BQTJCO0lBRTNCLE1BQU0sU0FBUyxHQUFHLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxTQUFTLElBQUksT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFBO0lBQzdFLE1BQU0sZ0JBQWdCLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3hELE1BQU0sTUFBTSxHQUE0QixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUMzRCxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLG1CQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ3ZFLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO0lBQ3JFLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRTtRQUNqQixPQUFPO1lBQ0wsRUFBRSxFQUFFLE9BQU8sQ0FBQyxJQUFJO1lBQ2hCLE1BQU07WUFDTixRQUFRO1lBQ1IsSUFBSSxFQUFFLElBQUksSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLFVBQVU7U0FDeEMsQ0FBQTtLQUNGO0FBQ0gsQ0FBQztBQXRCRCw4QkFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTFNjaGVtYSB9IGZyb20gJ2dyYXBocWwnXG5cbmltcG9ydCBnZXRGaWVsZHMgZnJvbSAnLi9nZXRGaWVsZHMnXG5pbXBvcnQgeyBHUUxUZW1wbGF0ZUZpZWxkLCBHUUxUZW1wbGF0ZUZyYWdtZW50LCBHUUxEb2NzR2VuT3B0aW9ucyB9IGZyb20gJy4vdHlwZXMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldEZyYWdtZW50KFxuICB0eXBlT2JqOiBHcmFwaFFMT2JqZWN0VHlwZSxcbiAgc2NoZW1hOiBHcmFwaFFMU2NoZW1hLFxuICBkZXB0aDogbnVtYmVyLFxuICBmaWx0ZXJGaWVsZHM6IEFycmF5PEdRTFRlbXBsYXRlRmllbGQ+ID0gW10sXG4gIG5hbWU/OiBzdHJpbmcsXG4gIGV4dGVybmFsOiBib29sZWFuID0gZmFsc2UsXG4gIG9wdGlvbnM/OiBHUUxEb2NzR2VuT3B0aW9uc1xuKTogR1FMVGVtcGxhdGVGcmFnbWVudCB7XG4gIGNvbnN0IHN1YkZpZWxkcyA9ICh0eXBlT2JqICYmIHR5cGVPYmouZ2V0RmllbGRzICYmIHR5cGVPYmouZ2V0RmllbGRzKCkpIHx8IFtdXG4gIGNvbnN0IGZpbHRlckZpZWxkTmFtZXMgPSBmaWx0ZXJGaWVsZHMubWFwKChmKSA9PiBmLm5hbWUpXG4gIGNvbnN0IGZpZWxkczogQXJyYXk8R1FMVGVtcGxhdGVGaWVsZD4gPSBPYmplY3Qua2V5cyhzdWJGaWVsZHMpXG4gICAgLm1hcCgoZmllbGQpID0+IGdldEZpZWxkcyhzdWJGaWVsZHNbZmllbGRdLCBzY2hlbWEsIGRlcHRoIC0gMSwgb3B0aW9ucykpXG4gICAgLmZpbHRlcigoZmllbGQpID0+IGZpZWxkICYmICFmaWx0ZXJGaWVsZE5hbWVzLmluY2x1ZGVzKGZpZWxkLm5hbWUpKVxuICBpZiAoZmllbGRzLmxlbmd0aCkge1xuICAgIHJldHVybiB7XG4gICAgICBvbjogdHlwZU9iai5uYW1lLFxuICAgICAgZmllbGRzLFxuICAgICAgZXh0ZXJuYWwsXG4gICAgICBuYW1lOiBuYW1lIHx8IGAke3R5cGVPYmoubmFtZX1GcmFnbWVudGAsXG4gICAgfVxuICB9XG59XG4iXX0=");"use strict"; /* istanbul ignore next */var cov_h4az86jr8 = function () {
    var path = "/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/generator/getFragment.ts",
        hash = "5067f7bd3d0d2db1fed2323e02b668b50bb144e3",
        Function = function () {}.constructor,
        global = new Function('return this')(),
        gcv = "__coverage__",
        coverageData = { path: "/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/generator/getFragment.ts", statementMap: { "0": { start: { line: 2, column: 0 }, end: { line: 2, column: 62 } }, "1": { start: { line: 3, column: 20 }, end: { line: 3, column: 42 } }, "2": { start: { line: 5, column: 22 }, end: { line: 5, column: 81 } }, "3": { start: { line: 6, column: 29 }, end: { line: 6, column: 60 } }, "4": { start: { line: 6, column: 53 }, end: { line: 6, column: 59 } }, "5": { start: { line: 7, column: 19 }, end: { line: 9, column: 75 } }, "6": { start: { line: 8, column: 24 }, end: { line: 8, column: 89 } }, "7": { start: { line: 9, column: 27 }, end: { line: 9, column: 74 } }, "8": { start: { line: 10, column: 4 }, end: { line: 17, column: 5 } }, "9": { start: { line: 11, column: 8 }, end: { line: 16, column: 10 } }, "10": { start: { line: 19, column: 0 }, end: { line: 19, column: 30 } } }, fnMap: { "0": { name: "getFragment", decl: { start: { line: 4, column: 9 }, end: { line: 4, column: 20 } }, loc: { start: { line: 4, column: 97 }, end: { line: 18, column: 1 } }, line: 4 }, "1": { name: "(anonymous_1)", decl: { start: { line: 6, column: 46 }, end: { line: 6, column: 47 } }, loc: { start: { line: 6, column: 53 }, end: { line: 6, column: 59 } }, line: 6 }, "2": { name: "(anonymous_2)", decl: { start: { line: 8, column: 13 }, end: { line: 8, column: 14 } }, loc: { start: { line: 8, column: 24 }, end: { line: 8, column: 89 } }, line: 8 }, "3": { name: "(anonymous_3)", decl: { start: { line: 9, column: 16 }, end: { line: 9, column: 17 } }, loc: { start: { line: 9, column: 27 }, end: { line: 9, column: 74 } }, line: 9 } }, branchMap: { "0": { loc: { start: { line: 4, column: 45 }, end: { line: 4, column: 62 } }, type: "default-arg", locations: [{ start: { line: 4, column: 60 }, end: { line: 4, column: 62 } }], line: 4 }, "1": { loc: { start: { line: 4, column: 70 }, end: { line: 4, column: 86 } }, type: "default-arg", locations: [{ start: { line: 4, column: 81 }, end: { line: 4, column: 86 } }], line: 4 }, "2": { loc: { start: { line: 5, column: 22 }, end: { line: 5, column: 81 } }, type: "binary-expr", locations: [{ start: { line: 5, column: 23 }, end: { line: 5, column: 30 } }, { start: { line: 5, column: 34 }, end: { line: 5, column: 51 } }, { start: { line: 5, column: 55 }, end: { line: 5, column: 74 } }, { start: { line: 5, column: 79 }, end: { line: 5, column: 81 } }], line: 5 }, "3": { loc: { start: { line: 9, column: 27 }, end: { line: 9, column: 74 } }, type: "binary-expr", locations: [{ start: { line: 9, column: 27 }, end: { line: 9, column: 32 } }, { start: { line: 9, column: 36 }, end: { line: 9, column: 74 } }], line: 9 }, "4": { loc: { start: { line: 10, column: 4 }, end: { line: 17, column: 5 } }, type: "if", locations: [{ start: { line: 10, column: 4 }, end: { line: 17, column: 5 } }, { start: { line: 10, column: 4 }, end: { line: 17, column: 5 } }], line: 10 }, "5": { loc: { start: { line: 15, column: 18 }, end: { line: 15, column: 51 } }, type: "binary-expr", locations: [{ start: { line: 15, column: 18 }, end: { line: 15, column: 22 } }, { start: { line: 15, column: 26 }, end: { line: 15, column: 51 } }], line: 15 } }, s: { "0": 0, "1": 0, "2": 0, "3": 0, "4": 0, "5": 0, "6": 0, "7": 0, "8": 0, "9": 0, "10": 0 }, f: { "0": 0, "1": 0, "2": 0, "3": 0 }, b: { "0": [0], "1": [0], "2": [0, 0, 0, 0], "3": [0, 0], "4": [0, 0], "5": [0, 0] }, inputSourceMap: { version: 3, file: "getFragment.js", sourceRoot: "/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-docs-generator/src/", sources: ["getFragment.ts"], names: [], mappings: ";;AAEA,2CAAmC;AAGnC,qBACE,OAA0B,EAC1B,MAAqB,EACrB,KAAa,EACb,eAAwC,EAAE,EAC1C,IAAa,EACb,WAAoB,KAAK,EACzB,OAA2B;IAE3B,MAAM,SAAS,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAA;IAC7E,MAAM,gBAAgB,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;IACxD,MAAM,MAAM,GAA4B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;SAC3D,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,mBAAS,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;SACvE,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAA;IACrE,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO;YACL,EAAE,EAAE,OAAO,CAAC,IAAI;YAChB,MAAM;YACN,QAAQ;YACR,IAAI,EAAE,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,UAAU;SACxC,CAAA;KACF;AACH,CAAC;AAtBD,8BAsBC", sourcesContent: ["import { GraphQLObjectType, GraphQLSchema } from 'graphql'\n\nimport getFields from './getFields'\nimport { GQLTemplateField, GQLTemplateFragment, GQLDocsGenOptions } from './types'\n\nexport default function getFragment(\n  typeObj: GraphQLObjectType,\n  schema: GraphQLSchema,\n  depth: number,\n  filterFields: Array<GQLTemplateField> = [],\n  name?: string,\n  external: boolean = false,\n  options?: GQLDocsGenOptions\n): GQLTemplateFragment {\n  const subFields = (typeObj && typeObj.getFields && typeObj.getFields()) || []\n  const filterFieldNames = filterFields.map((f) => f.name)\n  const fields: Array<GQLTemplateField> = Object.keys(subFields)\n    .map((field) => getFields(subFields[field], schema, depth - 1, options))\n    .filter((field) => field && !filterFieldNames.includes(field.name))\n  if (fields.length) {\n    return {\n      on: typeObj.name,\n      fields,\n      external,\n      name: name || `${typeObj.name}Fragment`,\n    }\n  }\n}\n"] }, _coverageSchema: "332fd63041d2c1bcb487cc26dd0d5f7d97098a6c" },
        coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {
        return coverage[path];
    }coverageData.hash = hash;return coverage[path] = coverageData;
}();cov_h4az86jr8.s[0]++;
Object.defineProperty(exports, "__esModule", { value: true });
const getFields_1 = ( /* istanbul ignore next */cov_h4az86jr8.s[1]++, require("./getFields"));
function getFragment(typeObj, schema, depth, filterFields = ( /* istanbul ignore next */cov_h4az86jr8.b[0][0]++, []), name, external = ( /* istanbul ignore next */cov_h4az86jr8.b[1][0]++, false), options) {
    /* istanbul ignore next */cov_h4az86jr8.f[0]++;
    const subFields = ( /* istanbul ignore next */cov_h4az86jr8.s[2]++, /* istanbul ignore next */(cov_h4az86jr8.b[2][0]++, typeObj) && ( /* istanbul ignore next */cov_h4az86jr8.b[2][1]++, typeObj.getFields) && ( /* istanbul ignore next */cov_h4az86jr8.b[2][2]++, typeObj.getFields()) || ( /* istanbul ignore next */cov_h4az86jr8.b[2][3]++, []));
    const filterFieldNames = ( /* istanbul ignore next */cov_h4az86jr8.s[3]++, filterFields.map(f => {
        /* istanbul ignore next */cov_h4az86jr8.f[1]++;cov_h4az86jr8.s[4]++;return f.name;
    }));
    const fields = ( /* istanbul ignore next */cov_h4az86jr8.s[5]++, Object.keys(subFields).map(field => {
        /* istanbul ignore next */cov_h4az86jr8.f[2]++;cov_h4az86jr8.s[6]++;return getFields_1.default(subFields[field], schema, depth - 1, options);
    }).filter(field => {
        /* istanbul ignore next */cov_h4az86jr8.f[3]++;cov_h4az86jr8.s[7]++;return (/* istanbul ignore next */(cov_h4az86jr8.b[3][0]++, field) && ( /* istanbul ignore next */cov_h4az86jr8.b[3][1]++, !filterFieldNames.includes(field.name))
        );
    })); /* istanbul ignore next */cov_h4az86jr8.s[8]++;
    if (fields.length) {
        /* istanbul ignore next */cov_h4az86jr8.b[4][0]++;cov_h4az86jr8.s[9]++;
        return {
            on: typeObj.name,
            fields,
            external,
            name: /* istanbul ignore next */(cov_h4az86jr8.b[5][0]++, name) || ( /* istanbul ignore next */cov_h4az86jr8.b[5][1]++, `${typeObj.name}Fragment`) };
    } else /* istanbul ignore next */{
            cov_h4az86jr8.b[4][1]++;
        }
} /* istanbul ignore next */cov_h4az86jr8.s[10]++;
exports.default = getFragment;