{"version":3,"sources":["apns-key-config.js"],"names":["inquirer","require","p8decoder","validateFilePath","run","channelInput","keyConfig","questions","name","type","message","validate","prompt","TokenKey","P8FilePath","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,4DAAWC,QAAQ,UAAR,CAAX,CAAN;AACA,MAAMC,6DAAYD,QAAQ,aAAR,CAAZ,CAAN;AACA,MAAME,oEAAmBF,QAAQ,oBAAR,CAAnB,CAAN;;AAEA,eAAeG,GAAf,CAAmBC,YAAnB,EAAiC;AAAA;;AAC/B,MAAIC,SAAJ;AAD+B;AAE/B,MAAID,YAAJ,EAAkB;AAAA;AAAA;;AAChBC,gBAAYD,YAAZ;AACD,GAFD,MAEO;AAAA;;AACL,UAAME,6DAAY,CAChB;AACEC,YAAM,UADR;AAEEC,YAAM,OAFR;AAGEC,eAAS;AAHX,KADgB,EAMhB;AACEF,YAAM,QADR;AAEEC,YAAM,OAFR;AAGEC,eAAS;AAHX,KANgB,EAWhB;AACEF,YAAM,YADR;AAEEC,YAAM,OAFR;AAGEC,eAAS;AAHX,KAXgB,EAgBhB;AACEF,YAAM,YADR;AAEEC,YAAM,OAFR;AAGEC,eAAS,2BAHX;AAIEC,gBAAUR;AAJZ,KAhBgB,CAAZ,CAAN;AADK;AAwBLG,gBAAY,MAAMN,SAASY,MAAT,CAAgBL,SAAhB,CAAlB;AACD;;AA7B8B;AA+B/BD,YAAUO,QAAV,GAAqB,MAAMX,UAAUE,GAAV,CAAcE,UAAUQ,UAAxB,CAA3B;AA/B+B;AAgC/B,SAAOR,UAAUQ,UAAjB;;AAhC+B;AAkC/B,SAAOR,SAAP;AACD;;;AAEDS,OAAOC,OAAP,GAAiB;AACfZ;AADe,CAAjB","file":"apns-key-config.js","sourcesContent":["const inquirer = require('inquirer');\nconst p8decoder = require('./p8decoder');\nconst validateFilePath = require('./validateFilepath');\n\nasync function run(channelInput) {\n  let keyConfig;\n  if (channelInput) {\n    keyConfig = channelInput;\n  } else {\n    const questions = [\n      {\n        name: 'BundleId',\n        type: 'input',\n        message: 'The bundle id used for APNs Tokens: ',\n      },\n      {\n        name: 'TeamId',\n        type: 'input',\n        message: 'The team id used for APNs Tokens: ',\n      },\n      {\n        name: 'TokenKeyId',\n        type: 'input',\n        message: 'The key id used for APNs Tokens: ',\n      },\n      {\n        name: 'P8FilePath',\n        type: 'input',\n        message: 'The key file path (.p8): ',\n        validate: validateFilePath,\n      },\n    ];\n    keyConfig = await inquirer.prompt(questions);\n  }\n\n  keyConfig.TokenKey = await p8decoder.run(keyConfig.P8FilePath);\n  delete keyConfig.P8FilePath;\n\n  return keyConfig;\n}\n\nmodule.exports = {\n  run,\n};\n"]}