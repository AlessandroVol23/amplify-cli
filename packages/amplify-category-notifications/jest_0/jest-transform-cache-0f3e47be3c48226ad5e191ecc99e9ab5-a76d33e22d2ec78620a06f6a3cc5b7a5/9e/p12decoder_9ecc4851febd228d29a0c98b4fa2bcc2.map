{"version":3,"sources":["p12decoder.js"],"names":["fs","require","os","path","execSync","run","info","P12FilePath","P12FilePassword","pemFileContent","getPemFileContent","Certificate","getCertificate","PrivateKey","getPrivateKey","getRSAPrivateKey","getEncryptedPrivateKey","errorMessage","Error","infp","pswd","outfp","join","tmpdir","cmd","content","readFileSync","removeSync","certificate","beginMark","beginIndex","indexOf","length","endMark","endIndex","slice","replace","EOL","privateKey","module","exports"],"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","file":"p12decoder.js","sourcesContent":["const fs = require('fs-extra');\nconst os = require('os');\nconst path = require('path');\nconst { execSync } = require('child_process');\n\nfunction run(info) {\n  const { P12FilePath, P12FilePassword } = info;\n  const pemFileContent = getPemFileContent(P12FilePath, P12FilePassword);\n  const Certificate = getCertificate(pemFileContent);\n  let PrivateKey = getPrivateKey(pemFileContent);\n  if (!PrivateKey) {\n    PrivateKey = getRSAPrivateKey(pemFileContent);\n  }\n  if (!PrivateKey) {\n    PrivateKey = getEncryptedPrivateKey(pemFileContent);\n  }\n\n  if (!Certificate) {\n    const errorMessage = 'Openssl can not extract the Certificate from the p12 file';\n    throw new Error(errorMessage);\n  }\n  if (!PrivateKey) {\n    const errorMessage = 'Openssl can not extract the Private Key from the p12 file';\n    throw new Error(errorMessage);\n  }\n\n  return {\n    Certificate,\n    PrivateKey,\n  };\n}\n\nfunction getPemFileContent(infp, pswd) {\n  const outfp = path.join(os.tmpdir(), 'temp.pem');\n  const cmd = `openssl pkcs12 -in ${infp} -out ${outfp} -nodes -passin pass:${pswd}`;\n  execSync(cmd);\n  const content = fs.readFileSync(outfp, 'utf8');\n  fs.removeSync(outfp);\n  return content;\n}\n\nfunction getCertificate(pemFileContent) {\n  let certificate;\n  const beginMark = '-----BEGIN CERTIFICATE-----';\n  const beginIndex = pemFileContent.indexOf(beginMark) + beginMark.length;\n  if (beginIndex > -1) {\n    const endMark = '-----END CERTIFICATE-----';\n    const endIndex = pemFileContent.indexOf(endMark, beginIndex);\n    if (endIndex > -1) {\n      certificate = pemFileContent.slice(beginIndex, endIndex).replace(/\\s/g, '');\n      certificate = beginMark + os.EOL + certificate + os.EOL + endMark;\n    }\n  }\n  return certificate;\n}\n\nfunction getPrivateKey(pemFileContent) {\n  let privateKey;\n  const beginMark = '-----BEGIN PRIVATE KEY-----';\n  const beginIndex = pemFileContent.indexOf(beginMark) + beginMark.length;\n  if (beginIndex > -1) {\n    const endMark = '-----END PRIVATE KEY-----';\n    const endIndex = pemFileContent.indexOf(endMark, beginIndex);\n    if (endIndex > -1) {\n      privateKey = pemFileContent.slice(beginIndex, endIndex).replace(/\\s/g, '');\n      privateKey = beginMark + os.EOL + privateKey + os.EOL + endMark;\n    }\n  }\n  return privateKey;\n}\n\nfunction getRSAPrivateKey(pemFileContent) {\n  let privateKey;\n  const beginMark = '-----BEGIN RSA PRIVATE KEY-----';\n  const beginIndex = pemFileContent.indexOf(beginMark) + beginMark.length;\n  if (beginIndex > -1) {\n    const endMark = '-----END RSA PRIVATE KEY-----';\n    const endIndex = pemFileContent.indexOf(endMark, beginIndex);\n    if (endIndex > -1) {\n      privateKey = pemFileContent.slice(beginIndex, endIndex).replace(/\\s/g, '');\n      privateKey = beginMark + os.EOL + privateKey + os.EOL + endMark;\n    }\n  }\n  return privateKey;\n}\n\nfunction getEncryptedPrivateKey(pemFileContent) {\n  let privateKey;\n  const beginMark = '-----BEGIN ENCRYPTED PRIVATE KEY-----';\n  const beginIndex = pemFileContent.indexOf(beginMark) + beginMark.length;\n  if (beginIndex > -1) {\n    const endMark = '-----END ENCRYPTED PRIVATE KEY-----';\n    const endIndex = pemFileContent.indexOf(endMark, beginIndex);\n    if (endIndex > -1) {\n      privateKey = pemFileContent.slice(beginIndex, endIndex).replace(/\\s/g, '');\n      privateKey = beginMark + os.EOL + privateKey + os.EOL + endMark;\n    }\n  }\n  return privateKey;\n}\n\nmodule.exports = {\n  run,\n};\n"]}