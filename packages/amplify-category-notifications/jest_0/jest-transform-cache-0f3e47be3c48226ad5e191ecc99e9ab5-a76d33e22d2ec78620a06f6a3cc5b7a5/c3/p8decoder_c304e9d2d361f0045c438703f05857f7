415a6dd75491856accd5d01ab8997d9e
/* istanbul ignore next */var cov_2rrmygv2x = function () {
  var path = '/c/Users/Sandro/repo/amplify-cli/packages/amplify-category-notifications/lib/p8decoder.js',
      hash = '568430cb67fcc08a5c14aeb8ca591da246800136',
      Function = function () {}.constructor,
      global = new Function('return this')(),
      gcv = '__coverage__',
      coverageData = {
    path: '/c/Users/Sandro/repo/amplify-cli/packages/amplify-category-notifications/lib/p8decoder.js',
    statementMap: {
      '0': {
        start: {
          line: 1,
          column: 11
        },
        end: {
          line: 1,
          column: 30
        }
      },
      '1': {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 49
        }
      },
      '2': {
        start: {
          line: 5,
          column: 2
        },
        end: {
          line: 5,
          column: 69
        }
      },
      '3': {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 6,
          column: 24
        }
      },
      '4': {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 11,
          column: 2
        }
      }
    },
    fnMap: {
      '0': {
        name: 'run',
        decl: {
          start: {
            line: 3,
            column: 9
          },
          end: {
            line: 3,
            column: 12
          }
        },
        loc: {
          start: {
            line: 3,
            column: 23
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {},
    s: {
      '0': 0,
      '1': 0,
      '2': 0,
      '3': 0,
      '4': 0
    },
    f: {
      '0': 0
    },
    b: {},
    _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'
  },
      coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

const fs = /* istanbul ignore next */(cov_2rrmygv2x.s[0]++, require('fs-extra'));

function run(filaPath) {
  /* istanbul ignore next */cov_2rrmygv2x.f[0]++;

  let content = /* istanbul ignore next */(cov_2rrmygv2x.s[1]++, fs.readFileSync(filaPath, 'utf8'));
  /* istanbul ignore next */cov_2rrmygv2x.s[2]++;
  content = content.replace(/-----.*-----/gi, '').replace(/\s/g, '');
  /* istanbul ignore next */cov_2rrmygv2x.s[3]++;
  return content.trim();
}

/* istanbul ignore next */cov_2rrmygv2x.s[4]++;
module.exports = {
  run
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInA4ZGVjb2Rlci5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJydW4iLCJmaWxhUGF0aCIsImNvbnRlbnQiLCJyZWFkRmlsZVN5bmMiLCJyZXBsYWNlIiwidHJpbSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsTUFBTUEsc0RBQUtDLFFBQVEsVUFBUixDQUFMLENBQU47O0FBRUEsU0FBU0MsR0FBVCxDQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLE1BQUlDLDJEQUFVSixHQUFHSyxZQUFILENBQWdCRixRQUFoQixFQUEwQixNQUExQixDQUFWLENBQUo7QUFEcUI7QUFFckJDLFlBQVVBLFFBQVFFLE9BQVIsQ0FBZ0IsZ0JBQWhCLEVBQWtDLEVBQWxDLEVBQXNDQSxPQUF0QyxDQUE4QyxLQUE5QyxFQUFxRCxFQUFyRCxDQUFWO0FBRnFCO0FBR3JCLFNBQU9GLFFBQVFHLElBQVIsRUFBUDtBQUNEOzs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmUDtBQURlLENBQWpCIiwiZmlsZSI6InA4ZGVjb2Rlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMtZXh0cmEnKTtcblxuZnVuY3Rpb24gcnVuKGZpbGFQYXRoKSB7XG4gIGxldCBjb250ZW50ID0gZnMucmVhZEZpbGVTeW5jKGZpbGFQYXRoLCAndXRmOCcpO1xuICBjb250ZW50ID0gY29udGVudC5yZXBsYWNlKC8tLS0tLS4qLS0tLS0vZ2ksICcnKS5yZXBsYWNlKC9cXHMvZywgJycpO1xuICByZXR1cm4gY29udGVudC50cmltKCk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBydW4sXG59O1xuIl19