{"version":3,"sources":["apns-cert-config.js"],"names":["inquirer","require","p12decoder","validateFilePath","run","channelInput","certificateConfig","questions","name","type","message","validate","answers","prompt","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,6DAAWC,QAAQ,UAAR,CAAX,CAAN;AACA,MAAMC,+DAAaD,QAAQ,cAAR,CAAb,CAAN;AACA,MAAME,qEAAmBF,QAAQ,oBAAR,CAAnB,CAAN;;AAEA,eAAeG,GAAf,CAAmBC,YAAnB,EAAiC;AAAA;;AAC/B,MAAIC,iBAAJ;AAD+B;AAE/B,MAAID,YAAJ,EAAkB;AAAA;AAAA;;AAChBC,wBAAoB,MAAMJ,WAAWE,GAAX,CAAeC,YAAf,CAA1B;AACD,GAFD,MAEO;AAAA;;AACL,UAAME,8DAAY,CAChB;AACEC,YAAM,aADR;AAEEC,YAAM,OAFR;AAGEC,eAAS,oCAHX;AAIEC,gBAAUR;AAJZ,KADgB,EAOhB;AACEK,YAAM,iBADR;AAEEC,YAAM,OAFR;AAGEC,eAAS;AAHX,KAPgB,CAAZ,CAAN;AAaA,UAAME,4DAAU,MAAMZ,SAASa,MAAT,CAAgBN,SAAhB,CAAhB,CAAN;AAdK;AAeLD,wBAAoB,MAAMJ,WAAWE,GAAX,CAAeQ,OAAf,CAA1B;AACD;;AApB8B;AAsB/B,SAAON,iBAAP;AACD;;;AAEDQ,OAAOC,OAAP,GAAiB;AACfX;AADe,CAAjB","file":"apns-cert-config.js","sourcesContent":["const inquirer = require('inquirer');\nconst p12decoder = require('./p12decoder');\nconst validateFilePath = require('./validateFilepath');\n\nasync function run(channelInput) {\n  let certificateConfig;\n  if (channelInput) {\n    certificateConfig = await p12decoder.run(channelInput);\n  } else {\n    const questions = [\n      {\n        name: 'P12FilePath',\n        type: 'input',\n        message: 'The certificate file path (.p12): ',\n        validate: validateFilePath,\n      },\n      {\n        name: 'P12FilePassword',\n        type: 'input',\n        message: 'The certificate password (if any): ',\n      },\n    ];\n    const answers = await inquirer.prompt(questions);\n    certificateConfig = await p12decoder.run(answers);\n  }\n\n  return certificateConfig;\n}\n\nmodule.exports = {\n  run,\n};\n"]}