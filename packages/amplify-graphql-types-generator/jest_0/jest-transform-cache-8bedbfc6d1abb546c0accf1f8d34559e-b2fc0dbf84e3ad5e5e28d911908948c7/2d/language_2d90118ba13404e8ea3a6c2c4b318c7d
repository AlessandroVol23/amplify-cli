e39e43f2cd0c8c47d5ef8ef751f5bc21
'use strict';require('ts-jest').install("/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-types-generator/src/scala/language.js", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction comment(generator, comment) {\n    const split = comment ? comment.split('\\n') : [];\n    if (split.length > 0) {\n        generator.printOnNewline('/**');\n        split.forEach(line => {\n            generator.printOnNewline(` * ${line.trim()}`);\n        });\n        generator.printOnNewline(' */');\n    }\n}\nexports.comment = comment;\nfunction packageDeclaration(generator, pkg) {\n    generator.printNewlineIfNeeded();\n    generator.printOnNewline(`package ${pkg}`);\n    generator.popScope();\n}\nexports.packageDeclaration = packageDeclaration;\nfunction objectDeclaration(generator, { objectName, superclass, properties }, closure) {\n    generator.printNewlineIfNeeded();\n    generator.printOnNewline(`object ${objectName}` + (superclass ? ` extends ${superclass}` : ''));\n    generator.pushScope({ typeName: objectName });\n    generator.withinBlock(closure);\n    generator.popScope();\n}\nexports.objectDeclaration = objectDeclaration;\nfunction caseClassDeclaration(generator, { caseClassName, description, superclass, params }, closure) {\n    generator.printNewlineIfNeeded();\n    comment(generator, description);\n    generator.printOnNewline(`case class ${caseClassName}(${(params || []).map(v => v.name + \": \" + v.type).join(', ')})` + (superclass ? ` extends ${superclass}` : ''));\n    generator.pushScope({ typeName: caseClassName });\n    generator.withinBlock(closure);\n    generator.popScope();\n}\nexports.caseClassDeclaration = caseClassDeclaration;\nfunction propertyDeclaration(generator, { propertyName, typeName, description }, closure) {\n    comment(generator, description);\n    generator.printOnNewline(`val ${propertyName}: ${typeName} =`);\n    generator.withinBlock(closure);\n}\nexports.propertyDeclaration = propertyDeclaration;\nfunction propertyDeclarations(generator, declarations) {\n    declarations.forEach(o => {\n        propertyDeclaration(generator, o);\n    });\n}\nexports.propertyDeclarations = propertyDeclarations;\nconst reservedKeywords = new Set('case', 'catch', 'class', 'def', 'do', 'else', 'extends', 'false', 'final', 'for', 'if', 'match', 'new', 'null', 'throw', 'trait', 'true', 'try', 'until', 'val', 'var', 'while', 'with');\nfunction escapeIdentifierIfNeeded(identifier) {\n    if (reservedKeywords.has(identifier)) {\n        return '`' + identifier + '`';\n    }\n    else {\n        return identifier;\n    }\n}\nexports.escapeIdentifierIfNeeded = escapeIdentifierIfNeeded;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsYW5ndWFnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUtBLGlCQUF3QixTQUFTLEVBQUUsT0FBTztJQUN4QyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNqRCxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1FBQ3BCLFNBQVMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUE7UUFDL0IsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNuQixTQUFTLENBQUMsY0FBYyxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNoRCxDQUFDLENBQUMsQ0FBQztRQUVILFNBQVMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDakM7QUFDSCxDQUFDO0FBVkQsMEJBVUM7QUFFRCw0QkFBbUMsU0FBUyxFQUFFLEdBQUc7SUFDL0MsU0FBUyxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDakMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDM0MsU0FBUyxDQUFDLFFBQVEsRUFBRSxDQUFDO0FBQ3ZCLENBQUM7QUFKRCxnREFJQztBQUVELDJCQUFrQyxTQUFTLEVBQUUsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxFQUFFLE9BQU87SUFDMUYsU0FBUyxDQUFDLG9CQUFvQixFQUFFLENBQUM7SUFDakMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxVQUFVLFVBQVUsRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxZQUFZLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hHLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQztJQUM5QyxTQUFTLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN2QixDQUFDO0FBTkQsOENBTUM7QUFFRCw4QkFBcUMsU0FBUyxFQUFFLEVBQUUsYUFBYSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLEVBQUUsT0FBTztJQUN6RyxTQUFTLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUNqQyxPQUFPLENBQUMsU0FBUyxFQUFFLFdBQVcsQ0FBQyxDQUFDO0lBQ2hDLFNBQVMsQ0FBQyxjQUFjLENBQUMsY0FBYyxhQUFhLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksR0FBRyxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxZQUFZLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3RLLFNBQVMsQ0FBQyxTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFLENBQUMsQ0FBQztJQUNqRCxTQUFTLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQy9CLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN2QixDQUFDO0FBUEQsb0RBT0M7QUFFRCw2QkFBb0MsU0FBUyxFQUFFLEVBQUUsWUFBWSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUMsRUFBRSxPQUFPO0lBQzVGLE9BQU8sQ0FBQyxTQUFTLEVBQUUsV0FBVyxDQUFDLENBQUM7SUFDaEMsU0FBUyxDQUFDLGNBQWMsQ0FBQyxPQUFPLFlBQVksS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFDO0lBQy9ELFNBQVMsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUpELGtEQUlDO0FBRUQsOEJBQXFDLFNBQVMsRUFBRSxZQUFZO0lBQzFELFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFDdkIsbUJBQW1CLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BDLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUpELG9EQUlDO0FBRUQsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLEdBQUcsQ0FDOUIsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQzdDLFNBQVMsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUNqRCxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQ3ZELEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sQ0FDOUIsQ0FBQztBQUVGLGtDQUF5QyxVQUFVO0lBQ2pELElBQUksZ0JBQWdCLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFO1FBQ3BDLE9BQU8sR0FBRyxHQUFHLFVBQVUsR0FBRyxHQUFHLENBQUM7S0FDL0I7U0FBTTtRQUNMLE9BQU8sVUFBVSxDQUFDO0tBQ25CO0FBQ0gsQ0FBQztBQU5ELDREQU1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgam9pbixcbiAgd3JhcCxcbn0gZnJvbSAnLi4vdXRpbGl0aWVzL3ByaW50aW5nJztcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbW1lbnQoZ2VuZXJhdG9yLCBjb21tZW50KSB7XG4gIGNvbnN0IHNwbGl0ID0gY29tbWVudCA/IGNvbW1lbnQuc3BsaXQoJ1xcbicpIDogW107XG4gIGlmIChzcGxpdC5sZW5ndGggPiAwKSB7XG4gICAgZ2VuZXJhdG9yLnByaW50T25OZXdsaW5lKCcvKionKVxuICAgIHNwbGl0LmZvckVhY2gobGluZSA9PiB7XG4gICAgICBnZW5lcmF0b3IucHJpbnRPbk5ld2xpbmUoYCAqICR7bGluZS50cmltKCl9YCk7XG4gICAgfSk7XG5cbiAgICBnZW5lcmF0b3IucHJpbnRPbk5ld2xpbmUoJyAqLycpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYWNrYWdlRGVjbGFyYXRpb24oZ2VuZXJhdG9yLCBwa2cpIHtcbiAgZ2VuZXJhdG9yLnByaW50TmV3bGluZUlmTmVlZGVkKCk7XG4gIGdlbmVyYXRvci5wcmludE9uTmV3bGluZShgcGFja2FnZSAke3BrZ31gKTtcbiAgZ2VuZXJhdG9yLnBvcFNjb3BlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvYmplY3REZWNsYXJhdGlvbihnZW5lcmF0b3IsIHsgb2JqZWN0TmFtZSwgc3VwZXJjbGFzcywgcHJvcGVydGllcyB9LCBjbG9zdXJlKSB7XG4gIGdlbmVyYXRvci5wcmludE5ld2xpbmVJZk5lZWRlZCgpO1xuICBnZW5lcmF0b3IucHJpbnRPbk5ld2xpbmUoYG9iamVjdCAke29iamVjdE5hbWV9YCArIChzdXBlcmNsYXNzID8gYCBleHRlbmRzICR7c3VwZXJjbGFzc31gIDogJycpKTtcbiAgZ2VuZXJhdG9yLnB1c2hTY29wZSh7IHR5cGVOYW1lOiBvYmplY3ROYW1lIH0pO1xuICBnZW5lcmF0b3Iud2l0aGluQmxvY2soY2xvc3VyZSk7XG4gIGdlbmVyYXRvci5wb3BTY29wZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FzZUNsYXNzRGVjbGFyYXRpb24oZ2VuZXJhdG9yLCB7IGNhc2VDbGFzc05hbWUsIGRlc2NyaXB0aW9uLCBzdXBlcmNsYXNzLCBwYXJhbXMgfSwgY2xvc3VyZSkge1xuICBnZW5lcmF0b3IucHJpbnROZXdsaW5lSWZOZWVkZWQoKTtcbiAgY29tbWVudChnZW5lcmF0b3IsIGRlc2NyaXB0aW9uKTtcbiAgZ2VuZXJhdG9yLnByaW50T25OZXdsaW5lKGBjYXNlIGNsYXNzICR7Y2FzZUNsYXNzTmFtZX0oJHsocGFyYW1zIHx8IFtdKS5tYXAodiA9PiB2Lm5hbWUgKyBcIjogXCIgKyB2LnR5cGUpLmpvaW4oJywgJyl9KWAgKyAoc3VwZXJjbGFzcyA/IGAgZXh0ZW5kcyAke3N1cGVyY2xhc3N9YCA6ICcnKSk7XG4gIGdlbmVyYXRvci5wdXNoU2NvcGUoeyB0eXBlTmFtZTogY2FzZUNsYXNzTmFtZSB9KTtcbiAgZ2VuZXJhdG9yLndpdGhpbkJsb2NrKGNsb3N1cmUpO1xuICBnZW5lcmF0b3IucG9wU2NvcGUoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5RGVjbGFyYXRpb24oZ2VuZXJhdG9yLCB7IHByb3BlcnR5TmFtZSwgdHlwZU5hbWUsIGRlc2NyaXB0aW9ufSwgY2xvc3VyZSkge1xuICBjb21tZW50KGdlbmVyYXRvciwgZGVzY3JpcHRpb24pO1xuICBnZW5lcmF0b3IucHJpbnRPbk5ld2xpbmUoYHZhbCAke3Byb3BlcnR5TmFtZX06ICR7dHlwZU5hbWV9ID1gKTtcbiAgZ2VuZXJhdG9yLndpdGhpbkJsb2NrKGNsb3N1cmUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcHJvcGVydHlEZWNsYXJhdGlvbnMoZ2VuZXJhdG9yLCBkZWNsYXJhdGlvbnMpIHtcbiAgZGVjbGFyYXRpb25zLmZvckVhY2gobyA9PiB7XG4gICAgcHJvcGVydHlEZWNsYXJhdGlvbihnZW5lcmF0b3IsIG8pO1xuICB9KTtcbn1cblxuY29uc3QgcmVzZXJ2ZWRLZXl3b3JkcyA9IG5ldyBTZXQoXG4gICdjYXNlJywgJ2NhdGNoJywgJ2NsYXNzJywgJ2RlZicsICdkbycsICdlbHNlJyxcbiAgJ2V4dGVuZHMnLCAnZmFsc2UnLCAnZmluYWwnLCAnZm9yJywgJ2lmJywgJ21hdGNoJyxcbiAgJ25ldycsICdudWxsJywgJ3Rocm93JywgJ3RyYWl0JywgJ3RydWUnLCAndHJ5JywgJ3VudGlsJyxcbiAgJ3ZhbCcsICd2YXInLCAnd2hpbGUnLCAnd2l0aCdcbik7XG5cbmV4cG9ydCBmdW5jdGlvbiBlc2NhcGVJZGVudGlmaWVySWZOZWVkZWQoaWRlbnRpZmllcikge1xuICBpZiAocmVzZXJ2ZWRLZXl3b3Jkcy5oYXMoaWRlbnRpZmllcikpIHtcbiAgICByZXR1cm4gJ2AnICsgaWRlbnRpZmllciArICdgJztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gaWRlbnRpZmllcjtcbiAgfVxufVxuIl19");"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function comment(generator, comment) {
    const split = comment ? comment.split('\n') : [];
    if (split.length > 0) {
        generator.printOnNewline('/**');
        split.forEach(line => {
            generator.printOnNewline(` * ${line.trim()}`);
        });
        generator.printOnNewline(' */');
    }
}
exports.comment = comment;
function packageDeclaration(generator, pkg) {
    generator.printNewlineIfNeeded();
    generator.printOnNewline(`package ${pkg}`);
    generator.popScope();
}
exports.packageDeclaration = packageDeclaration;
function objectDeclaration(generator, { objectName, superclass, properties }, closure) {
    generator.printNewlineIfNeeded();
    generator.printOnNewline(`object ${objectName}` + (superclass ? ` extends ${superclass}` : ''));
    generator.pushScope({ typeName: objectName });
    generator.withinBlock(closure);
    generator.popScope();
}
exports.objectDeclaration = objectDeclaration;
function caseClassDeclaration(generator, { caseClassName, description, superclass, params }, closure) {
    generator.printNewlineIfNeeded();
    comment(generator, description);
    generator.printOnNewline(`case class ${caseClassName}(${(params || []).map(v => v.name + ": " + v.type).join(', ')})` + (superclass ? ` extends ${superclass}` : ''));
    generator.pushScope({ typeName: caseClassName });
    generator.withinBlock(closure);
    generator.popScope();
}
exports.caseClassDeclaration = caseClassDeclaration;
function propertyDeclaration(generator, { propertyName, typeName, description }, closure) {
    comment(generator, description);
    generator.printOnNewline(`val ${propertyName}: ${typeName} =`);
    generator.withinBlock(closure);
}
exports.propertyDeclaration = propertyDeclaration;
function propertyDeclarations(generator, declarations) {
    declarations.forEach(o => {
        propertyDeclaration(generator, o);
    });
}
exports.propertyDeclarations = propertyDeclarations;
const reservedKeywords = new Set('case', 'catch', 'class', 'def', 'do', 'else', 'extends', 'false', 'final', 'for', 'if', 'match', 'new', 'null', 'throw', 'trait', 'true', 'try', 'until', 'val', 'var', 'while', 'with');
function escapeIdentifierIfNeeded(identifier) {
    if (reservedKeywords.has(identifier)) {
        return '`' + identifier + '`';
    } else
    {
        return identifier;
    }
}
exports.escapeIdentifierIfNeeded = escapeIdentifierIfNeeded;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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YixFQUVtQixPQUZuQixFQUd2QixLQUh1QixFQUdoQixNQUhnQixFQUdSLE9BSFEsRUFHQyxPQUhELEVBR1UsTUFIVixFQUdrQixLQUhsQixFQUd5QixPQUh6QixFQUl2QixLQUp1QixFQUloQixLQUpnQixFQUlULE9BSlMsRUFJQSxNQUpBLENBQXpCO0FBT0EsU0FBQSx3QkFBQSxDQUF5QyxVQUF6QyxFQUFtRDtBQUNqRCxRQUFJLGlCQUFpQixHQUFqQixDQUFxQixVQUFyQixDQUFKLEVBQXNDO0FBQ3BDLGVBQU8sTUFBTSxVQUFOLEdBQW1CLEdBQTFCO0FBQ0QsS0FGRDtBQUVPO0FBQ0wsZUFBTyxVQUFQO0FBQ0Q7QUFDRjtBQU5ELFFBQUEsd0JBQUEsR0FBQSx3QkFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGpvaW4sXG4gIHdyYXAsXG59IGZyb20gJy4uL3V0aWxpdGllcy9wcmludGluZyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb21tZW50KGdlbmVyYXRvciwgY29tbWVudCkge1xuICBjb25zdCBzcGxpdCA9IGNvbW1lbnQgPyBjb21tZW50LnNwbGl0KCdcXG4nKSA6IFtdO1xuICBpZiAoc3BsaXQubGVuZ3RoID4gMCkge1xuICAgIGdlbmVyYXRvci5wcmludE9uTmV3bGluZSgnLyoqJylcbiAgICBzcGxpdC5mb3JFYWNoKGxpbmUgPT4ge1xuICAgICAgZ2VuZXJhdG9yLnByaW50T25OZXdsaW5lKGAgKiAke2xpbmUudHJpbSgpfWApO1xuICAgIH0pO1xuXG4gICAgZ2VuZXJhdG9yLnByaW50T25OZXdsaW5lKCcgKi8nKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFja2FnZURlY2xhcmF0aW9uKGdlbmVyYXRvciwgcGtnKSB7XG4gIGdlbmVyYXRvci5wcmludE5ld2xpbmVJZk5lZWRlZCgpO1xuICBnZW5lcmF0b3IucHJpbnRPbk5ld2xpbmUoYHBhY2thZ2UgJHtwa2d9YCk7XG4gIGdlbmVyYXRvci5wb3BTY29wZSgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb2JqZWN0RGVjbGFyYXRpb24oZ2VuZXJhdG9yLCB7IG9iamVjdE5hbWUsIHN1cGVyY2xhc3MsIHByb3BlcnRpZXMgfSwgY2xvc3VyZSkge1xuICBnZW5lcmF0b3IucHJpbnROZXdsaW5lSWZOZWVkZWQoKTtcbiAgZ2VuZXJhdG9yLnByaW50T25OZXdsaW5lKGBvYmplY3QgJHtvYmplY3ROYW1lfWAgKyAoc3VwZXJjbGFzcyA/IGAgZXh0ZW5kcyAke3N1cGVyY2xhc3N9YCA6ICcnKSk7XG4gIGdlbmVyYXRvci5wdXNoU2NvcGUoeyB0eXBlTmFtZTogb2JqZWN0TmFtZSB9KTtcbiAgZ2VuZXJhdG9yLndpdGhpbkJsb2NrKGNsb3N1cmUpO1xuICBnZW5lcmF0b3IucG9wU2NvcGUoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhc2VDbGFzc0RlY2xhcmF0aW9uKGdlbmVyYXRvciwgeyBjYXNlQ2xhc3NOYW1lLCBkZXNjcmlwdGlvbiwgc3VwZXJjbGFzcywgcGFyYW1zIH0sIGNsb3N1cmUpIHtcbiAgZ2VuZXJhdG9yLnByaW50TmV3bGluZUlmTmVlZGVkKCk7XG4gIGNvbW1lbnQoZ2VuZXJhdG9yLCBkZXNjcmlwdGlvbik7XG4gIGdlbmVyYXRvci5wcmludE9uTmV3bGluZShgY2FzZSBjbGFzcyAke2Nhc2VDbGFzc05hbWV9KCR7KHBhcmFtcyB8fCBbXSkubWFwKHYgPT4gdi5uYW1lICsgXCI6IFwiICsgdi50eXBlKS5qb2luKCcsICcpfSlgICsgKHN1cGVyY2xhc3MgPyBgIGV4dGVuZHMgJHtzdXBlcmNsYXNzfWAgOiAnJykpO1xuICBnZW5lcmF0b3IucHVzaFNjb3BlKHsgdHlwZU5hbWU6IGNhc2VDbGFzc05hbWUgfSk7XG4gIGdlbmVyYXRvci53aXRoaW5CbG9jayhjbG9zdXJlKTtcbiAgZ2VuZXJhdG9yLnBvcFNjb3BlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwcm9wZXJ0eURlY2xhcmF0aW9uKGdlbmVyYXRvciwgeyBwcm9wZXJ0eU5hbWUsIHR5cGVOYW1lLCBkZXNjcmlwdGlvbn0sIGNsb3N1cmUpIHtcbiAgY29tbWVudChnZW5lcmF0b3IsIGRlc2NyaXB0aW9uKTtcbiAgZ2VuZXJhdG9yLnByaW50T25OZXdsaW5lKGB2YWwgJHtwcm9wZXJ0eU5hbWV9OiAke3R5cGVOYW1lfSA9YCk7XG4gIGdlbmVyYXRvci53aXRoaW5CbG9jayhjbG9zdXJlKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5RGVjbGFyYXRpb25zKGdlbmVyYXRvciwgZGVjbGFyYXRpb25zKSB7XG4gIGRlY2xhcmF0aW9ucy5mb3JFYWNoKG8gPT4ge1xuICAgIHByb3BlcnR5RGVjbGFyYXRpb24oZ2VuZXJhdG9yLCBvKTtcbiAgfSk7XG59XG5cbmNvbnN0IHJlc2VydmVkS2V5d29yZHMgPSBuZXcgU2V0KFxuICAnY2FzZScsICdjYXRjaCcsICdjbGFzcycsICdkZWYnLCAnZG8nLCAnZWxzZScsXG4gICdleHRlbmRzJywgJ2ZhbHNlJywgJ2ZpbmFsJywgJ2ZvcicsICdpZicsICdtYXRjaCcsXG4gICduZXcnLCAnbnVsbCcsICd0aHJvdycsICd0cmFpdCcsICd0cnVlJywgJ3RyeScsICd1bnRpbCcsXG4gICd2YWwnLCAndmFyJywgJ3doaWxlJywgJ3dpdGgnXG4pO1xuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlSWRlbnRpZmllcklmTmVlZGVkKGlkZW50aWZpZXIpIHtcbiAgaWYgKHJlc2VydmVkS2V5d29yZHMuaGFzKGlkZW50aWZpZXIpKSB7XG4gICAgcmV0dXJuICdgJyArIGlkZW50aWZpZXIgKyAnYCc7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGlkZW50aWZpZXI7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=