6379e0ac859483bac03e3dbeb61fb732
'use strict';require('ts-jest').install("/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-types-generator/src/scala/values.js", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst printing_1 = require(\"../utilities/printing\");\nfunction escapedString(string) {\n    return string.replace(/\"/g, '\\\\\"');\n}\nexports.escapedString = escapedString;\nfunction multilineString(context, string) {\n    const lines = string.split('\\n');\n    lines.forEach((line, index) => {\n        const isLastLine = index != lines.length - 1;\n        context.printOnNewline(`\"${escapedString(line)}\"` + (isLastLine ? ' +' : ''));\n    });\n}\nexports.multilineString = multilineString;\nfunction dictionaryLiteralForFieldArguments(args) {\n    function expressionFromValue(value) {\n        if (value.kind === 'Variable') {\n            return `Variable(\"${value.variableName}\")`;\n        }\n        else if (Array.isArray(value)) {\n            return printing_1.wrap('[', printing_1.join(value.map(expressionFromValue), ', '), ']');\n        }\n        else if (typeof value === 'object') {\n            return printing_1.wrap('[', printing_1.join(Object.entries(value).map(([key, value]) => {\n                return `\"${key}\": ${expressionFromValue(value)}`;\n            }), ', ') || ':', ']');\n        }\n        else {\n            return JSON.stringify(value);\n        }\n    }\n    return printing_1.wrap('[', printing_1.join(args.map(arg => {\n        return `\"${arg.name}\": ${expressionFromValue(arg.value)}`;\n    }), ', ') || ':', ']');\n}\nexports.dictionaryLiteralForFieldArguments = dictionaryLiteralForFieldArguments;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsdWVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidmFsdWVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsb0RBRytCO0FBRS9CLHVCQUE4QixNQUFNO0lBQ2xDLE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDckMsQ0FBQztBQUZELHNDQUVDO0FBRUQseUJBQWdDLE9BQU8sRUFBRSxNQUFNO0lBQzdDLE1BQU0sS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsRUFBRTtRQUM1QixNQUFNLFVBQVUsR0FBRyxLQUFLLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDN0MsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEYsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBTkQsMENBTUM7QUFFRCw0Q0FBbUQsSUFBSTtJQUNyRCw2QkFBNkIsS0FBSztRQUNoQyxJQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssVUFBVSxFQUFFO1lBQzdCLE9BQU8sYUFBYSxLQUFLLENBQUMsWUFBWSxJQUFJLENBQUM7U0FDNUM7YUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDL0IsT0FBTyxlQUFJLENBQUMsR0FBRyxFQUFFLGVBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLEVBQUUsSUFBSSxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUM7U0FDbkU7YUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtZQUNwQyxPQUFPLGVBQUksQ0FBQyxHQUFHLEVBQUUsZUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLEVBQUUsRUFBRTtnQkFDL0QsT0FBTyxJQUFJLEdBQUcsTUFBTSxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ25ELENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxJQUFJLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQztTQUN4QjthQUFNO1lBQ0wsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzlCO0lBQ0gsQ0FBQztJQUVELE9BQU8sZUFBSSxDQUFDLEdBQUcsRUFBRSxlQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUNuQyxPQUFPLElBQUksR0FBRyxDQUFDLElBQUksTUFBTSxtQkFBbUIsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUM1RCxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsSUFBSSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDekIsQ0FBQztBQWxCRCxnRkFrQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBqb2luLFxuICB3cmFwLFxufSBmcm9tICcuLi91dGlsaXRpZXMvcHJpbnRpbmcnO1xuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlZFN0cmluZyhzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtdWx0aWxpbmVTdHJpbmcoY29udGV4dCwgc3RyaW5nKSB7XG4gIGNvbnN0IGxpbmVzID0gc3RyaW5nLnNwbGl0KCdcXG4nKTtcbiAgbGluZXMuZm9yRWFjaCgobGluZSwgaW5kZXgpID0+IHtcbiAgICBjb25zdCBpc0xhc3RMaW5lID0gaW5kZXggIT0gbGluZXMubGVuZ3RoIC0gMTtcbiAgICBjb250ZXh0LnByaW50T25OZXdsaW5lKGBcIiR7ZXNjYXBlZFN0cmluZyhsaW5lKX1cImAgKyAoaXNMYXN0TGluZSA/ICcgKycgOiAnJykpO1xuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpY3Rpb25hcnlMaXRlcmFsRm9yRmllbGRBcmd1bWVudHMoYXJncykge1xuICBmdW5jdGlvbiBleHByZXNzaW9uRnJvbVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlLmtpbmQgPT09ICdWYXJpYWJsZScpIHtcbiAgICAgIHJldHVybiBgVmFyaWFibGUoXCIke3ZhbHVlLnZhcmlhYmxlTmFtZX1cIilgO1xuICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB3cmFwKCdbJywgam9pbih2YWx1ZS5tYXAoZXhwcmVzc2lvbkZyb21WYWx1ZSksICcsICcpLCAnXScpO1xuICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIHdyYXAoJ1snLCBqb2luKE9iamVjdC5lbnRyaWVzKHZhbHVlKS5tYXAoKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICByZXR1cm4gYFwiJHtrZXl9XCI6ICR7ZXhwcmVzc2lvbkZyb21WYWx1ZSh2YWx1ZSl9YDtcbiAgICAgIH0pLCAnLCAnKSB8fCAnOicsICddJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHdyYXAoJ1snLCBqb2luKGFyZ3MubWFwKGFyZyA9PiB7XG4gICAgcmV0dXJuIGBcIiR7YXJnLm5hbWV9XCI6ICR7ZXhwcmVzc2lvbkZyb21WYWx1ZShhcmcudmFsdWUpfWA7XG4gIH0pLCAnLCAnKSB8fCAnOicsICddJyk7XG59XG4iXX0=");"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const printing_1 = require("../utilities/printing");
function escapedString(string) {
    return string.replace(/"/g, '\\"');
}
exports.escapedString = escapedString;
function multilineString(context, string) {
    const lines = string.split('\n');
    lines.forEach((line, index) => {
        const isLastLine = index != lines.length - 1;
        context.printOnNewline(`"${escapedString(line)}"` + (isLastLine ? ' +' : ''));
    });
}
exports.multilineString = multilineString;
function dictionaryLiteralForFieldArguments(args) {
    function expressionFromValue(value) {
        if (value.kind === 'Variable') {
            return `Variable("${value.variableName}")`;
        } else
        if (Array.isArray(value)) {
            return printing_1.wrap('[', printing_1.join(value.map(expressionFromValue), ', '), ']');
        } else
        if (typeof value === 'object') {
            return printing_1.wrap('[', printing_1.join(Object.entries(value).map(([key, value]) => {
                return `"${key}": ${expressionFromValue(value)}`;
            }), ', ') || ':', ']');
        } else
        {
            return JSON.stringify(value);
        }
    }
    return printing_1.wrap('[', printing_1.join(args.map(arg => {
        return `"${arg.name}": ${expressionFromValue(arg.value)}`;
    }), ', ') || ':', ']');
}
exports.dictionaryLiteralForFieldArguments = dictionaryLiteralForFieldArguments;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZhbHVlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQUEsYUFBQSxRQUFBLHVCQUFBLENBQUE7QUFLQSxTQUFBLGFBQUEsQ0FBOEIsTUFBOUIsRUFBb0M7QUFDbEMsV0FBTyxPQUFPLE9BQVAsQ0FBZSxJQUFmLEVBQXFCLEtBQXJCLENBQVA7QUFDRDtBQUZELFFBQUEsYUFBQSxHQUFBLGFBQUE7QUFJQSxTQUFBLGVBQUEsQ0FBZ0MsT0FBaEMsRUFBeUMsTUFBekMsRUFBK0M7QUFDN0MsVUFBTSxRQUFRLE9BQU8sS0FBUCxDQUFhLElBQWIsQ0FBZDtBQUNBLFVBQU0sT0FBTixDQUFjLENBQUMsSUFBRCxFQUFPLEtBQVAsS0FBZ0I7QUFDNUIsY0FBTSxhQUFhLFNBQVMsTUFBTSxNQUFOLEdBQWUsQ0FBM0M7QUFDQSxnQkFBUSxjQUFSLENBQXVCLElBQUksY0FBYyxJQUFkLENBQW1CLEdBQXZCLElBQThCLGFBQWEsSUFBYixHQUFvQixFQUFsRCxDQUF2QjtBQUNELEtBSEQ7QUFJRDtBQU5ELFFBQUEsZUFBQSxHQUFBLGVBQUE7QUFRQSxTQUFBLGtDQUFBLENBQW1ELElBQW5ELEVBQXVEO0FBQ3JELGFBQUEsbUJBQUEsQ0FBNkIsS0FBN0IsRUFBa0M7QUFDaEMsWUFBSSxNQUFNLElBQU4sS0FBZSxVQUFuQixFQUErQjtBQUM3QixtQkFBTyxhQUFhLE1BQU0sWUFBWSxJQUF0QztBQUNELFNBRkQ7QUFFTyxZQUFJLE1BQU0sT0FBTixDQUFjLEtBQWQsQ0FBSixFQUEwQjtBQUMvQixtQkFBTyxXQUFBLElBQUEsQ0FBSyxHQUFMLEVBQVUsV0FBQSxJQUFBLENBQUssTUFBTSxHQUFOLENBQVUsbUJBQVYsQ0FBTCxFQUFxQyxJQUFyQyxDQUFWLEVBQXNELEdBQXRELENBQVA7QUFDRCxTQUZNO0FBRUEsWUFBSSxPQUFPLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDcEMsbUJBQU8sV0FBQSxJQUFBLENBQUssR0FBTCxFQUFVLFdBQUEsSUFBQSxDQUFLLE9BQU8sT0FBUCxDQUFlLEtBQWYsRUFBc0IsR0FBdEIsQ0FBMEIsQ0FBQyxDQUFDLEdBQUQsRUFBTSxLQUFOLENBQUQsS0FBaUI7QUFDL0QsdUJBQU8sSUFBSSxHQUFHLE1BQU0sb0JBQW9CLEtBQXBCLENBQTBCLEVBQTlDO0FBQ0QsYUFGcUIsQ0FBTCxFQUViLElBRmEsS0FFSixHQUZOLEVBRVcsR0FGWCxDQUFQO0FBR0QsU0FKTTtBQUlBO0FBQ0wsbUJBQU8sS0FBSyxTQUFMLENBQWUsS0FBZixDQUFQO0FBQ0Q7QUFDRjtBQUVELFdBQU8sV0FBQSxJQUFBLENBQUssR0FBTCxFQUFVLFdBQUEsSUFBQSxDQUFLLEtBQUssR0FBTCxDQUFTLE9BQU07QUFDbkMsZUFBTyxJQUFJLElBQUksSUFBSSxNQUFNLG9CQUFvQixJQUFJLEtBQXhCLENBQThCLEVBQXZEO0FBQ0QsS0FGcUIsQ0FBTCxFQUViLElBRmEsS0FFSixHQUZOLEVBRVcsR0FGWCxDQUFQO0FBR0Q7QUFsQkQsUUFBQSxrQ0FBQSxHQUFBLGtDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgam9pbixcbiAgd3JhcCxcbn0gZnJvbSAnLi4vdXRpbGl0aWVzL3ByaW50aW5nJztcblxuZXhwb3J0IGZ1bmN0aW9uIGVzY2FwZWRTdHJpbmcoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbXVsdGlsaW5lU3RyaW5nKGNvbnRleHQsIHN0cmluZykge1xuICBjb25zdCBsaW5lcyA9IHN0cmluZy5zcGxpdCgnXFxuJyk7XG4gIGxpbmVzLmZvckVhY2goKGxpbmUsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgaXNMYXN0TGluZSA9IGluZGV4ICE9IGxpbmVzLmxlbmd0aCAtIDE7XG4gICAgY29udGV4dC5wcmludE9uTmV3bGluZShgXCIke2VzY2FwZWRTdHJpbmcobGluZSl9XCJgICsgKGlzTGFzdExpbmUgPyAnICsnIDogJycpKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWN0aW9uYXJ5TGl0ZXJhbEZvckZpZWxkQXJndW1lbnRzKGFyZ3MpIHtcbiAgZnVuY3Rpb24gZXhwcmVzc2lvbkZyb21WYWx1ZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZS5raW5kID09PSAnVmFyaWFibGUnKSB7XG4gICAgICByZXR1cm4gYFZhcmlhYmxlKFwiJHt2YWx1ZS52YXJpYWJsZU5hbWV9XCIpYDtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICByZXR1cm4gd3JhcCgnWycsIGpvaW4odmFsdWUubWFwKGV4cHJlc3Npb25Gcm9tVmFsdWUpLCAnLCAnKSwgJ10nKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiB3cmFwKCdbJywgam9pbihPYmplY3QuZW50cmllcyh2YWx1ZSkubWFwKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgcmV0dXJuIGBcIiR7a2V5fVwiOiAke2V4cHJlc3Npb25Gcm9tVmFsdWUodmFsdWUpfWA7XG4gICAgICB9KSwgJywgJykgfHwgJzonLCAnXScpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB3cmFwKCdbJywgam9pbihhcmdzLm1hcChhcmcgPT4ge1xuICAgIHJldHVybiBgXCIke2FyZy5uYW1lfVwiOiAke2V4cHJlc3Npb25Gcm9tVmFsdWUoYXJnLnZhbHVlKX1gO1xuICB9KSwgJywgJykgfHwgJzonLCAnXScpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==