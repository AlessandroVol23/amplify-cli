{"version":3,"sources":["array.ts"],"names":[],"mappings":";;AAQA,OAAO,cAAP,CAAsB,MAAM,SAA5B,EAAuC,SAAvC,EAAkD;AAChD,WAAO,UAA8B,UAA9B,EAAwF,OAAxF,EAAqG;AAC1G,eAAO,GAAG,MAAH,CAAU,KAAV,CAAgB,EAAhB,EAAoB,KAAK,GAAL,CAAS,UAAT,EAAqB,OAArB,CAApB,CAAP;AACD,KAH+C;AAIhD,gBAAY,KAJoC,EAAlD","sourcesContent":["export {};\n\ndeclare global {\n  interface Array<T> {\n    flatMap<U>(callbackfn: (value: T, index: number, array: T[]) => U[] | undefined, thisArg?: any): U[];\n  }\n}\n\nObject.defineProperty(Array.prototype, 'flatMap', {\n  value: function<T,U>(this: Array<T>, callbackfn: (value: T, index: number, array: T[]) => U[], thisArg?: any): U[] {\n    return [].concat.apply([], this.map(callbackfn, thisArg));\n  },\n  enumerable: false\n});\n"],"sourceRoot":""}