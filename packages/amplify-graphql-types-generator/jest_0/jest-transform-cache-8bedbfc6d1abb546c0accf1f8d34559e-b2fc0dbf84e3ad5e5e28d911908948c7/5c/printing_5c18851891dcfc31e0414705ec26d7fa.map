{"version":3,"sources":["printing.ts"],"names":[],"mappings":";;AAMA,SAAA,IAAA,CAAqB,UAArB,EAAyC,SAAzC,EAA2D;AACzD,WAAO,aAAa,WAAW,MAAX,CAAkB,KAAK,CAAvB,EAA0B,IAA1B,CAA+B,aAAa,EAA5C,CAAb,GAA+D,EAAtE;AACD;AAFD,QAAA,IAAA,GAAA,IAAA;AAQA,SAAA,KAAA,CAAsB,KAAtB,EAAkC;AAChC,WAAO,SAAS,MAAM,MAAN,KAAiB,CAA1B;AACL,WAAO,QAAQ,KAAK,KAAL,EAAY,IAAZ,CAAf,IAAoC,KAD/B;AAEL,QAFF;AAGD;AAJD,QAAA,KAAA,GAAA,KAAA;AAUA,SAAA,IAAA,CAAqB,KAArB,EAAoC,WAApC,EAA0D,GAA1D,EAAsE;AACpE,WAAO;AACL,YAAQ,WAAR,IAAuB,OAAO,EAA9B,CADK;AAEL,MAFF;AAGD;AAJD,QAAA,IAAA,GAAA,IAAA;AAMA,SAAA,MAAA,CAAuB,WAAvB,EAA2C;AACzC,WAAO,eAAe,YAAY,OAAZ,CAAoB,KAApB,EAA2B,MAA3B,CAAtB;AACD;AAFD,QAAA,MAAA,GAAA,MAAA","sourcesContent":["// Code generation helper functions copied from graphql-js (https://github.com/graphql/graphql-js)\n\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nexport function join(maybeArray?: any[], separator?: string) {\n  return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\n\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nexport function block(array: any[]) {\n  return array && array.length !== 0 ?\n    indent('{\\n' + join(array, '\\n')) + '\\n}' :\n    '{}';\n}\n\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nexport function wrap(start: string, maybeString?: string, end?: string) {\n  return maybeString ?\n    start + maybeString + (end || '') :\n    '';\n}\n\nexport function indent(maybeString?: string) {\n  return maybeString && maybeString.replace(/\\n/g, '\\n  ');\n}\n"],"sourceRoot":""}