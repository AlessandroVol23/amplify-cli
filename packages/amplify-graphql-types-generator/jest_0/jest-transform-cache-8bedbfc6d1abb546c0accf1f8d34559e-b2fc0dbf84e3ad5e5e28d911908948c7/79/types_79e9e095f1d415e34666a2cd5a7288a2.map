{"version":3,"sources":["types.js"],"names":[],"mappings":";;AASA,MAAA,YAAA,QAAA,SAAA,CAAA;AAYA,MAAM,mBAAmB;AACvB,KAAC,UAAA,aAAA,CAAc,IAAf,GAAsB,QADC;AAEvB,KAAC,UAAA,UAAA,CAAW,IAAZ,GAAmB,QAFI;AAGvB,KAAC,UAAA,YAAA,CAAa,IAAd,GAAqB,QAHE;AAIvB,KAAC,UAAA,cAAA,CAAe,IAAhB,GAAuB,SAJA;AAKvB,KAAC,UAAA,SAAA,CAAU,IAAX,GAAkB,QALK,EAAzB;;AAQA,SAAA,uBAAA,CAAwC,OAAxC,EAAiD,IAAjD,EAAuD,YAAvD,EAAqE,WAAW,IAAhF,EAAoF;AAClF,QAAI,gBAAgB,UAAA,cAApB,EAAoC;AAClC,eAAO,wBAAwB,OAAxB,EAAiC,KAAK,MAAtC,EAA8C,YAA9C,EAA4D,KAA5D,CAAP;AACD;AAED,QAAI,QAAJ;AACA,QAAI,gBAAgB,UAAA,WAApB,EAAiC;AAC/B,mBAAW,UAAU,wBAAwB,OAAxB,EAAiC,KAAK,MAAtC,EAA8C,YAA9C,CAA2D,IAAhF;AACD,KAFD;AAEO,QAAI,gBAAgB,UAAA,iBAApB,EAAuC;AAC5C,mBAAW,iBAAiB,KAAK,IAAtB,MAAgC,QAAQ,wBAAR,GAAmC,QAAQ,mBAAR,GAA8B,KAAK,IAAtE,GAA6E,KAA7G,CAAX;AACD,KAFM;AAEA;AACL,mBAAW,gBAAgB,KAAK,IAAhC;AACD;AAED,WAAO,WAAW,MAAM,QAAjB,GAA4B,QAAnC;AACD;AAfD,QAAA,uBAAA,GAAA,uBAAA","sourcesContent":["import {\n  join,\n  block,\n  wrap,\n  indent\n} from '../utilities/printing';\n\nimport { camelCase } from 'change-case';\n\nimport {\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLScalarType,\n  GraphQLEnumType\n} from 'graphql';\n\nconst builtInScalarMap = {\n  [GraphQLString.name]: 'string',\n  [GraphQLInt.name]: 'number',\n  [GraphQLFloat.name]: 'number',\n  [GraphQLBoolean.name]: 'boolean',\n  [GraphQLID.name]: 'string',\n}\n\nexport function typeNameFromGraphQLType(context, type, bareTypeName, nullable = true) {\n  if (type instanceof GraphQLNonNull) {\n    return typeNameFromGraphQLType(context, type.ofType, bareTypeName, false)\n  }\n\n  let typeName;\n  if (type instanceof GraphQLList) {\n    typeName = `Array< ${typeNameFromGraphQLType(context, type.ofType, bareTypeName)} >`;\n  } else if (type instanceof GraphQLScalarType) {\n    typeName = builtInScalarMap[type.name] || (context.passthroughCustomScalars ? context.customScalarsPrefix + type.name : 'any');\n  } else {\n    typeName = bareTypeName || type.name;\n  }\n\n  return nullable ? '?' + typeName : typeName;\n}\n"],"sourceRoot":""}