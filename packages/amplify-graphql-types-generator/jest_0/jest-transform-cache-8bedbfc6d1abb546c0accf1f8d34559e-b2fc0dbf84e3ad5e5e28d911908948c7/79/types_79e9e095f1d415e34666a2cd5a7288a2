20d8a7fb012d5ff04bf326877055a601
'use strict';require('ts-jest').install("/c/Users/Sandro/repo/amplify-cli/packages/amplify-graphql-types-generator/src/flow/types.js", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst graphql_1 = require(\"graphql\");\nconst builtInScalarMap = {\n    [graphql_1.GraphQLString.name]: 'string',\n    [graphql_1.GraphQLInt.name]: 'number',\n    [graphql_1.GraphQLFloat.name]: 'number',\n    [graphql_1.GraphQLBoolean.name]: 'boolean',\n    [graphql_1.GraphQLID.name]: 'string',\n};\nfunction typeNameFromGraphQLType(context, type, bareTypeName, nullable = true) {\n    if (type instanceof graphql_1.GraphQLNonNull) {\n        return typeNameFromGraphQLType(context, type.ofType, bareTypeName, false);\n    }\n    let typeName;\n    if (type instanceof graphql_1.GraphQLList) {\n        typeName = `Array< ${typeNameFromGraphQLType(context, type.ofType, bareTypeName)} >`;\n    }\n    else if (type instanceof graphql_1.GraphQLScalarType) {\n        typeName = builtInScalarMap[type.name] || (context.passthroughCustomScalars ? context.customScalarsPrefix + type.name : 'any');\n    }\n    else {\n        typeName = bareTypeName || type.name;\n    }\n    return nullable ? '?' + typeName : typeName;\n}\nexports.typeNameFromGraphQLType = typeNameFromGraphQLType;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0eXBlcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQVNBLHFDQVVpQjtBQUVqQixNQUFNLGdCQUFnQixHQUFHO0lBQ3ZCLENBQUMsdUJBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRO0lBQzlCLENBQUMsb0JBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRO0lBQzNCLENBQUMsc0JBQVksQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRO0lBQzdCLENBQUMsd0JBQWMsQ0FBQyxJQUFJLENBQUMsRUFBRSxTQUFTO0lBQ2hDLENBQUMsbUJBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRSxRQUFRO0NBQzNCLENBQUE7QUFFRCxpQ0FBd0MsT0FBTyxFQUFFLElBQUksRUFBRSxZQUFZLEVBQUUsUUFBUSxHQUFHLElBQUk7SUFDbEYsSUFBSSxJQUFJLFlBQVksd0JBQWMsRUFBRTtRQUNsQyxPQUFPLHVCQUF1QixDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLFlBQVksRUFBRSxLQUFLLENBQUMsQ0FBQTtLQUMxRTtJQUVELElBQUksUUFBUSxDQUFDO0lBQ2IsSUFBSSxJQUFJLFlBQVkscUJBQVcsRUFBRTtRQUMvQixRQUFRLEdBQUcsVUFBVSx1QkFBdUIsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsSUFBSSxDQUFDO0tBQ3RGO1NBQU0sSUFBSSxJQUFJLFlBQVksMkJBQWlCLEVBQUU7UUFDNUMsUUFBUSxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLG1CQUFtQixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hJO1NBQU07UUFDTCxRQUFRLEdBQUcsWUFBWSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUM7S0FDdEM7SUFFRCxPQUFPLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO0FBQzlDLENBQUM7QUFmRCwwREFlQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGpvaW4sXG4gIGJsb2NrLFxuICB3cmFwLFxuICBpbmRlbnRcbn0gZnJvbSAnLi4vdXRpbGl0aWVzL3ByaW50aW5nJztcblxuaW1wb3J0IHsgY2FtZWxDYXNlIH0gZnJvbSAnY2hhbmdlLWNhc2UnO1xuXG5pbXBvcnQge1xuICBHcmFwaFFMU3RyaW5nLFxuICBHcmFwaFFMSW50LFxuICBHcmFwaFFMRmxvYXQsXG4gIEdyYXBoUUxCb29sZWFuLFxuICBHcmFwaFFMSUQsXG4gIEdyYXBoUUxMaXN0LFxuICBHcmFwaFFMTm9uTnVsbCxcbiAgR3JhcGhRTFNjYWxhclR5cGUsXG4gIEdyYXBoUUxFbnVtVHlwZVxufSBmcm9tICdncmFwaHFsJztcblxuY29uc3QgYnVpbHRJblNjYWxhck1hcCA9IHtcbiAgW0dyYXBoUUxTdHJpbmcubmFtZV06ICdzdHJpbmcnLFxuICBbR3JhcGhRTEludC5uYW1lXTogJ251bWJlcicsXG4gIFtHcmFwaFFMRmxvYXQubmFtZV06ICdudW1iZXInLFxuICBbR3JhcGhRTEJvb2xlYW4ubmFtZV06ICdib29sZWFuJyxcbiAgW0dyYXBoUUxJRC5uYW1lXTogJ3N0cmluZycsXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0eXBlTmFtZUZyb21HcmFwaFFMVHlwZShjb250ZXh0LCB0eXBlLCBiYXJlVHlwZU5hbWUsIG51bGxhYmxlID0gdHJ1ZSkge1xuICBpZiAodHlwZSBpbnN0YW5jZW9mIEdyYXBoUUxOb25OdWxsKSB7XG4gICAgcmV0dXJuIHR5cGVOYW1lRnJvbUdyYXBoUUxUeXBlKGNvbnRleHQsIHR5cGUub2ZUeXBlLCBiYXJlVHlwZU5hbWUsIGZhbHNlKVxuICB9XG5cbiAgbGV0IHR5cGVOYW1lO1xuICBpZiAodHlwZSBpbnN0YW5jZW9mIEdyYXBoUUxMaXN0KSB7XG4gICAgdHlwZU5hbWUgPSBgQXJyYXk8ICR7dHlwZU5hbWVGcm9tR3JhcGhRTFR5cGUoY29udGV4dCwgdHlwZS5vZlR5cGUsIGJhcmVUeXBlTmFtZSl9ID5gO1xuICB9IGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBHcmFwaFFMU2NhbGFyVHlwZSkge1xuICAgIHR5cGVOYW1lID0gYnVpbHRJblNjYWxhck1hcFt0eXBlLm5hbWVdIHx8IChjb250ZXh0LnBhc3N0aHJvdWdoQ3VzdG9tU2NhbGFycyA/IGNvbnRleHQuY3VzdG9tU2NhbGFyc1ByZWZpeCArIHR5cGUubmFtZSA6ICdhbnknKTtcbiAgfSBlbHNlIHtcbiAgICB0eXBlTmFtZSA9IGJhcmVUeXBlTmFtZSB8fCB0eXBlLm5hbWU7XG4gIH1cblxuICByZXR1cm4gbnVsbGFibGUgPyAnPycgKyB0eXBlTmFtZSA6IHR5cGVOYW1lO1xufVxuIl19");"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const builtInScalarMap = {
    [graphql_1.GraphQLString.name]: 'string',
    [graphql_1.GraphQLInt.name]: 'number',
    [graphql_1.GraphQLFloat.name]: 'number',
    [graphql_1.GraphQLBoolean.name]: 'boolean',
    [graphql_1.GraphQLID.name]: 'string' };

function typeNameFromGraphQLType(context, type, bareTypeName, nullable = true) {
    if (type instanceof graphql_1.GraphQLNonNull) {
        return typeNameFromGraphQLType(context, type.ofType, bareTypeName, false);
    }
    let typeName;
    if (type instanceof graphql_1.GraphQLList) {
        typeName = `Array< ${typeNameFromGraphQLType(context, type.ofType, bareTypeName)} >`;
    } else
    if (type instanceof graphql_1.GraphQLScalarType) {
        typeName = builtInScalarMap[type.name] || (context.passthroughCustomScalars ? context.customScalarsPrefix + type.name : 'any');
    } else
    {
        typeName = bareTypeName || type.name;
    }
    return nullable ? '?' + typeName : typeName;
}
exports.typeNameFromGraphQLType = typeNameFromGraphQLType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBU0EsTUFBQSxZQUFBLFFBQUEsU0FBQSxDQUFBO0FBWUEsTUFBTSxtQkFBbUI7QUFDdkIsS0FBQyxVQUFBLGFBQUEsQ0FBYyxJQUFmLEdBQXNCLFFBREM7QUFFdkIsS0FBQyxVQUFBLFVBQUEsQ0FBVyxJQUFaLEdBQW1CLFFBRkk7QUFHdkIsS0FBQyxVQUFBLFlBQUEsQ0FBYSxJQUFkLEdBQXFCLFFBSEU7QUFJdkIsS0FBQyxVQUFBLGNBQUEsQ0FBZSxJQUFoQixHQUF1QixTQUpBO0FBS3ZCLEtBQUMsVUFBQSxTQUFBLENBQVUsSUFBWCxHQUFrQixRQUxLLEVBQXpCOztBQVFBLFNBQUEsdUJBQUEsQ0FBd0MsT0FBeEMsRUFBaUQsSUFBakQsRUFBdUQsWUFBdkQsRUFBcUUsV0FBVyxJQUFoRixFQUFvRjtBQUNsRixRQUFJLGdCQUFnQixVQUFBLGNBQXBCLEVBQW9DO0FBQ2xDLGVBQU8sd0JBQXdCLE9BQXhCLEVBQWlDLEtBQUssTUFBdEMsRUFBOEMsWUFBOUMsRUFBNEQsS0FBNUQsQ0FBUDtBQUNEO0FBRUQsUUFBSSxRQUFKO0FBQ0EsUUFBSSxnQkFBZ0IsVUFBQSxXQUFwQixFQUFpQztBQUMvQixtQkFBVyxVQUFVLHdCQUF3QixPQUF4QixFQUFpQyxLQUFLLE1BQXRDLEVBQThDLFlBQTlDLENBQTJELElBQWhGO0FBQ0QsS0FGRDtBQUVPLFFBQUksZ0JBQWdCLFVBQUEsaUJBQXBCLEVBQXVDO0FBQzVDLG1CQUFXLGlCQUFpQixLQUFLLElBQXRCLE1BQWdDLFFBQVEsd0JBQVIsR0FBbUMsUUFBUSxtQkFBUixHQUE4QixLQUFLLElBQXRFLEdBQTZFLEtBQTdHLENBQVg7QUFDRCxLQUZNO0FBRUE7QUFDTCxtQkFBVyxnQkFBZ0IsS0FBSyxJQUFoQztBQUNEO0FBRUQsV0FBTyxXQUFXLE1BQU0sUUFBakIsR0FBNEIsUUFBbkM7QUFDRDtBQWZELFFBQUEsdUJBQUEsR0FBQSx1QkFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGpvaW4sXG4gIGJsb2NrLFxuICB3cmFwLFxuICBpbmRlbnRcbn0gZnJvbSAnLi4vdXRpbGl0aWVzL3ByaW50aW5nJztcblxuaW1wb3J0IHsgY2FtZWxDYXNlIH0gZnJvbSAnY2hhbmdlLWNhc2UnO1xuXG5pbXBvcnQge1xuICBHcmFwaFFMU3RyaW5nLFxuICBHcmFwaFFMSW50LFxuICBHcmFwaFFMRmxvYXQsXG4gIEdyYXBoUUxCb29sZWFuLFxuICBHcmFwaFFMSUQsXG4gIEdyYXBoUUxMaXN0LFxuICBHcmFwaFFMTm9uTnVsbCxcbiAgR3JhcGhRTFNjYWxhclR5cGUsXG4gIEdyYXBoUUxFbnVtVHlwZVxufSBmcm9tICdncmFwaHFsJztcblxuY29uc3QgYnVpbHRJblNjYWxhck1hcCA9IHtcbiAgW0dyYXBoUUxTdHJpbmcubmFtZV06ICdzdHJpbmcnLFxuICBbR3JhcGhRTEludC5uYW1lXTogJ251bWJlcicsXG4gIFtHcmFwaFFMRmxvYXQubmFtZV06ICdudW1iZXInLFxuICBbR3JhcGhRTEJvb2xlYW4ubmFtZV06ICdib29sZWFuJyxcbiAgW0dyYXBoUUxJRC5uYW1lXTogJ3N0cmluZycsXG59XG5cbmV4cG9ydCBmdW5jdGlvbiB0eXBlTmFtZUZyb21HcmFwaFFMVHlwZShjb250ZXh0LCB0eXBlLCBiYXJlVHlwZU5hbWUsIG51bGxhYmxlID0gdHJ1ZSkge1xuICBpZiAodHlwZSBpbnN0YW5jZW9mIEdyYXBoUUxOb25OdWxsKSB7XG4gICAgcmV0dXJuIHR5cGVOYW1lRnJvbUdyYXBoUUxUeXBlKGNvbnRleHQsIHR5cGUub2ZUeXBlLCBiYXJlVHlwZU5hbWUsIGZhbHNlKVxuICB9XG5cbiAgbGV0IHR5cGVOYW1lO1xuICBpZiAodHlwZSBpbnN0YW5jZW9mIEdyYXBoUUxMaXN0KSB7XG4gICAgdHlwZU5hbWUgPSBgQXJyYXk8ICR7dHlwZU5hbWVGcm9tR3JhcGhRTFR5cGUoY29udGV4dCwgdHlwZS5vZlR5cGUsIGJhcmVUeXBlTmFtZSl9ID5gO1xuICB9IGVsc2UgaWYgKHR5cGUgaW5zdGFuY2VvZiBHcmFwaFFMU2NhbGFyVHlwZSkge1xuICAgIHR5cGVOYW1lID0gYnVpbHRJblNjYWxhck1hcFt0eXBlLm5hbWVdIHx8IChjb250ZXh0LnBhc3N0aHJvdWdoQ3VzdG9tU2NhbGFycyA/IGNvbnRleHQuY3VzdG9tU2NhbGFyc1ByZWZpeCArIHR5cGUubmFtZSA6ICdhbnknKTtcbiAgfSBlbHNlIHtcbiAgICB0eXBlTmFtZSA9IGJhcmVUeXBlTmFtZSB8fCB0eXBlLm5hbWU7XG4gIH1cblxuICByZXR1cm4gbnVsbGFibGUgPyAnPycgKyB0eXBlTmFtZSA6IHR5cGVOYW1lO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==